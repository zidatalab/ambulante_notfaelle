{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/infobox/box/box.component.ts","./src/app/components/infobox/box/box.component.html","./src/app/components/leafletmap/map/map.component.ts","./src/app/components/leafletmap/map/map.component.html","./src/app/components/plotly/plot/plot.component.ts","./src/app/components/plotly/plot/plot.component.html","./src/app/components/table/table/table.component.ts","./src/app/components/table/table/table.component.html","./src/app/pages/admin/admin.component.ts","./src/app/pages/admin/admin.component.html","./src/app/pages/admin/components/addUserDialog.ts","./src/app/pages/admin/components/addUserDialog.html","./src/app/pages/admin/components/deleteUserDialog.ts","./src/app/pages/admin/components/deleteUserDialog.html","./src/app/pages/admin/components/updateUserDialog.ts","./src/app/pages/admin/components/updateUserDialog.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/private/private.component.ts","./src/app/pages/private/private.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/start/start.component.html","./src/app/pages/start/start.component.ts","./src/app/services/api.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/csvexport.service.ts","./src/app/services/db.ts","./src/app/services/dbservice.service.ts","./src/app/services/interceptor-service.service.ts","./src/app/services/replace_pipe.ts","./src/app/services/smed-aggregation.service.ts","./src/environments/environment.ts","./src/main.ts","./src/material/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { StartComponent } from './pages/start/start.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport {PrivateComponent} from './pages/private/private.component'\r\nimport { AdminComponent } from './pages/admin/admin.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: StartComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  {\r\n    path: 'profile', component: ProfileComponent,\r\n    canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'private', component: PrivateComponent,\r\n    canActivate: [AuthGuardService]\r\n  }, \r\n  {\r\n    path: 'admin', component: AdminComponent,\r\n    canActivate: [AuthGuardService]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpParams } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, RouterEvent } from '@angular/router';\r\nimport { ApiService } from './services/api.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { DBService } from './services/dbservice.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Test Dashboard';\r\n  public currentuser: any;\r\n  public currentroute: string;\r\n  loginoption = true;\r\n  public loginstatus: boolean;\r\n  public adminstatus: boolean;\r\n  currentdate: any;\r\n  public apiconnection: number = 0;\r\n  isExtern: boolean = false\r\n\r\n  constructor(\r\n    private _auth: AuthService,\r\n    private _api: ApiService,\r\n    private router: Router,\r\n    private db: DBService\r\n  ) {\r\n\r\n    router.events.subscribe((event: RouterEvent) => {\r\n      if (event.url !== this.currentroute && event.url) {\r\n        this.currentroute = event.url;\r\n        this._api.countView(event.url);\r\n      };\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.db.clean();\r\n    this.checkapiconnection();\r\n    this.currentdate = new Date();\r\n    \r\n    this._auth.currentUser.subscribe(data => {\r\n      if (data) {\r\n        this.currentuser = data;\r\n        this.loginstatus = true;\r\n        this.adminstatus = this.currentuser[\"is_admin\"] || this.currentuser[\"is_superadmin\"];\r\n        this.isExtern = this._auth.isExtern()\r\n        setTimeout(() => { this.autorefreshdata(); }, 1000);\r\n        setInterval(() => { this._auth.refreshToken(); this.checkapiconnection(); }, 1000 * 60 * 10);\r\n      }\r\n      else {\r\n        this.loginstatus = false;\r\n        this.adminstatus = false;\r\n        setTimeout(() => { this.autorefreshdata(); }, 0);\r\n      };\r\n    });\r\n  }\r\n\r\n  public checkapiconnection() {\r\n    this._api.getTypeRequest('openapi.json').subscribe(data => { this.apiconnection = 1; }, error => { this.apiconnection = 2; })\r\n  }\r\n\r\n  public checkforopentabs() {\r\n    // Broadcast that you're opening a page.\r\n    localStorage.openpages = Date.now();\r\n    window.addEventListener('storage', function (e) {\r\n      if (e.key == \"openpages\") {\r\n        // Listen if anybody else is opening the same page!\r\n        localStorage.page_available = Date.now();\r\n      }\r\n      if (e.key == \"page_available\") {\r\n        alert(\"Eine andere Seite ist bereits offen. Bitte nutzen Sie diese Anwendung nur auf einem Tab, um Probleme zu vermeiden.\");\r\n\r\n      }\r\n    }, false);\r\n  }\r\n\r\n  public autorefreshdata() {\r\n    this.updatemetadata().subscribe(\r\n      data => {\r\n        this.setmetadata(\"metadata\", data[\"data\"]);\r\n      });\r\n    // this.getsortdata().subscribe(data => {\r\n    //     this.setmetadata(\"sortdata\",data[\"datalevels\"]);  \r\n    //     if (data[\"geodata\"]){\r\n    //       this.setmetadata(\"geodata\",this._api.getValues(data[\"geodata\"],'_id'));        \r\n    //     }\r\n    //     else {\r\n    //       this.setmetadata(\"geodata\",[]); \r\n    //     }\r\n\r\n    //   });\r\n  }\r\n\r\n  logout() {\r\n    this._auth.logout();\r\n    this.db.clean();\r\n    localStorage.clear();\r\n    this.autorefreshdata();\r\n    this.loginstatus = false;\r\n    this.adminstatus = false;\r\n    setTimeout(() => { this.router.navigate(['/']) }, 1500)\r\n  };\r\n\r\n  getsortdata() {\r\n    return this._api.getTypeRequest(\"get_sortlevels/\" + this._api.REST_API_SERVER_CLIENTID);\r\n  }\r\n\r\n  updatemetadata() {\r\n    let client = this._api.REST_API_SERVER_CLIENTID\r\n    return this._api.getTypeRequest(\"get_metadata/\" + client);\r\n  }\r\n\r\n  setmetadata(name, data) {\r\n    localStorage.setItem(name, JSON.stringify(data));\r\n  }\r\n}\r\n","<mat-sidenav-container autosize=\"true\" scrollable=\"false\">\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"transparent\">\r\n      <button (click)=\"drawer.toggle()\" mat-icon-button class=\"example-icon\"\r\n        aria-label=\"Example icon-button with menu icon\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n      <!-- <span>{{this.title}}</span> -->\r\n      <span class=\"example-spacer\"></span>\r\n      <div fxShow=\"true\" fxHide.lt-sm=\"true\">\r\n        <a href=\"https://www.zi.de/smed\">\r\n          <img src=\"./assets/branding/smed_logo.png\" class=\"brandinglogo\">\r\n        </a>\r\n        <a href=\"https://www.zi.de\">\r\n          <img src=\"./assets/branding/zi_Logo.png\"\r\n            class=\"brandinglogo\">\r\n        </a>\r\n      </div>\r\n      <div fxShow=\"false\" fxShow.lt-sm=\"true\">\r\n        <a href=\"https://www.zi.de\">\r\n          <img src=\"./assets/branding/zi_Logo.png\" class=\"brandinglogo\">\r\n        </a>\r\n      </div>\r\n    </mat-toolbar>\r\n    <main>\r\n      <section class=\"mat-typography\">\r\n        <mat-drawer-container autosize>\r\n          <mat-drawer #drawer mode=\"push\" position=\"start\" autoFocus=\"false\">\r\n            <div class=\"menucontainer\">\r\n              <ng-container>\r\n                <p class=\"primarycolor\"><strong>Navigation</strong></p>\r\n              </ng-container>\r\n              <div>\r\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/\">\r\n                  <mat-icon class=\"icon\">home</mat-icon>\r\n                  <span>Startseite</span>\r\n                </a>\r\n              </div>\r\n              <div *ngIf=\"this.loginoption && !this.loginstatus\">\r\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/login\">\r\n                  <mat-icon class=\"icon\">login</mat-icon>\r\n                  <span>Anmelden</span>\r\n                </a>\r\n              </div>\r\n              <div *ngIf=\"this.loginstatus\">\r\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/profile\">\r\n                  <mat-icon class=\"icon\">account_box</mat-icon>\r\n                  <span>Benutzerprofil</span>\r\n                </a>\r\n              </div>\r\n              <div *ngIf=\"this.currentuser && !this.isExtern\">\r\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/private\">\r\n                  <mat-icon class=\"icon\">dashboard</mat-icon>\r\n                  <span>Erweiterte Analysen</span>\r\n                </a>\r\n              </div>\r\n              <div *ngIf=\"this.adminstatus\">\r\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/admin\">\r\n                  <mat-icon class=\"icon\">admin_panel_settings</mat-icon>\r\n                  <span>Administration</span>\r\n                </a>\r\n              </div>\r\n              <div *ngIf=\"this.loginstatus\">\r\n                <a mat-icon-button (click)=\"drawer.toggle();logout();\" href=\"./\">\r\n                  <mat-icon class=\"icon\">logout</mat-icon>\r\n                  <span>Ausloggen</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </mat-drawer>\r\n          <mat-drawer-content>\r\n            <div class=\"offlinemsg\" *ngIf=\"false\"><strong>Keine Internetverbindung</strong><br>Dieses Portal benötigt\r\n              eine aktive Internetverbindung.</div>\r\n            <div class=\"offlinemsg\" *ngIf=\"this.apiconnection==2\"><strong>Keine Verbindung zur API</strong><br>Dieses\r\n              Portal benötigt\r\n              eine aktive Internetverbindung.</div>\r\n            <router-outlet></router-outlet>\r\n          </mat-drawer-content>\r\n        </mat-drawer-container>\r\n      </section>\r\n    </main>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n<!-- Footer nur für Desktop Screen -->\r\n<footer>\r\n  <div class=\"footerstyle\">\r\n    <div fxLayout=\"column\" fxLayoutGap=\"0.5rem\">\r\n      <div fxLayout=\"column wrap\" fxLayoutAlign=\"space-around start\">\r\n        <div fxflex=28 fxHide.xs>\r\n          <p>\r\n            <mat-list style=\"color:white;\">\r\n              <mat-list-item>\r\n                <p style=\"color:white;\"><strong>Navigation</strong></p>\r\n              </mat-list-item>\r\n              <mat-list-item><a style=\"color:white;\" href=\"https://www.zi.de/meta/impressum\">Impressum</a>\r\n              </mat-list-item>\r\n              <mat-list-item><a style=\"color:white;\"\r\n                  href=\"https://www.zi.de/footer/datenschutzhinweis\">Datenschutzhinweise</a></mat-list-item>\r\n            </mat-list>\r\n          </p>\r\n        </div>\r\n        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-between end\">\r\n          <div fxFlex>\r\n            <br>\r\n          </div>\r\n          <div style=\"padding:0.5rem;text-align: center;\">\r\n            <p>© {{this.currentdate | date:'Y'}} Zentralinstitut für die kassenärztliche Versorgung in der\r\n              Bundesrepublik\r\n              Deutschland</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MaterialModule} from './../material/material.module'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { StartComponent } from './pages/start/start.component';\r\nimport * as PlotlyJS from 'plotly.js/dist/plotly.js';\r\nimport { PlotlyModule ,PlotlyService} from 'angular-plotly.js';\r\nimport * as DeLocale from '../../node_modules/plotly.js/lib/locales/de-ch.js'\r\nimport * as SVLocale from 'plotly.js/lib/locales/de.js';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MapComponent } from './components/leafletmap/map/map.component';\r\nimport { PlotComponent } from './components/plotly/plot/plot.component';\r\nimport { TableComponent } from './components/table/table/table.component';\r\nimport { BoxComponent } from './components/infobox/box/box.component';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport locales from '@angular/common/locales/de';\r\nimport { LOCALE_ID } from '@angular/core';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \r\nimport { InterceptorService } from './services/interceptor-service.service';\r\nimport { PrivateComponent } from './pages/private/private.component';\r\nimport { AdminComponent } from './pages/admin/admin.component' \r\nimport { ReplacePipe } from './services/replace_pipe';\r\nimport { AddUserDialog } from './pages/admin/components/addUserDialog';\r\nimport { UpdateUserDialog } from './pages/admin/components/updateUserDialog';\r\nimport { DeleteUserDialog } from './pages/admin/components/deleteUserDialog';\r\n\r\nPlotlyModule.plotlyjs = PlotlyJS;\r\n\r\nregisterLocaleData(locales, 'de');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StartComponent,\r\n    MapComponent,\r\n    PlotComponent,\r\n    TableComponent,\r\n    BoxComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    PrivateComponent,\r\n    AdminComponent,\r\n    ReplacePipe,\r\n    AddUserDialog,\r\n    UpdateUserDialog,\r\n    DeleteUserDialog\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    PlotlyModule,\r\n    FlexLayoutModule  ,\r\n    ReactiveFormsModule, \r\n    FormsModule, \r\n    HttpClientModule \r\n  ],\r\n  providers: [\r\n    // {provide: LOCALE_ID, useValue: 'de-DE' },PlotlyService,\r\n\r\n  // This needs to be uncommented to provide  auth\r\n  { provide: HTTP_INTERCEPTORS, \r\n  useClass: InterceptorService, \r\n  multi: true } \r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { \r\n  constructor(private plotlyService: PlotlyService) {\r\n    this.setupPlotly()\r\n  }\r\n\r\n  private async setupPlotly() {\r\n    const plotly = await this.plotlyService.getPlotly()\r\n    plotly.register(DeLocale)\r\n    plotly.setPlotConfig({ locale: 'de' })\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SelectControlValueAccessor } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-box',\r\n  templateUrl: './box.component.html',\r\n  styleUrls: ['./box.component.scss']\r\n})\r\nexport class BoxComponent implements OnInit {\r\n  @Input() value: number;\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() colors: string[];\r\n  @Input() cutoffs: string[];\r\n  @Input() maincolor: string;\r\n  @Input() numberformat: string;\r\n  @Input() maticon: string;\r\n  @Input() textbehind: boolean;\r\n  itemcolor: string;\r\n\r\n  constructor(private api: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    this.value = Number(this.value);\r\n    if (!this.numberformat) { this.numberformat = '1.1-1'; }\r\n    if (!this.maincolor) { this.maincolor = this.api.primarycolor; }\r\n    if (!this.cutoffs) { this.cutoffs = []; }\r\n    this.setcolor();\r\n  };\r\n\r\n  setcolor() {\r\n    let color = this.maincolor;\r\n    this.itemcolor = this.maincolor;\r\n\r\n    if (this.cutoffs.length > 0 && this.cutoffs.length == this.colors.length) {\r\n      let i = 0;\r\n      for (let cutvalue of this.cutoffs) {\r\n        if (Number(cutvalue) <= this.value) {\r\n          color = this.colors[i];\r\n        }\r\n        i = i + 1;\r\n      }\r\n    }\r\n    this.itemcolor = color;\r\n  }\r\n}\r\n","<!-- <mat-card [style.background-color]=\"this.itemcolor\">\r\n  <div fxLayout=\"row\">\r\n    <div fxFlex>\r\n      <h1 *ngIf=\"!this.textbehind\">{{this.title}}{{this.value | number: this.numberformat : \"de\"}}</h1>\r\n      <h1 *ngIf=\"this.textbehind\">{{this.value | number: this.numberformat : \"de\"}} {{this.title}}</h1>\r\n      <p><span>{{this.description}}</span> </p>\r\n    </div>\r\n    <div fxFlex *ngIf=\"this.maticon\">\r\n      <span class=\"mat-headline\"><mat-icon inline=true>{{this.maticon}}</mat-icon></span>\r\n    </div>\r\n  </div>\r\n</mat-card> -->\r\n\r\n<mat-card class=\"box-card\" [style.background-color]=\"this.itemcolor\">\r\n  <h1 *ngIf=\"!this.textbehind\">{{this.title}}{{this.value | number: this.numberformat : \"de\"}}</h1>\r\n  <h1 *ngIf=\"this.textbehind\">{{this.value | number: this.numberformat : \"de\"}} {{this.title}}</h1>\r\n  <p><span>{{this.description}}</span></p>\r\n  <div *ngIf=\"this.maticon\">\r\n    <span class=\"mat-headline\"><mat-icon inline=true>{{this.maticon}}</mat-icon></span>\r\n  </div>\r\n</mat-card>","import { Component, OnInit, Input, Output, Renderer2, EventEmitter } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport { icon, Marker } from 'leaflet';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FeatureCollection } from 'geojson';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport * as chroma from \"chroma-js\";\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss'],\r\n\r\n})\r\nexport class MapComponent implements OnInit {\r\n  @Input() data = [];\r\n  @Input() nacolor = \"white\";\r\n  @Input() debug :boolean = false;\r\n  @Input() Outcome: String;\r\n  @Input() Zoom: number;\r\n  @Input() basemap: any; // geojson\r\n  @Input() center: any;\r\n  @Input() opacity: number;\r\n  @Input() feature: string; // name of outcome\r\n  @Input() colorscale: any;\r\n  @Input() cutofflist: any;\r\n  @Input() customlabels: any;\r\n  @Input() binmethod: string;\r\n  @Input() selectmap: boolean;\r\n  @Input() bins: number;\r\n  @Input() id: string; // feature id\r\n  @Input() percent: boolean;\r\n  @Input() containername: string;\r\n  @Output() clicked = new EventEmitter<string>();\r\n  mapok:boolean;\r\n  clickedvalue: string;\r\n  legend: any;\r\n  map: any;\r\n  useprovider = 0;\r\n  firstload = true;\r\n  providers = ['https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n    'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png']\r\n  attributions = ['Kartenmaterial &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n    '©OpenStreetMap, ©CartoDB'];\r\n  constructor(private http: HttpClient, private renderer: Renderer2, private api: ApiService) { }\r\n  \r\n  \r\n  ngOnInit(): void {\r\n    // Debug\r\n    if (this.debug){\r\n      console.log(\"ID:\",this.id);\r\n      console.log(\"Map:\",this.api.getValues(this.basemap['features'],'properties'));  \r\n    }\r\n\r\n    // Sort data\r\n    this.data = this.api.sortArray(this.data,this.Outcome);\r\n    \r\n    // Init vars\r\n    this.resetprops();\r\n    this.clickedvalue = \"\";\r\n    if (!this.binmethod){\r\n      this.binmethod='equalint';\r\n    };\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // Import Map data\r\n    this.initMap(this.containername);\r\n  }\r\n\r\n  \r\n\r\n  ngOnChanges(changes: any) {\r\n    // On any change replace the map-container\r\n    if (!this.selectmap) {\r\n      if ((changes.data || changes.basemap) && this.checkallok()) {\r\n        this.resetprops();\r\n        this.initMap(this.containername);\r\n      };\r\n    }\r\n    else {\r\n      if ((changes.basemap) && this.checkallok()) {\r\n        this.resetprops();\r\n        this.initMap(this.containername);\r\n      };\r\n    }\r\n\r\n\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.map = null;\r\n    this.data = null;\r\n    }\r\n\r\n\r\n  resetprops() {\r\n    if (!this.containername) { this.containername = \"mapdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); };\r\n    if (!this.Zoom) { this.Zoom = 4; };\r\n    if (!this.center) { this.center = this.getcenter(); };//  DOES NOT WORK FOR TYPE MULTIPOLYGON!\r\n    if (!this.opacity) { this.opacity = .1; };\r\n    if (!this.customlabels) { this.customlabels = []; };\r\n    if (!this.binmethod) { this.binmethod = \"equalint\" };\r\n  }\r\n\r\n  checkallok() {\r\n    let res;\r\n    if (!this.selectmap) {\r\n      res = this.data && this.basemap;\r\n      if (res) {\r\n        res = this.data.length > 0 && this.basemap.features;\r\n      }\r\n\r\n    }\r\n    else {\r\n      res = this.basemap;\r\n      if (res) {\r\n        res = this.basemap.features;\r\n      }\r\n\r\n    }\r\n\r\n    return res;\r\n  }\r\n  preparedom(divid) {\r\n    if (document.getElementById(divid)) { document.getElementById(divid).remove();};\r\n    let mapcontainer = this.renderer.createElement(\"div\");\r\n    this.renderer.setProperty(mapcontainer, 'id', divid);\r\n    this.renderer.addClass(mapcontainer, \"mapdiv\");    \r\n    if (document.getElementById(\"map-frame\")!==null){\r\n      this.renderer.appendChild(document.getElementById(\"map-frame\"), mapcontainer);}\r\n    return true;\r\n  }\r\n\r\n  async initMap(divid) {\r\n    // Init\r\n    let mymap;\r\n    this.mapok = false;\r\n    let colors = this.colorscale;\r\n    let cutoffs = this.cutofflist;\r\n    let thedata;\r\n    if (this.data) {\r\n      thedata = Object.assign(this.data);\r\n    }\r\n    let propname = this.feature;\r\n    let theid = this.id;\r\n    let theopacity = this.opacity;\r\n    let basestyle = {\r\n      weight: 1,\r\n      dashArray: '',\r\n      \"color\": \"grey\",\r\n      \"fillOpacity\": theopacity,\r\n      \"Opacity\": theopacity\r\n    };\r\n\r\n    // If to many regions set weight to 0\r\n    if (thedata.length > 30 ){\r\n      basestyle.weight=0;\r\n    };\r\n\r\n    // Prepare dom\r\n    this.firstload= false;\r\n    let removed = false;\r\n    await this.preparedom(divid);\r\n    // Load Map\r\n\r\n    if (this.debug){\r\n      console.log('center: ',this.center );\r\n    }\r\n    try {\r\n    mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\r\n    }\r\n    catch(e){\r\n      document.getElementById(divid).remove();\r\n      await this.preparedom(divid);\r\n      mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\r\n    };\r\n    if (this.debug){\r\n      console.log('Map created');\r\n    }\r\n\r\n    // Fix Icons see https://stackoverflow.com/questions/41144319/leaflet-marker-not-found-production-env\r\n    const iconRetinaUrl = 'assets/marker-icon-2x.png';\r\n    const iconUrl = 'assets/marker-icon.png';\r\n    const shadowUrl = 'assets/marker-shadow.png';\r\n    const iconDefault = icon({\r\n      iconRetinaUrl,\r\n      iconUrl,\r\n      shadowUrl,\r\n      iconSize: [25, 41],\r\n      iconAnchor: [12, 41],\r\n      popupAnchor: [1, -34],\r\n      tooltipAnchor: [16, -28],\r\n      shadowSize: [41, 41]\r\n    });\r\n    Marker.prototype.options.icon = iconDefault;\r\n\r\n    // Load Tiles\r\n    let theprovider = this.useprovider;\r\n    const tiles = L.tileLayer(this.providers[theprovider],\r\n      {\r\n        maxZoom: 19, opacity: 1,\r\n        attribution: this.attributions[theprovider]\r\n      });\r\n    tiles.addTo(mymap);\r\n    mymap.attributionControl.setPrefix('<a href=\"https://www.ziapp.de\"><strong>Zi</strong> Data Science Lab</a>');\r\n    tiles.getContainer().className += ' custombgmap';\r\n\r\n    // Chloropleth Map\r\n    if (!this.selectmap) {\r\n\r\n      // Layer\r\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\r\n      if (this.percent) {\r\n        for (let item of thedata) {\r\n          if (item[this.feature]){\r\n            item['___thevalue'] = Math.round(item[this.feature] * 10000) / 100;\r\n          }\r\n          else {\r\n            item['___thevalue']=null;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        for (let item of thedata) {         \r\n          if (item[this.feature]){\r\n            item['___thevalue'] = item[this.feature];\r\n          }\r\n          else {\r\n            item['___thevalue']=null;\r\n          }\r\n        }\r\n      }\r\n      for (let item of geojsonFeature.features) {\r\n        let value = this.api.filterArray(thedata, this.id, item.properties[this.id]);\r\n        if (value.length > 0) {\r\n          item['properties'][propname] = value[0]['___thevalue'];\r\n        }\r\n        else {\r\n          item['properties'][propname] = null;\r\n        }\r\n      }\r\n      if (this.debug){\r\n        console.log('Map Features',geojsonFeature.features);\r\n        console.log(\"Data:\",this.data);\r\n      }\r\n      \r\n\r\n\r\n      if (!cutoffs) {\r\n        cutoffs = this.makecutoffs(this.api.getValues(thedata, '___thevalue'), this.binmethod, this.bins);\r\n      };\r\n      if (colors.length < cutoffs.length) {\r\n        colors = this.makescale(cutoffs.length)\r\n      }\r\n\r\n      let myStyle = function (feature) {\r\n        let thevalue = feature.properties[propname];\r\n        let i = 0;\r\n        let result = basestyle;\r\n        let thecolor = colors[0];\r\n        for (let colorcode of colors) {\r\n          if (thevalue > cutoffs[i]) {\r\n            thecolor = colorcode;\r\n          };\r\n          i = i + 1;\r\n        }\r\n        if (thevalue != null) { result['color'] = thecolor; } \r\n        else {\r\n          result['color'] = 'grey';\r\n        };\r\n        return result\r\n      };\r\n      // Infobox\r\n      let info;\r\n      info = L.control.layers();\r\n      info.onAdd = function (map) {\r\n        this._div = L.DomUtil.create('div');\r\n        this.update();\r\n        return this._div;\r\n      };\r\n\r\n      info.update = function (props) {\r\n\r\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\") + (props && props[propname] ? '<br><strong>Wert: </strong>' + props[propname].toLocaleString() : \"\");\r\n        if (props) {\r\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\r\n        }\r\n        else {\r\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\r\n        }\r\n      };\r\n\r\n      info.addTo(mymap);\r\n\r\n      // Add Features/Polygons to Map\r\n      const featLayer = L.geoJSON(geojsonFeature,\r\n        {\r\n          style: myStyle,\r\n          onEachFeature: (feature, layer) => (\r\n            layer.on({\r\n              mouseover: (e) => (this.highlightFeature(info, e)),\r\n              mouseout: (e) => (this.resetFeature(info, e)),\r\n              click: (e) => (this.zoomToFeature(mymap, e))\r\n            })\r\n          )\r\n        });\r\n      featLayer.resetStyle();\r\n      featLayer.addTo(mymap);\r\n\r\n      // Add Legend to Map\r\n      let labels\r\n      if (this.customlabels) { labels = this.customlabels; };\r\n\r\n      let legend;\r\n      legend = L.control.layers({}, {}, { position: 'topright' });\r\n      let legendtitle = this.api.stringwrap(propname);\r\n\r\n      legend.onAdd = function (map) {\r\n\r\n        this._ldiv = L.DomUtil.create('div', 'customlegend');\r\n        this._ldiv.innerHTML = '<p><strong>' + legendtitle + '</strong></p>';\r\n        if (this.percent == true) {\r\n          this._ldiv.innerHTML += '<p><em>Anteil in %</em></p>';\r\n        }\r\n        if (cutoffs) {\r\n          for (var i = 0; i < cutoffs.length; i++) {\r\n            if (labels.length == cutoffs.length) {\r\n              this._ldiv.innerHTML +=\r\n                '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\r\n                labels[i];\r\n            }\r\n            else {\r\n              if (cutoffs.length > 4) {\r\n                this._ldiv.innerHTML +=\r\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i> ' +\r\n                  cutoffs[i].toLocaleString() + (cutoffs[i + 1] ? ' bis unter ' + cutoffs[i + 1].toLocaleString() + '<br>' : '+');\r\n              }\r\n              else {\r\n                this._ldiv.innerHTML +=\r\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\r\n                  (cutoffs[i + 1] ? 'bis ' + cutoffs[i + 1].toLocaleString() + \"&nbsp;\" : cutoffs[i].toLocaleString() + '+');\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return this._ldiv;\r\n      };\r\n\r\n      legend.addTo(mymap);\r\n    }\r\n    else {\r\n      // Layer\r\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\r\n      colors = this.makescale(2);\r\n      let myStyle = function (feature) {\r\n        let res = basestyle;\r\n        let thecolor= \"grey\";\r\n        if (feature.properties['___clicked']) {\r\n          thecolor = colors[1];\r\n        }\r\n        res['color']=thecolor;\r\n        return res;\r\n      }\r\n\r\n      const featLayer = L.geoJSON(geojsonFeature,\r\n        {\r\n          style: myStyle,\r\n          onEachFeature: (feature, layer) => (\r\n            layer.on({\r\n              mouseover: (e) => (this.highlightFeature(info, e)),\r\n              mouseout: (e) => (this.resetFeature(info, e)),\r\n              click: (e) => (this.selectarea(mymap, e))\r\n            })\r\n          )\r\n        });\r\n      featLayer.addTo(mymap);\r\n\r\n      // Infobox\r\n      let info;\r\n      info = L.control.layers();\r\n      info.onAdd = function (map) {\r\n        this._div = L.DomUtil.create('div');\r\n        this.update();\r\n        return this._div;\r\n      };\r\n\r\n      info.update = function (props) {\r\n\r\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\");\r\n        if (props) {\r\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\r\n        }\r\n        else {\r\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\r\n        }\r\n      };\r\n\r\n      info.addTo(mymap);\r\n\r\n    }\r\n    this.mapok=true;\r\n\r\n  };\r\n\r\n  highlightFeature(info, e) {\r\n    const layer = e.target;\r\n    layer.setStyle({\r\n      opacity: 1,\r\n      fillOpacity: this.opacity * 1.1\r\n    });\r\n    info.update(layer.feature.properties);\r\n  }\r\n\r\n  resetFeature(info, e) {\r\n    const layer = e.target;\r\n    layer.setStyle({\r\n      opacity: 1,\r\n      fillOpacity: this.opacity,\r\n    });\r\n    info.update();\r\n  }\r\n\r\n  makecutoffs(array, method = \"equalint\", bins) { \r\n    let result = [];\r\n    let minv = Math.min(...array);\r\n    let maxv = Math.max(...array);\r\n\r\n    // equalint    \r\n    if (method=='equalint'){\r\n    let steps = Math.round((maxv - minv) / bins);\r\n    let i = 0;\r\n    while (i < bins) {\r\n      result.push((i + 1) * steps + minv);\r\n      i = i + 1;\r\n    };\r\n    if (this.debug){\r\n      console.log(\"CUTOFF RESULT\",result,\"\\ninputarray\",array);\r\n    }\r\n    };\r\n\r\n   // equal group size \r\n   if (method=='equalgroupsize'){    \r\n    let sortedarray = this.api.filterNA(array.sort((a,b)=>parseFloat(a)-parseFloat(b)));\r\n    let arraylength = sortedarray.length;\r\n    let groupsize= Math.floor(arraylength/bins);    \r\n    for (let thebin of Array.apply(null, {length: bins}).map(Number.call, Number)){\r\n      if (thebin==0){\r\n        result.push(sortedarray[0])\r\n      }\r\n      else {\r\n        result.push(sortedarray[groupsize*thebin]);\r\n      }\r\n    }\r\n    if (this.debug){\r\n      console.log(\"CUTOFF RESULT\",result.sort(),\"\\ninputarray\",sortedarray,\"Group Size\",groupsize);\r\n    }     \r\n    };\r\n   \r\n    return result;\r\n\r\n  };\r\n\r\n\r\n  newclick(e){\r\n    let res = [];\r\n    for (let item of this.basemap.features){\r\n      if (item.properties[this.id]==e){\r\n        item.properties['___clicked']=true;\r\n      }\r\n      else {\r\n        item.properties['___clicked']=false;\r\n      }\r\n      res.push(item);\r\n    }\r\n    this.basemap['features']=res;\r\n    this.initMap(this.containername);\r\n  }\r\n\r\n  zoomToFeature(map, e) {\r\n    map.fitBounds(e.target.getBounds());\r\n    this.clicked.emit(e.target.feature.properties[this.id]);\r\n    this.clickedvalue = e.target.feature.properties[this.id];\r\n  }\r\n\r\n  selectarea(map, e) {\r\n    map.fitBounds(e.target.getBounds());\r\n    this.clicked.emit(e.target.feature.properties[this.id]);\r\n    this.clickedvalue = e.target.feature.properties[this.id];\r\n    this.newclick(e.target.feature.properties[this.id]);\r\n  }\r\n\r\n  makescale(bins = 5) {\r\n    return chroma.scale([chroma(this.api.primarycolor).set('hsl.h', -120), this.api.primarycolor]).colors(bins);\r\n  }\r\n\r\n  getcenter() {\r\n    let features = this.basemap.features;\r\n    let coords = { 'a': [], 'b': [] };\r\n    for (let item of features) {\r\n      for (let area of item.geometry.coordinates) {\r\n        for (let subarea of area) {          \r\n          coords['a'].push(subarea[0])\r\n          coords['b'].push(subarea[1])\r\n          \r\n        }\r\n      }\r\n    }\r\n    if (this.debug){\r\n      console.log(\"CENTER FEATURES:\",this.basemap.features);\r\n      console.log(\"CENTER COORDS:\",coords);\r\n    }\r\n    let a = coords['a'].reduce((pv, cv) => pv + cv, 0) / coords['a'].length;\r\n    let b = coords['b'].reduce((pv, cv) => pv + cv, 0) / coords['b'].length;\r\n\r\n    return [b, a]\r\n  }\r\n\r\ndonothing(e){\r\n  return null;\r\n};\r\n}\r\n\r\n","<ng-container *ngIf=\"!(this.basemap)\">\r\n  <mat-spinner color=\"primary\"></mat-spinner>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"(this.basemap)\">\r\n<div  class=\"map-container\">\r\n    <div id=\"map-frame\" class=\"map-frame\">\r\n      \r\n    </div>    \r\n    <mat-spinner *ngIf=\"!this.mapok\" color=\"primary\"></mat-spinner>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport * as DeLocale from '../../../../../node_modules/plotly.js/lib/locales/de-ch.js'\r\nimport * as SVLocale from 'plotly.js/lib/locales/de.js';\r\nimport { PlotlyService } from 'angular-plotly.js';\r\n\r\n@Component({\r\n  selector: 'app-plot',\r\n  templateUrl: './plot.component.html',\r\n  styleUrls: ['./plot.component.scss'],\r\n  providers: [PlotlyService]\r\n})\r\n\r\nexport class PlotComponent implements OnInit {\r\n  @Input() data: any;\r\n  @Input() xvalue: string;\r\n  @Input() colorby: string;\r\n  @Input() outcomes: any;\r\n  @Input() outcomelabels = [];\r\n  @Input() plottype: String;\r\n  @Input() customdata: any;\r\n  @Input() customconfig: any;\r\n  @Input() customlayout: any;\r\n  @Input() custommargins: any;\r\n  @Input() linewidth: number;\r\n  @Input() showlegend: boolean;\r\n  @Input() sort: boolean;\r\n  @Input() sortx: boolean;\r\n  @Input() percent: boolean;\r\n  @Input() percentx: boolean;\r\n  @Input() basecolor = \"\";\r\n  @Input() colorscheme = [];\r\n  @Input() annotations = [];\r\n  @Input() hovertemplate = \"\";\r\n  @Input() plottitle = \"\";\r\n  @Input() plotsubtitle = \"\";\r\n  @Input() plotcaption = \"\";\r\n  @Input() n_yticks = 8;\r\n  @Input() xtickformat = \"\";\r\n  @Input() xtitle = \"\";\r\n  @Input() ytitle = \"\";\r\n  @Input() id = \"\";\r\n  @Input() divid = \"\";\r\n  @Input() fontfamily = \"Lato, sans-serif\";\r\n  @Input() fontsize = \".85rem\";\r\n  @Input() fontcolor = \"black\";\r\n  @Input() legendbg = 'ffffff20';\r\n  @Input() legendposx = 'right';\r\n  @Input() legendposy = 1;\r\n  @Output() clicked = new EventEmitter<string>();\r\n\r\n  constructor(private api: ApiService) { }\r\n  plotlayout: any;\r\n  plotdata: any;\r\n  mainconfig: any;\r\n  plotlytype: string;\r\n  clickedvalue: any;\r\n\r\n  ngOnInit(): void {\r\n    if (this.divid == \"\") { this.divid = \"plotdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); }\r\n    if (!this.linewidth) { this.linewidth = 2 };\r\n    if (this.basecolor == \"\") { this.basecolor = this.api.primarycolor };\r\n    if (this.colorscheme.length == 0) { this.colorscheme = [this.basecolor]; }\r\n    this.make_plot();\r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    setTimeout(() => { this.make_plot() }, 0);\r\n  }\r\n\r\n  reportclick(input) {\r\n    this.clicked.emit(input);\r\n    this.clickedvalue = input;\r\n  }\r\n\r\n  make_plot() {\r\n    this.mainconfig = {\r\n      displayModeBar: false,\r\n      scrollZoom: false,\r\n      autosizable: true,\r\n      locale: 'de-eu',\r\n      locales: {\r\n        'de-eu': {\r\n          format: {\r\n            currency: ['€', ''],\r\n            decimal: ',',\r\n            thousands: '.',\r\n            grouping: [2]\r\n          }\r\n        }\r\n      },\r\n      doubleClick: 'reset',\r\n      showAxisDragHandles: false,\r\n      showAxisRangeEntryBoxes: false,\r\n      showTips: true,\r\n      seperator: ',.'\r\n    };\r\n\r\n    if (this.plottype == \"bar\") {\r\n      this.plotlytype = \"bar\";\r\n      this.plotlayout = {\r\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\r\n        yaxis: {\r\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\r\n          gridcolor: \"lightgrey\",\r\n          gridpattern: \"dot\",\r\n          gridwidth: 1,\r\n          zerolinecolor: this.fontcolor,\r\n          zerolinewidth: 2,\r\n          annotations: this.annotations,\r\n          ticksuffix: \" \",\r\n          nticks: this.n_yticks,\r\n        },\r\n        autosize: true, padding: 0,\r\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\r\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\r\n        annotations: this.annotations,\r\n      };\r\n\r\n      if (this.percent) {\r\n        this.plotlayout.yaxis.tickformat = ',.1%';\r\n      }\r\n    }\r\n\r\n    if (this.plottype == \"heatmap\") {\r\n      this.plotlytype = 'heatmap';\r\n      this.plotlayout = {\r\n        xaxis: { side: 'top' },\r\n        yaxis: { autosize: true },\r\n        autosize: false, padding: 0,\r\n        // legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\r\n        margin: { l: 50, r: 50, b: 0, t: 50 },\r\n        paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\r\n        //annotations: this.annotations\r\n      };\r\n\r\n      // intermediate fix for bugging xaxis placement\r\n      this.plotlayout.yaxis.autorange = 'reversed'\r\n\r\n      let plotdata = this.data;\r\n      plotdata['type'] = \"heatmap\";\r\n      let colors = this.api.makescale(2);\r\n      plotdata['colorscale'] = [\r\n        [0, colors[1].concat('CC')],\r\n        [1, colors[0].concat('CC')]\r\n      ];\r\n      plotdata['showscale'] = false;\r\n      this.plotdata = [plotdata];\r\n    }\r\n\r\n    if (this.plottype == \"violin\") {\r\n      this.plotlytype = \"violin\";\r\n      this.plotlayout = {\r\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\r\n        yaxis: { zeroline: false, automargin: true, rangemode: 'tozero', ticksuffix: \" \" },\r\n        autosize: true, padding: 0,\r\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\r\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\r\n        annotations: this.annotations\r\n      };\r\n      if (this.percent) {\r\n        this.plotlayout.yaxis.tickformat = ',.1%';\r\n      }\r\n    }\r\n\r\n    if (this.plottype == \"stackedbar\") {\r\n      this.plotlytype = \"bar\";\r\n      this.plotlayout = {\r\n        barmode: \"stack\",\r\n        xaxis: { fixedrange: false, showgrid: false, type: 'category', automargin: false },\r\n        yaxis: {\r\n          fixedrange: true, title: '', autosize: true, automargin: true,\r\n          rangemode: 'tozero', ticksuffix: \" \",\r\n          zerolinecolor: this.fontcolor,\r\n          zerolinewidth: 2,\r\n          nticks: this.n_yticks\r\n        },\r\n        padding: 0,\r\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\r\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\r\n        annotations: this.annotations\r\n      };\r\n    }\r\n\r\n    if (this.plottype == \"tsline\" || this.plottype == \"lines\" || this.plottype == \"area\" ||\r\n      this.plottype == \"stackedarea\" || this.plottype == 'scatter') {\r\n      this.plotlytype = \"lines\";\r\n      this.plotlayout = {\r\n        xaxis: { fixedrange: false, showgrid: false, automargin: false, zeroline: false },\r\n        yaxis: {\r\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\r\n          gridcolor: \"lightgrey\",\r\n          gridpattern: \"dot\",\r\n          gridwidth: 1,\r\n          zerolinecolor: this.fontcolor,\r\n          zerolinewidth: 2,\r\n          annotations: this.annotations,\r\n          ticksuffix: \" \",\r\n          nticks: this.n_yticks,\r\n        },\r\n\r\n        autosize: true, padding: 0,\r\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\r\n        margin: { l: 0, r: 20, b: 50, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\"\r\n      };\r\n\r\n      if (this.percent) {\r\n        this.plotlayout.yaxis.tickformat = ',.1%';\r\n      }\r\n\r\n      if (this.percentx) {\r\n        this.plotlayout.xaxis.tickformat = ',.1%';\r\n      }\r\n    }\r\n\r\n    if (this.plottype == \"hbar\") {\r\n      this.plotlytype = \"hbar\";\r\n      this.plotlayout = {\r\n        xaxis: {\r\n          fixedrange: true, showgrid: true, title: '',\r\n          automargin: true, nticks: this.n_yticks\r\n        },\r\n        yaxis: {\r\n          fixedrange: false, type: 'category', automargin: true,\r\n          rangemode: 'tozero', ticksuffix: \" \",\r\n          zerolinecolor: this.fontcolor,\r\n          zerolinewidth: 2\r\n        },\r\n        autosize: true, padding: 0,\r\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\r\n        margin: { l: 200, r: 0, b: 20, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\r\n        annotations: this.annotations\r\n      };\r\n    }\r\n\r\n    if (this.custommargins) {\r\n      this.plotlayout['margin'] = this.custommargins;\r\n    }\r\n\r\n    if (this.showlegend) {\r\n      this.plotlayout['showlegend'] = true;\r\n    }\r\n\r\n    if (this.xtickformat != '') {\r\n      this.plotlayout['xaxis']['tickformat'] = this.xtickformat;\r\n    }\r\n\r\n    this.plotlayout['font'] = {\r\n      family: this.fontfamily,\r\n      size: this.fontsize,\r\n      color: this.fontcolor\r\n    };\r\n\r\n    if (this.xtitle !== \"\") {\r\n      this.plotlayout['xaxis']['title'] = this.xtitle;\r\n      this.plotlayout['xaxis']['titlefont'] =\r\n      {\r\n        family: this.fontfamily,\r\n        size: this.fontsize,\r\n        color: this.fontcolor\r\n      };\r\n    }\r\n    if (this.ytitle !== \"\") {\r\n      this.plotlayout['yaxis']['title'] = this.ytitle;\r\n      this.plotlayout['yaxis']['titlefont'] =\r\n      {\r\n        family: this.fontfamily,\r\n        size: this.fontsize,\r\n        color: this.fontcolor\r\n      };\r\n    }\r\n\r\n    if (this.plottype != \"heatmap\") {\r\n      let plotdata = []\r\n\r\n      for (let item of this.data) {\r\n        plotdata.push(item);\r\n      }\r\n\r\n      if (this.sort) {\r\n        plotdata = this.api.sortArray(plotdata, this.outcomes[0]);\r\n      }\r\n\r\n      if (this.sortx) {\r\n        plotdata = this.api.sortArray(plotdata, this.xvalue);\r\n      }\r\n\r\n      let outcomes = this.outcomes;\r\n      if (this.colorby) {\r\n        outcomes = this.api.getuniqueValues(plotdata, this.colorby);\r\n        if (outcomes.length > 1) {\r\n          this.colorscheme = this.api.makescale(outcomes.length);\r\n        }\r\n        plotdata = this.make_colorbyvalues();\r\n      }\r\n\r\n      this.plotdata = this.make_plotdata(plotdata, this.xvalue, outcomes, this.plotlytype);\r\n\r\n      // DEBUG\r\n      // console.log(\"Make Plotdata:\",\"\\ndf:\",plotdata,\"\\nx:\", this.xvalue,\"\\nout:\", outcomes,\"\\ntype:\", this.plotlytype)\r\n    };\r\n  }\r\n\r\n  make_colorbyvalues() {\r\n    let newdata = [];\r\n    let inputdata = this.data;\r\n    let thecolorvalues = this.api.getuniqueValues(inputdata, this.colorby).sort();\r\n    let thexvalues = this.api.getuniqueValues(inputdata, this.xvalue);\r\n    let theoutcome = this.outcomes[0];\r\n\r\n    for (let xvalue of thexvalues) {\r\n      let topush = {};\r\n      topush[this.xvalue] = xvalue;\r\n\r\n      for (let tocolor of thecolorvalues) {\r\n        let datapoint = this.api.filterArray(this.api.filterArray(inputdata, this.colorby, tocolor), this.xvalue, xvalue)[0];\r\n\r\n        if (datapoint) {\r\n          topush[tocolor] = datapoint[theoutcome];\r\n        }\r\n      }\r\n\r\n      newdata.push(topush);\r\n    }\r\n    // console.log(\"DEBUG make_colorbyvalues:\",'df',inputdata,\"colorvals\",thecolorvalues,\"xvals\",thexvalues,\"outcome\",theoutcome,\"newdf\",newdata);\r\n    return newdata;\r\n  }\r\n\r\n  make_trace(xdata, ydata = [], name: string, type = \"\") {\r\n    let trace = {\r\n      x: xdata,\r\n      y: ydata,\r\n      name: name,\r\n      type: type,\r\n    }\r\n\r\n    if (this.plottype == \"stackedarea\") {\r\n      trace['stackgroup'] = \"one\";\r\n    }\r\n\r\n    // if (this.hovertemplate !== \"\") {\r\n    //   trace['hovertemplate'] = this.hovertemplate;\r\n    // }\r\n\r\n    return trace;\r\n  }\r\n\r\n  make_plotdata(source = [], xaxis = \"\", ylist = [], type = \"bar\", colors = this.colorscheme) {\r\n    let xdata = this.api.getValues(source, xaxis)\r\n    let list = []\r\n    let i = 0\r\n\r\n    for (let name in ylist) {\r\n      let theydata = this.api.getValues(source, ylist[i]);\r\n      let tracename = ylist[i];\r\n\r\n      if (this.outcomelabels.length == ylist.length) {\r\n        tracename = this.outcomelabels[i];\r\n      }\r\n\r\n      let trace = this.make_trace(xdata, theydata, tracename, type = type);\r\n\r\n      if (type == \"hbar\") {\r\n        trace = this.make_trace(this.api.getValues(source, ylist[i]), xdata, ylist[i], type = \"bar\")\r\n        trace[\"orientation\"] = \"h\"\r\n      }\r\n\r\n      if (type == \"bar\" || type == \"bar\" || type == \"scatter\") {\r\n        trace[\"marker\"] = {\r\n          color: colors[i]\r\n        }\r\n      }\r\n\r\n      if (type == \"lines\") {\r\n        trace[\"line\"] = {\r\n          color: colors[i],\r\n          width: this.linewidth * 2\r\n        }\r\n        trace[\"marker\"] = {\r\n          color: colors[i],\r\n          size: this.linewidth * 5\r\n        }\r\n\r\n        trace['name'] = ''\r\n        trace['hovertemplate'] = '%{x} | %{y:.2f}'\r\n      }\r\n\r\n      if (this.plottype == \"area\") {\r\n        trace[\"fill\"] = \"tozeroy\";\r\n      }\r\n\r\n      if (this.plottype == \"violin\") {\r\n        trace = this.make_trace(name, theydata, ylist[i], type = type);\r\n        trace['x'] = name;\r\n        trace[\"line\"] = {\r\n          color: colors[i],\r\n          width: this.linewidth\r\n        }\r\n      }\r\n\r\n      if (this.plottype == \"scatter\") {\r\n        trace['mode'] = 'markers';\r\n        trace[\"marker\"] = {\r\n          color: colors[i],\r\n          size: this.linewidth * 5\r\n        }\r\n        if (this.id != \"\") {\r\n          trace[\"text\"] = this.api.getValues(source, this.id);\r\n          trace[\"textfont\"] = { family: this.fontfamily };\r\n          if (trace['x'].length < 50) {\r\n            trace['mode'] = 'markers+text';\r\n            trace['textposition'] = 'bottom center';\r\n          }\r\n          else {\r\n            trace['mode'] = 'markers';\r\n          }\r\n        }\r\n      }\r\n      list.push(trace)\r\n      i = i + 1\r\n    }\r\n\r\n    return list\r\n  }\r\n}\r\n","<ng-container *ngIf=\"!(this.plotdata && this.mainconfig && this.plotlayout)\">\r\n  <mat-spinner color=\"primary\"></mat-spinner>\r\n</ng-container>\r\n<ng-container *ngIf=\"this.plotdata && this.mainconfig && this.plotlayout\">\r\n  <plotly-plot class=\"plotlydiv\" [data]=\"this.plotdata\" [divId]=\"this.divid\" [debug]=\"true\" [layout]=\"this.plotlayout\"\r\n    [config]=\"this.mainconfig\" (plotlyClick)=\"this.reportclick($event);\" [useResizeHandler]=\"true\"\r\n    [style]=\"{position: 'relative', width: '100%', height: '100%'}\"></plotly-plot>\r\n</ng-container>","import { AfterViewInit, Component, OnInit, Input ,ViewChild} from '@angular/core';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  @Input() data:any;\r\n  @Input() columns:any;\r\n  @Input() outcomes_numeric:any;\r\n  @Input() outcomes_rate:any;\r\n  @Input() newlabels:any;\r\n  @Input() pagesizes:any;\r\n  @Input() addfilter:boolean;\r\n  @Input() addrank:boolean;\r\n\r\n  datasource:any;\r\n  displayedColumns:String[];\r\n\r\n  \r\n  constructor() { }\r\n\r\n\r\n  ngOnInit(){\r\n  if (!this.outcomes_numeric){this.outcomes_numeric=[]};\r\n  if (!this.outcomes_rate){this.outcomes_rate=[]};\r\n  if (!this.pagesizes){this.pagesizes=[10, 50,100]};\r\n  this.displayedColumns =  this.columns;\r\n  this.datasource = new MatTableDataSource(this.data); \r\n  if (this.addrank){\r\n\r\n  }\r\n  }\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.datasource.sort = this.sort;\r\n    this.datasource.paginator = this.paginator;    \r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    this.displayedColumns =  this.columns;\r\n    this.datasource = new MatTableDataSource(this.data); \r\n    this.datasource.sort = this.sort;\r\n    this.datasource.paginator = this.paginator;   \r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.datasource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n\r\n}\r\n","<ng-container *ngIf=\"this.addfilter\">\r\n  <mat-form-field appearance=\"outline\" >\r\n    <mat-label>Suche</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Suche...\" #input>\r\n  </mat-form-field>\r\n</ng-container>\r\n\r\n<mat-table [(dataSource)]=\"this.datasource\" matSort class=\"mat-elevation-z0\">\r\n\r\n <ng-container *ngFor=\"let thecol of displayedColumns\">\r\n  <ng-container [matColumnDef]=\"thecol\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{thecol}} </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> \r\n      <span *ngIf=\"this.outcomes_rate.indexOf(thecol)>=0\">{{element[thecol] | percent }}</span>\r\n      <span *ngIf=\"this.outcomes_numeric.indexOf(thecol)>=0\">{{element[thecol] | number }}</span>\r\n      <span *ngIf=\"(this.outcomes_rate.indexOf(thecol)<0) && (this.outcomes_numeric.indexOf(thecol)<0)\">{{element[thecol]}}</span>\r\n    </mat-cell >\r\n  </ng-container>\r\n</ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n</mat-table>\r\n<mat-paginator [pageSizeOptions]=\"this.pagesizes\" showFirstLastButtons></mat-paginator>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddUserDialog } from './components/addUserDialog';\r\nimport { UpdateUserDialog } from './components/updateUserDialog';\r\nimport { DeleteUserDialog } from './components/deleteUserDialog';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private auth: AuthService,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  users: any;\r\n  myRegform: any;\r\n  myDataUploadform: any;\r\n  adduser: boolean;\r\n  newuser: any;\r\n  adddata: boolean;\r\n  uploaderror: any;\r\n  currentuser: any;\r\n  usergroupoptions = ['kvuser'];\r\n  selectedDataLevel = []\r\n  displayedColumns = ['symbol', 'user', 'rights', 'group', 'actions']\r\n\r\n  ngOnInit(): void {\r\n    this.currentuser = this.auth.getUserDetails();\r\n    this.updateUserList();\r\n  }\r\n\r\n  updateUserList() {\r\n    this.api.getTypeRequest('users/').subscribe(data => { this.users = data; })\r\n  }\r\n\r\n  copy(item) {\r\n    document.addEventListener('copy', (e: ClipboardEvent) => {\r\n      e.clipboardData.setData('text/plain', (item));\r\n      e.preventDefault();\r\n      document.removeEventListener('copy', null);\r\n    });\r\n\r\n    document.execCommand('copy');\r\n  }\r\n\r\n  openAddUserDialog(): void {\r\n    const dialogRef = this.dialog.open(AddUserDialog, {})\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.updateUserList()\r\n    })\r\n  }\r\n\r\n  openUpdateUserDialog(user): void {\r\n    const dialogRef = this.dialog.open(UpdateUserDialog, {\r\n      data: user\r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.updateUserList()\r\n    })\r\n  }\r\n\r\n  openDeleteUserDialog(user): void {\r\n    const dialogRef = this.dialog.open(DeleteUserDialog, {\r\n      data: user\r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.updateUserList()\r\n    })\r\n  }\r\n\r\n  toUpperCase(value: string) {\r\n    return value.toLocaleUpperCase()\r\n  }\r\n\r\n  fullName(value) {\r\n    if (value.full_name) {\r\n      return value.full_name\r\n    }\r\n    return `${value.anrede} ${value.firstname} ${value.lastname}`\r\n  }\r\n}\r\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n  <h1 ngClass.lt-sm=\"mobileheading\">Administration</h1>\r\n  <div *ngIf=\"!this.adduser && !this.adddata\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\"\r\n    fxLayoutAlign=\"start space-between\">\r\n    <div fxFlex=100>\r\n      <h2>Administrationsaufgaben</h2>\r\n      <p class=\"mat-caption greycolor\">In diesem Bereich können Dashboard Administratoren (\"Admin\") und\r\n        Zi-Administratoren (\"Superadmin\") Daten oder Nutzer*innen hinzufügen.</p>\r\n    </div>\r\n    <div>\r\n      <button mat-raised-button (click)=\"openAddUserDialog(userAddDialog)\" color=\"primary\">Nutzer hinzufügen</button>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!this.adduser && !this.adddata\">\r\n    <h2>Nutzerliste</h2>\r\n    <p class=\"mat-caption greycolor\">In diesem Bereich können Nutzerberechtigungen geändert werden.</p>\r\n    <mat-card>\r\n      <table class=\"table\" mat-table [dataSource]=\"this.users\">\r\n        <ng-container matColumnDef=\"symbol\">\r\n          <th mat-header-cell *matHeaderCellDef></th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <mat-icon class=\"matListIcon\" color=\"accent\" *ngIf=\"element['roles'].indexOf('superadmin')>=0\"\r\n              mat-list-icon>\r\n              admin_panel_settings\r\n            </mat-icon>\r\n            <mat-icon *ngIf=\"element['roles'].indexOf('superadmin')<0\" mat-list-icon>\r\n              account_circle\r\n            </mat-icon>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"user\">\r\n          <th mat-header-cell *matHeaderCellDef> Nutzer </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ fullName(element) }}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"rights\">\r\n          <th mat-header-cell *matHeaderCellDef> Rechte </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <mat-chip-list class=\"smallchips\">\r\n              <span *ngFor=\"let role of element.roles\">\r\n                <mat-chip>{{ toUpperCase(role) }}</mat-chip>\r\n              </span>\r\n            </mat-chip-list>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"group\">\r\n          <th mat-header-cell *matHeaderCellDef> Gruppen </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <ng-container *ngIf=\"element['usergroups']\">\r\n              <mat-chip-list class=\"smallchips\">\r\n                <span *ngFor=\"let group of element.usergroups.smed_reporting\">\r\n                  <mat-chip>{{ toUpperCase(group) }}</mat-chip>\r\n                </span>\r\n              </mat-chip-list>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!element['usergroups'] || !element['usergroups']['smed_reporting']\">\r\n              <mat-chip-list class=\"smallchips\">\r\n                <mat-chip>Public Access</mat-chip>\r\n              </mat-chip-list>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell *matHeaderCellDef> Aktionen </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <button mat-icon-button>\r\n              <mat-icon (click)=\"openUpdateUserDialog(element)\" mat-list-icon>\r\n                settings\r\n              </mat-icon>\r\n            </button>\r\n            <button mat-icon-button>\r\n              <mat-icon (click)=\"openDeleteUserDialog(element)\" color=\"warn\" mat-list-icon>\r\n                delete\r\n              </mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-card>\r\n  </div>\r\n  <div *ngIf=\"this.adddata\" fxLayout=\"column\" fxLayoutGap=\"10px\" fxShow.lt-md=false>\r\n    <h2><strong>Daten hinzufügen</strong></h2>\r\n    <p>Mehr Informationen <a href=\"./assets/docs/Upload_Dateien.html\">hier</a></p>\r\n    <mat-card>\r\n      <div>\r\n        <h3><strong>Was soll hochgeladen werden?</strong></h3>\r\n        <mat-radio-group [(ngModel)]=\"this.dataintend\">\r\n          <mat-radio-button value=\"dataupload\">Daten hinzufügen&nbsp;&nbsp;</mat-radio-button>\r\n          <mat-radio-button *ngIf=\"this.areavalues\" value=\"geodataupload\">Geodaten hinzufügen&nbsp;\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n        <br><br>\r\n      </div>\r\n      <div *ngIf=\"this.dataintend=='geodataupload'\" fxLayout=\"column\">\r\n        <div fxFlex=100>\r\n          <h3><strong>1. GEOJSON Datei hochladen</strong> <span *ngIf=\"this.geojsonfile\">\r\n              <mat-icon color=\"primary\">check_circle</mat-icon>\r\n            </span></h3>\r\n        </div>\r\n        <div *ngIf=\"!this.geojsonfile\" fxFlex.lt-md=100 fxFlex=50 fxLayout=\"column\">\r\n          <div fxFlex=100>\r\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\r\n              <mat-label>Gebiet für Geodatendatei festlegen</mat-label>\r\n              <mat-select [(value)]=\"this.uploadarea\">\r\n                <mat-option *ngFor=\"let option of this.areavalues\" [value]=\"option\">{{option}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=100>\r\n            <input type=\"file\" accept='.geojson' style=\"display: none\" (change)=\"this.changeListenerGEOJSON($event);\"\r\n              #dataInput>\r\n            <br><br>\r\n            <button [disabled]=\"!this.uploadarea\" mat-raised-button color=\"primary\" (click)=\"dataInput.click()\">Daten\r\n              Auswählen</button>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"this.geojsonfile\" fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n          <div fxFlex=100>\r\n            <h3><strong>2. GEOJSON beschreiben</strong> <span *ngIf=\"this.geodatafile\">\r\n                <mat-icon color=\"primary\">check_circle</mat-icon>\r\n              </span></h3>\r\n          </div>\r\n          <div fxFlex=100>\r\n            <p>Die Datei hat {{this.geojsonfile['features'].length | number}} Regionen.</p>\r\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\r\n              <mat-label>Wie lautet die Bezeichnung Regionen im geojson?</mat-label>\r\n              <mat-select [(value)]=\"this.uploadareaid\">\r\n                <mat-option *ngFor=\"let option of this.areafeatures\" [value]=\"option\">{{option}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"this.dataintend=='dataupload'\">\r\n        <h3><strong>1. CSV Datei hochladen</strong> <span *ngIf=\"this.datafile\">\r\n            <mat-icon color=\"primary\">check_circle</mat-icon>\r\n          </span></h3>\r\n        <div *ngIf=\"!this.datafile\" fxFlex.lt-md=100 fxFlex=50>\r\n          <input type=\"file\" accept='.csv' style=\"display: none\" (change)=\"this.datafile=this.changeListener($event);\"\r\n            #dataInput>\r\n          <br><br>\r\n          <button mat-raised-button color=\"primary\" (click)=\"dataInput.click()\">Daten\r\n            Auswählen</button>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    <mat-card *ngIf=\"this.metadatafile && this.dataintend=='dataupload'\">\r\n      <div>\r\n        <h3><strong>2. Daten beschreiben</strong><span *ngIf=\"this.metadone\">\r\n            <mat-icon color=\"primary\">check_circle</mat-icon>\r\n          </span></h3>\r\n        <p>Bitte prüfen Sie die initinale Zuordnung sorgfältig. Jeder Upload muss mindestens zwei Variablen vom\r\n          Bereich \"ordering\" enthalten\r\n          (Typen: level,levelid). Ebenso sollten alle Subgruppenvariablen vom Typ Gruppe sein. Jede Variable\r\n          aus den Bereichen \"ordering\" oder \"sungroups\" muss Angaben zur Referenzkategorie machen.\r\n          Zellen für diese Kategorie müssen auch in der Tabelle zu finden sein. Die Variablen aus den\r\n          Bereichen Outcomes oder\r\n          Demography sollten vom Typ 'rate' oder 'number' sein. Das Hinzufügen einer Indikatorenbeschreibung\r\n          ist optional.</p>\r\n      </div>\r\n      <div *ngIf=\"(this.datacheck.length>0)\">\r\n        <mat-list>\r\n          <h3 matSubheader><strong>Gefundene Fehler:</strong></h3>\r\n          <mat-list-item *ngFor=\"let hinweis of this.datacheck\">\r\n            <mat-icon color=\"primary\" mat-list-icon>error</mat-icon>\r\n            <div mat-line><span class=\"primarycolor\">{{hinweis}}</span></div>\r\n          </mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n      <div class=\"smalltab\" *ngIf=\"this.metadatafile && !this.metadone\" fxflex=100>\r\n        <div class=\"tabheader\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\r\n          <div fxFlex=15>Name</div>\r\n          <div fxFlex=20>Thema</div>\r\n          <div fxFlex=20>Typ</div>\r\n          <div fxFlex>Referenzkategorie</div>\r\n          <div fxFlex=15></div>\r\n        </div>\r\n        <div class=\"tabvalues primarycolor\" *ngFor=\"let row of this.metadatafile\" fxLayout=\"row wrap\"\r\n          fxLayoutGap=\"10px\">\r\n          <div fxFlex=15><br>{{row.varname}}</div>\r\n          <div fxFlex=20>\r\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\r\n              <mat-label>Bereich</mat-label>\r\n              <mat-select [(value)]=\"row.topic\" (selectionChange)=\"this.checkmetadata()\">\r\n                <mat-option *ngFor=\"let option of this.topicoptions\" [value]=\"option\">{{option}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=20>\r\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\r\n              <mat-label>Art</mat-label>\r\n              <mat-select [(value)]=\"row.type\" (selectionChange)=\"this.checkmetadata()\">\r\n                <mat-option *ngFor=\"let option of this.typeoptions\" [value]=\"option\">{{option}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex>\r\n            <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)>=0\">\r\n              <mat-form-field appearance=\"outline\" *ngIf=\"true\">\r\n                <mat-label>Referenzkategorie</mat-label>\r\n                <mat-select [(value)]=\"row.allforlevel\" (selectionChange)=\"this.checkmetadata()\">\r\n                  <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\r\n                    {{option}}</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"outline\" *ngIf=\"row.type=='level'\">\r\n                <mat-label>Öffentliche Raumebenen</mat-label>\r\n                <mat-select [(value)]=\"row.publiclevels\" (selectionChange)=\"this.checkmetadata()\" multiple>\r\n                  <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\r\n                    {{option}}</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)<0\">\r\n            </ng-container>\r\n          </div>\r\n          <div fxFlex=15>\r\n            <mat-chip-list>\r\n              <mat-chip color=\"primary\" (change)=\"this.checkmetadata()\" [selected]=\"row.public\"\r\n                (click)=\"row.public=!row.public\">\r\n                <span *ngIf=\"row.public\">Öffentlich</span>\r\n                <span *ngIf=\"!row.public\">Privat</span>\r\n              </mat-chip>\r\n              <mat-chip color=\"primary\" [selected]=\"row.adddescr\" (click)=\"row.adddescr=!row.adddescr\">\r\n                Beschreibung\r\n              </mat-chip>\r\n            </mat-chip-list>\r\n          </div>\r\n          <div *ngIf=\"row.adddescr\" fxFlex=100>\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n              <mat-label>Indikatorenbeschreibung</mat-label>\r\n              <textarea style=\"color:black\" [(ngModel)]=\"row.description\" matInput rows=\"10\" cols=\"40\"></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div><button mat-raised-button [disabled]=\"!(this.datacheck.length==0)\" (click)=\"this.metadone=true\"\r\n              color=\"accent\">Beschreibung\r\n              Fertig</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    <div *ngIf=\"this.metadone\">\r\n      <mat-card>\r\n        <h3><strong>3. Sollen die aktuellen Daten überschrieben werden?</strong></h3>\r\n        <p>\r\n          <mat-slide-toggle [(ngModel)]=\"this.replacedata\"></mat-slide-toggle>\r\n          <span style=\"color:crimson;\" *ngIf=\"this.replacedata\">überschreiben</span>\r\n          <span *ngIf=\"!this.replacedata\">nicht überschreiben.</span>\r\n        </p>\r\n        <p *ngIf=\"!this.replacedata\"><em>Achtung: Das Ergänzen der Daten ist aufwändig und erfordert ggf. viel\r\n            Zeit. Bitte ergänzen Sie nur kleine Datenkörper!</em>\r\n        </p>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"add-margin\" fxLayoutAlign=\"space-between\" *ngIf=\"(!this.uploadres || this.uploadres=='error')\">\r\n      <div><button mat-raised-button (click)=\"uploadnewdata()\" [disabled]=\"(!this.metadone) && (!this.uploadareaid)\"\r\n          color=\"accent\">Hinzufügen\r\n        </button></div>\r\n      <div><button mat-raised-button (click)=\"this.resetall();\" color=\"primary\">Abbrechen</button></div>\r\n    </div>\r\n    <div *ngIf=\"this.uploadres\">\r\n      <mat-card>\r\n        <h1>Datenupload</h1>\r\n        <mat-spinner *ngIf=\"this.uploadres=='pending'\" [diameter]=\"50\"></mat-spinner>\r\n        <p *ngIf=\"this.uploadres=='pending'\">Hinweis: Bitte haben Sie Geduld: Es kann etwas dauern wenn viele\r\n          Daten aktualisiert oder gelöscht werden müssen.</p>\r\n        <p *ngIf=\"this.uploadres=='success'\">\r\n          <strong>Upload erfolgreich!</strong>\r\n        </p>\r\n        <p *ngIf=\"this.uploadres=='error'\">\r\n          <strong>Fehler beim Upload</strong> Fehlermeldung: <span class=\"primarycolor\">{{this.uploaderror}}</span>\r\n        </p>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { UntypedFormBuilder, Validators, UntypedFormGroup, UntypedFormControl } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'addUserDialog',\r\n  templateUrl: 'addUserDialog.html'\r\n})\r\n\r\nexport class AddUserDialog implements OnInit {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddUserDialog>,\r\n    private api: ApiService,\r\n    private fb: UntypedFormBuilder,\r\n  ) { }\r\n\r\n  myRegform: any;\r\n  usergroupoptions = [{ name: 'Public Access', value: 'public' }, { name: 'KV Benutzer', value: 'kvuser' }];\r\n  userRights = [{ name: 'User', value: 'user' }, { name: 'Admin', value: 'admin' }, { name: 'Superadmin', value: 'superadmin' }]\r\n  salutations = ['Herr', 'Frau', 'Frau Dr.', 'Herr Dr.', 'Dr.', ' ']\r\n\r\n  ngOnInit(): void {\r\n    // this.currentuser = this.auth.getUserDetails();\r\n    this.buildForm();\r\n    this.getUserGroups()\r\n  }\r\n\r\n  addUser() {\r\n    const userDataAdd = this.myRegform.value;\r\n    this.api.postTypeRequest(\"newuser\", userDataAdd).subscribe(\r\n      data => { }\r\n    );\r\n  }\r\n\r\n  async getUserGroups(): Promise<void> {\r\n    const metaData: Array<any> = await this.api.getmetadata(\"metadata\")\r\n    const getLevelId = metaData.filter(item => item.varname === 'levelid')[0]\r\n    const levelRights = getLevelId.levelrights\r\n\r\n    if (levelRights) {\r\n      const getCustomerLevels = Object.keys(levelRights)\r\n        .filter((key) => !key.includes('kvuser') && !key.includes('public'))\r\n        .reduce((cur, key) => {\r\n          return Object.assign(cur, { [key]: levelRights[key] })\r\n        }, {})\r\n\r\n      const levelKeys = Object.keys(getCustomerLevels)\r\n\r\n      for (const level of levelKeys) {\r\n        this.usergroupoptions.push({ name: level, value: level })\r\n      }\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.myRegform = new UntypedFormGroup({\r\n      anrede: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\r\n      firstname: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\r\n      lastname: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\r\n      email: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\r\n      roles: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\r\n      dataLevel: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\r\n      password: new UntypedFormControl({ value: '', disabled: false }, [Validators.required, Validators.minLength(12)])\r\n    })\r\n\r\n    this.myRegform.patchValue({ \"password\": this.randomPassword() });\r\n  };\r\n\r\n  randomPassword() {\r\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close()\r\n  }\r\n}","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=100>\r\n    <h2><strong>Nutzer hinzufügen</strong></h2>\r\n    <mat-card>\r\n      <form autocomplete=\"on\" [formGroup]=\"myRegform\">\r\n        <h2><strong>Informationen</strong></h2>\r\n        <h4><strong>Name</strong>:</h4>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <mat-label>Anrede</mat-label>\r\n          <mat-select name=\"anredefeld\" formControlName=\"anrede\" required>\r\n            <mat-option *ngFor=\"let salutation of salutations\" [value]=\"salutation\">\r\n              {{ salutation === ' ' ? 'keine Anrede' : salutation }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\r\n          <mat-label>Vorname</mat-label>\r\n          <input matInput placeholder=\"First name\" name=\"fname\" formControlName=\"firstname\">\r\n          <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\r\n          <mat-label>Nachname</mat-label>\r\n          <input matInput placeholder=\"Last Name\" name=\"lname\" formControlName=\"lastname\">\r\n          <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\r\n        </mat-form-field>\r\n        <h4><strong>E-Mail</strong> des neuen Nutzers</h4>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n          <mat-icon matSuffix>email</mat-icon>\r\n          <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\r\n        </mat-form-field>\r\n        <h4><strong>Rechte</strong></h4>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <mat-select name=\"roles\" formControlName=\"roles\">\r\n            <mat-option *ngFor=\"let rights of userRights\" [value]=\"rights.value\">\r\n              {{ rights.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error>Bitte wählen Sie eine Bereichtungsstufe aus.</mat-error>\r\n        </mat-form-field>\r\n        <h4><strong>Daten-Level</strong></h4>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <mat-select multiple name=\"dataLevel\" formControlName=\"dataLevel\">\r\n            <mat-option *ngFor=\"let dataLevel of usergroupoptions\" [value]=\"dataLevel.value\">\r\n              {{ dataLevel.name }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error>Bitte wählen Sie mindestens ein Datenlevel aus.</mat-error>\r\n        </mat-form-field>\r\n        <h4>Initiales <strong>Passwort</strong>:</h4>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <mat-label>Passwort</mat-label>\r\n          <mat-error>Passwort zu kurz</mat-error>\r\n          <input matInput type=\"string\" formControlName=\"password\" required>\r\n          <mat-hint>Bitte kopieren Sie das Passwort</mat-hint>\r\n          <mat-hint *ngIf=\"this.myRegform.value.password.length<12\">Ihr Passwort (mindestens 12 Zeichen).\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </form>\r\n    </mat-card>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\r\n    <button mat-raised-button (click)=\"onNoClick()\" color=\"warn\">Abbrechen</button>\r\n    <button [disabled]=\"this.myRegform.value.password.length<12\" mat-raised-button (click)=\"this.addUser();\"\r\n      color=\"primary\">Hinzufügen</button>\r\n  </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'deleteUserDialog',\r\n  templateUrl: 'deleteUserDialog.html'\r\n})\r\n\r\nexport class DeleteUserDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteUserDialog>,\r\n    private api: ApiService,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: any\r\n  ) { }\r\n\r\n  deletUser() {\r\n    alert('delete')\r\n    // open dialog to reinsure it wasn't a mistake\r\n    // this.api.deleteuser(user).subscribe(\r\n    //   data => { this.updateUserList() });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close()\r\n  }\r\n}","<h2><strong>Nutzer Löschen</strong></h2>\r\n<mat-card>\r\n  <p>Sind Sie sicher dass Sie den User {{ data.firstname }} löschen wollen?</p>\r\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\r\n    <button mat-raised-button (click)=\"onNoClick()\">Abrechen</button>\r\n    <button mat-raised-button (click)=\"deletUser()\">Löschen</button>\r\n  </div>\r\n</mat-card>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'updateUserDialog',\r\n  templateUrl: 'updateUserDialog.html',\r\n  styleUrls: ['./updateUserDialog.scss']\r\n})\r\n\r\nexport class UpdateUserDialog implements OnInit {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UpdateUserDialog>,\r\n    private api: ApiService,\r\n    private fb: UntypedFormBuilder,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: any\r\n  ) { }\r\n\r\n  users: any;\r\n  myRegform: any;\r\n  isPasswordChange: boolean = false\r\n  userGroupOptions = [{ name: 'Public Access', value: 'public', selected: false }, { name: 'KV Benutzer', value: 'kvuser', selected: false }];\r\n  userRights = [{ name: 'User', value: 'user', selected: false }, { name: 'Admin', value: 'admin', selected: false }, { name: 'Superadmin', value: 'superadmin', selected: false }]\r\n  salutations = ['Herr', 'Frau', 'Frau Dr.', 'Herr Dr.', 'Dr.', ' ']\r\n  strongPasswordRegx: RegExp = /^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\D*\\d).{8,}$/;\r\n\r\n  ngOnInit(): void {\r\n    // this.currentuser = this.auth.getUserDetails();\r\n    this.buildForm();\r\n    this.getUserGroups()\r\n  }\r\n\r\n  async getUserGroups(): Promise<void> {\r\n    const metaData: Array<any> = await this.api.getmetadata(\"metadata\")\r\n    const getLevelId = metaData.filter(item => item.varname === 'levelid')[0]\r\n    const levelRights = getLevelId.levelrights\r\n\r\n    if (levelRights) {\r\n      const getCustomerLevels = Object.keys(levelRights)\r\n        .filter((key) => !key.includes('kvuser') && !key.includes('public'))\r\n        .reduce((cur, key) => {\r\n          return Object.assign(cur, { [key]: levelRights[key] })\r\n        }, {})\r\n\r\n      const levelKeys = Object.keys(getCustomerLevels)\r\n\r\n      for (const level of levelKeys) {\r\n        this.userGroupOptions.push({ name: level, value: level, selected: false })\r\n      }\r\n    }\r\n\r\n    this.rights()\r\n    this.dataLevel()\r\n  }\r\n\r\n  rights() {\r\n    for (let role of this.data.roles) {\r\n      for (let rights of this.userRights) {\r\n        if (role === rights.value) {\r\n          rights.selected = true\r\n        }\r\n        if (this.data.is_admin && rights.value === 'admin') {\r\n          rights.selected = true\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.userRights\r\n  }\r\n\r\n  dataLevel() {\r\n    for (let group of this.data.usergroups.smed_reporting) {\r\n      for (let group_ of this.userGroupOptions) {\r\n        if (group === group_.value) {\r\n          group_.selected = true\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.userGroupOptions\r\n  }\r\n\r\n  updateUserRole(type, user, key, value) {\r\n    if (type === 'role') {\r\n      if (value === 'user') {\r\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\r\n\r\n        this.api.updateuser(user.email, value, !user['is_user']).subscribe()\r\n      }\r\n      if (value === 'admin') {\r\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\r\n\r\n        this.api.updateuser(user.email, value, !user['is_admin']).subscribe()\r\n      }\r\n      if (value === 'superadmin') {\r\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\r\n\r\n        this.api.updateuser(user.email, value, !user['is_superadmin']).subscribe()\r\n      }\r\n    }\r\n  }\r\n\r\n  updateUserDataLevel(type, user, key, value) {\r\n    let add = false\r\n\r\n    if (value !== 'public') {\r\n      add = true\r\n    }\r\n\r\n    this.userGroupOptions.filter(i => { if (i.value === value) i.selected = !i.selected })\r\n\r\n    this.api.updateuser(user, key, add, value).subscribe()\r\n  }\r\n\r\n  buildForm() {\r\n    this.myRegform = new UntypedFormGroup({\r\n      anrede: new UntypedFormControl({ value: this.data.anrede, disabled: true }),\r\n      firstname: new UntypedFormControl({ value: this.data.firstname, disabled: true }),\r\n      lastname: new UntypedFormControl({ value: this.data.lastname, disabled: true }),\r\n      password: new UntypedFormControl('', { validators: [Validators.required, Validators.pattern(this.strongPasswordRegx)] }),\r\n      email: new UntypedFormControl({ value: this.data.email, disabled: true }),\r\n      roles: new UntypedFormControl({ value: this.data.roles[this.data.roles.length - 1], disabled: false }),\r\n      dataLevel: new UntypedFormControl({ value: this.data.usergroups ? this.data.usergroups.smed_reporting : [], disabled: false }),\r\n    })\r\n  };\r\n\r\n  randomPassword() {\r\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\r\n  }\r\n\r\n  togglePasswordChange() {\r\n    this.isPasswordChange = !this.isPasswordChange\r\n  }\r\n\r\n  changePassword() {\r\n    const password = this.myRegform.value.password\r\n    \r\n    this.api.changeuserpwd(this.data.email, password).subscribe(data => { })\r\n    this.togglePasswordChange()\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close()\r\n  }\r\n}","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=100>\r\n    <!-- {{ data | json }} -->\r\n    <h2><strong>Nutzer Bearbeiten</strong></h2>\r\n    <mat-card>\r\n      <form autocomplete=\"on\" [formGroup]=\"myRegform\">\r\n        <h2><strong>Informationen</strong></h2>\r\n        <h4><strong>Name</strong>:</h4>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <mat-label>Anrede</mat-label>\r\n          <mat-select name=\"anredefeld\" formControlName=\"anrede\">\r\n            <mat-option *ngFor=\"let salutation of salutations\" [value]=\"salutation\">\r\n              {{ salutation === ' ' ? 'keine Anrede' : salutation }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <mat-label>Vorname</mat-label>\r\n          <input matInput placeholder=\"First name\" name=\"fname\" formControlName=\"firstname\">\r\n          <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\r\n          <mat-label>Nachname</mat-label>\r\n          <input matInput placeholder=\"Last Name\" name=\"lname\" formControlName=\"lastname\">\r\n          <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\r\n        </mat-form-field>\r\n        <h4><strong> E-Mail</strong></h4>\r\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n          <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n          <mat-icon matSuffix>email</mat-icon>\r\n          <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\r\n        </mat-form-field>\r\n        <div *ngIf=\"!isPasswordChange\">\r\n          <button mat-raised-button (click)=\"togglePasswordChange()\">Passwort ändern</button>\r\n        </div>\r\n        <div *ngIf=\"isPasswordChange\">\r\n          <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n            <input matInput type=\"password\" placeholder=\"Passwort\" formControlName=\"password\">\r\n          </mat-form-field>\r\n          <div style=\"font-size: small; font-style: italic; color: gray;\">Passwort muss 8 Zeichen lang sein, min. einen\r\n            Groß.- und Kleinbuchstaben, eine Zahl und ein\r\n            Sonderzeichen enthalten.</div>\r\n          <button mat-raised-button (click)=\"togglePasswordChange()\">Abbrechen</button>\r\n          <button mat-raised-button (click)=\"changePassword()\">Ändern</button>\r\n        </div>\r\n        <h4><strong>Rechte</strong></h4>\r\n        <mat-chip-list class=\"smallchips\">\r\n          <mat-chip color=\"primary\" *ngFor=\"let right of userRights\" [value]=\"right.value\"\r\n            (click)=\"updateUserRole('role', data, 'user', right.value)\">\r\n            <mat-icon matListIcon *ngIf=\"right.selected\">check</mat-icon>\r\n            {{ right.name }}\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n        <h4><strong>Daten-Level</strong></h4>\r\n        <mat-chip-list class=\"smallchips\">\r\n          <mat-chip color=\"primary\" *ngFor=\"let dataLevel of userGroupOptions\" [value]=\"dataLevel.value\"\r\n            (click)=\"updateUserDataLevel('dataLevel', data.email, 'usergroups', dataLevel.value)\">\r\n            <mat-icon matListIcon *ngIf=\"dataLevel.selected\">check</mat-icon>\r\n            {{ dataLevel.name }}\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </form>\r\n    </mat-card>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\r\n    <!-- <button mat-raised-button (click)=\"onNoClick()\" color=\"warn\">Abbrechen</button> -->\r\n    <button mat-raised-button (click)=\"onNoClick()\" color=\"primary\">Schließen</button>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core'; \r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms'; \r\nimport { Router } from '@angular/router'; \r\nimport { AuthService } from 'src/app/services/auth.service'; \r\nimport {ApiService} from '../../services/api.service' \r\n\r\n \r\n@Component({ \r\n  selector: 'app-login', \r\n  templateUrl: './login.component.html', \r\n  styleUrls: ['./login.component.scss'] \r\n}) \r\nexport class LoginComponent implements OnInit { \r\n  form: UntypedFormGroup \r\n  constructor( \r\n    private _api : ApiService, \r\n    private _auth: AuthService, \r\n    private router: Router, \r\n    public fb: UntypedFormBuilder \r\n    \r\n    \r\n  ) { }\r\n  loggedin:boolean; \r\n  login_pending:boolean;\r\n  loginerror:boolean;\r\n\r\n\r\n \r\n  ngOnInit(): void { \r\n    this.login_pending = false;\r\n    this.form = this.fb.group({ \r\n      username: ['', Validators.required], \r\n      password:['', Validators.required] \r\n    }); \r\n    if(this._auth.getToken()){this.loggedin=true;}\r\n  } \r\n \r\n  login(){\r\n    this.login_pending = true;\r\n    this._auth.login(this.form.value).subscribe(data => {\r\n      setTimeout(()=>{\r\n        this.loggedin=true; \r\n        this.router.navigate(['/']);\r\n      },750);    \r\n      \r\n    },error => {\r\n      this.loginerror = true;\r\n    });\r\n    this.login_pending = false;\r\n  }\r\n  \r\n  logout(){\r\n    this._auth.logout();    \r\n    this.router.navigate(['/']);\r\n  }\r\n \r\n}\r\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n    <div fxFlex=100 style=\"max-width: 500px;\" *ngIf=\"!this.loggedin\">\r\n        <mat-card>\r\n            <form  [formGroup]='form' (ngSubmit)='login()'>\r\n                <h1>Login</h1>\r\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n                    <mat-label>E-Mail</mat-label>\r\n                    <input matInput type=\"email\" placeholder=\"Email\" name=\"email\" formControlName='username' autocomplete=\"false\" required>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n                    <mat-label>Kennwort</mat-label>\r\n                    <input matInput type=\"password\" name=\"current-password\" formControlName='password' required autocomplete=\"false\">\r\n                </mat-form-field>\r\n                <div *ngIf=\"!this.login_pending\" fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\r\n                    <div>\r\n                        <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"logout()\">\r\n                            Abbrechen\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button mat-raised-button color=\"primary\" type='submit' [disabled]='!this.form.valid' >\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"this.login_pending\">\r\n                    ... in Bearbeitung ... \r\n                </div>\r\n                <div *ngIf=\"this.loginerror\">\r\n                    <p style=\"color:crimson;\">Falscher Benutzername/Falsches Kennwort</p>\r\n                </div>\r\n            </form>\r\n        </mat-card>\r\n    </div>\r\n\r\n    <div *ngIf=\"this.loggedin\">\r\n        You're in!\r\n        <button mat-raised-button color=\"accent\" (click)=\"logout()\">\r\n            Ausloggen\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CsvexportService } from 'src/app/services/csvexport.service';\r\n\r\n@Component({\r\n  selector: 'app-private',\r\n  templateUrl: './private.component.html',\r\n  styleUrls: ['./private.component.scss']\r\n})\r\nexport class PrivateComponent implements OnInit {\r\n  constructor(private api: ApiService, private auth: AuthService, private csv: CsvexportService) { }\r\n  tsquery = {};\r\n  tsqueryresult = {};\r\n  bevrefdata = {};\r\n  colorsscheme;\r\n  restablecols = [];\r\n  progress = false;\r\n  settings: any;\r\n  duration: number;\r\n  levelvalues = [\r\n    'Gesamt',\r\n    'Baden-Württemberg',\r\n    'Bayern',\r\n    'Berlin',\r\n    'Brandenburg',\r\n    'Bremen',\r\n    'Hamburg',\r\n    'Hessen',\r\n    'Mecklenburg-Vorpommern',\r\n    'Niedersachsen',\r\n    'Nordrhein-Westfalen',\r\n    'Nordrhein',\r\n    'Westfalen-Lippe',\r\n    'Rheinland-Pfalz',\r\n    'Saarland',\r\n    'Sachsen',\r\n    'Sachsen-Anhalt',\r\n    'Schleswig-Holstein',\r\n    'Thüringen'];\r\n  outcomes = [\r\n    //'Anteil Assessments', \r\n    'Anzahl Assessments',\r\n    //'Anzahl Assessments je 100 Tsd. Einw.', ## Not possible due to missing reference data\r\n    'Anzahl Beschwerden pro Assessment',\r\n    'Anzahl Fragen je Assessment',\r\n    'Mittlere Dauer je Assessment',\r\n    'Mittlere Dauer Disposition',\r\n    //'Anteil Assessment an Disposition',\r\n    //'Häufigste Beschwerden',\r\n    //'Häufigste Hauptbeschwerden'\r\n  ]\r\n\r\n  diffmerkmale = [\r\n    'KV',\r\n    'Alter',\r\n    'Geschlecht',\r\n    'Wochentag',\r\n    'Empfehlung Dringlichkeit',\r\n    'Empfehlung Ort',\r\n    'Entscheidung Dringlichkeit',\r\n    'Entscheidung Ort',\r\n    'Hauptbeschwerde',\r\n    'Beschwerde'\r\n  ];\r\n\r\n  diffvars = {\r\n    'KV': 'levelid',\r\n    'Alter': ['ALTER_id', 'ALTER_text'],\r\n    'Geschlecht': ['Geschlecht'],\r\n    'Wochentag': [],\r\n    'Empfehlung Dringlichkeit': ['TTTsmed_id', 'TTTsmed_text'],\r\n    'Empfehlung Ort': ['POCsmed_id', 'POCsmed_text'],\r\n    'Entscheidung Dringlichkeit': ['TTTdispo_id', 'TTTdispo_text'],\r\n    'Entscheidung Ort': ['POCdispo_id', 'POCdispo_text'],\r\n    'Hauptbeschwerde': ['Hauptbeschwerde'],\r\n    'Beschwerde': ['Beschwerden_gesamt']\r\n  }\r\n\r\n  SmED_Modul: string = \"Alle\";\r\n  SmED_Level: string = \"Alle\";\r\n\r\n  isSingleDayAnalyses = false\r\n\r\n  ngOnInit(): void {\r\n    this.colorsscheme = this.api.makescale(5);\r\n    //console.log('colors',this.colorsscheme);\r\n    this.settings = { 'analyzeall': true, 'level': 'KV', 'levelid': 'Gesamt', 'diffmerkmale': [] };\r\n    //testesttings\r\n    this.settings = {\r\n      \"analyzeall\": true, \"level\": \"KV\", \"levelid\": \"Gesamt\", \"diffmerkmale\": [],\r\n      \"start\": new Date(\"2022-01-02\"),\r\n      \"end\": new Date(\"2022-01-08\"), \"outcome\": \"Anzahl Assessments\"\r\n    };\r\n\r\n    this.timeseriesquery();\r\n  }\r\n\r\n  updatequery(key, value) {\r\n    //console.log(\"Settings changed\");\r\n    if (key != \"__change\" && key != \"diffmerkmale\") { this.settings[key] = value };\r\n\r\n    if (key == \"levelid\" && value == \"Gesamt\") { this.settings['analyzeall'] = true; };\r\n\r\n    if (key == 'outcome' && value == 'Anzahl Assessments je 100 Tsd. Einw.') {\r\n      this.settings['diffmerkmale'] = [];\r\n    }\r\n\r\n    if (key == 'diffmerkmale') {\r\n      if (this.settings['diffmerkmale'].includes(value)) {\r\n        this.settings['diffmerkmale'] = this.settings['diffmerkmale'].filter(function (item) { return item !== value });\r\n      }\r\n      else {\r\n        if (!this.settings['diffmerkmale'].includes(value) && this.settings['diffmerkmale'].length < 2) {\r\n          if (!((this.settings['outcome'] == 'Anzahl Assessments je 100 Tsd. Einw.') && ['Alter', 'Geschlecht'].includes(value)))\r\n            this.settings['diffmerkmale'].push(value);\r\n        };\r\n      };\r\n    }\r\n\r\n    if (key == 'SmED_Modul') {\r\n      this.SmED_Modul = value;\r\n    }\r\n\r\n    if (key == 'SmED_Level') {\r\n      this.SmED_Level = value;\r\n    }\r\n\r\n    if (this.checkparams()) {\r\n      this.timeseriesquery();\r\n    }\r\n  }\r\n\r\n  checkparams() {\r\n    let res = true;\r\n    this.duration = 0;\r\n\r\n    if (this.settings['start'] && this.settings['end']) {\r\n      this.duration = (this.settings['end'] - this.settings['start']) / 1000 / 60 / 60 / 24;\r\n    };\r\n\r\n    if (this.duration == 0 || this.duration > 90) {\r\n      res = false;\r\n    };\r\n\r\n    if (!this.settings['outcome']) {\r\n      res = false;\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  timeseriesquery() {\r\n    this.progress = true;\r\n    this.tsqueryresult = [];\r\n\r\n    let _start = new Date(this.settings['start'])\r\n    let _end = new Date(this.settings['end'])\r\n\r\n    if(this.isSingleDayAnalyses) {\r\n      _end = _start\r\n    }\r\n    \r\n    function setDate(date) {\r\n      const minutesOffset = new Date(date.setMinutes(date.getMinutes() - date.getTimezoneOffset()))\r\n      \r\n      return minutesOffset.toISOString().substring(0, 10);\r\n    }\r\n    \r\n    let start = \"\";\r\n    \r\n    if (this.settings['start']) { start = setDate(_start) };\r\n    \r\n    let end = \"\";\r\n\r\n    if (this.settings['end']) { end = setDate(_end) };\r\n\r\n    this.tsqueryresult = {};\r\n    this.bevrefdata = {};\r\n    this.tsquery = {\r\n      \"startdate\": start.slice(0, 10),\r\n      \"stopdate\": end.slice(0, 10),\r\n      \"timeframe\": \"none\",\r\n      \"outcome\": NaN,\r\n      \"filterlist\":\r\n        { 'level': 'KV' }\r\n      ,\r\n      \"subgroups\": [],\r\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID\r\n    };\r\n\r\n    if (this.settings['levelid'] != \"Gesamt\") { this.tsquery['filterlist']['levelid'] = this.settings['levelid'] };\r\n\r\n    for (let item of this.settings['diffmerkmale']) {\r\n      this.tsquery['subgroups'] = this.tsquery['subgroups'].concat(this.diffvars[item]);\r\n    };\r\n\r\n    if (this.settings['diffmerkmale'].includes('Wochentag')) {\r\n      this.tsquery['timeframe'] = 'weekday';\r\n    };\r\n\r\n    if ('Anzahl Beschwerden pro Assessment' == this.settings['outcome']) {\r\n      this.tsquery['outcome'] = \"Anzahl_Beschwerden\";\r\n    };\r\n\r\n    if ('Anzahl Fragen je Assessment' == this.settings['outcome']) {\r\n      this.tsquery['outcome'] = \"Anzahl_Fragen\";\r\n    };\r\n\r\n    if ('Mittlere Dauer je Assessment' == this.settings['outcome']) {\r\n      this.tsquery['outcome'] = \"DAUERsmed\";\r\n    };\r\n\r\n    if ('Mittlere Dauer Disposition' == this.settings['outcome']) {\r\n      this.tsquery['outcome'] = \"DAUERdispo\";\r\n      this.tsquery[\"filterlist\"]['DAUERdispo'] = { $gte: 0 }\r\n    };\r\n\r\n    if ('Anteil Assessment an Disposition' == this.settings['outcome']) {\r\n      // later 2 Queries need to be done, one for DAUERsmed and one DAUERdispo\r\n      // console.log(\"Not implemented yet!\");\r\n    };\r\n\r\n    if ('Häufigste Beschwerden' == this.settings['outcome']) {\r\n      this.tsquery['outcome'] = \"Beschwerden_gesamt\";\r\n    };\r\n    \r\n    if ('Häufigste Hauptbeschwerden' == this.settings['outcome']) {\r\n      this.tsquery['outcome'] = \"Hauptbeschwerde\";\r\n    };\r\n\r\n    this.restablecols = this.settings['diffmerkmale'].concat([this.tsquery['outcome'], 'Anzahl', 'Anteil']);\r\n\r\n    if (!this.tsquery['outcome']) {\r\n      this.restablecols = this.settings['diffmerkmale'].concat(['Anzahl', 'Anteil']);\r\n    }\r\n\r\n    // Level/Modul\r\n    if (this.SmED_Level != \"Alle\") {\r\n      if (this.SmED_Level != \"Patient\") {\r\n        this.tsquery[\"filterlist\"]['SMED_Level'] = this.SmED_Level;\r\n      }\r\n      else {\r\n        this.tsquery[\"filterlist\"]['SMED_Level'] = 'pubusersmed';\r\n      }\r\n    }\r\n\r\n    if (this.SmED_Modul != \"Alle\") {\r\n      this.tsquery[\"filterlist\"]['SMED_Modul'] = this.SmED_Modul;\r\n    }\r\n\r\n    this.api.postTypeRequest('get_data/', {\r\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\r\n      \"groupinfo\": {\r\n        \"level\": \"KV\", \"levelid\": this.settings['levelid'],\r\n        \"Jahr\": parseInt(this.tsquery['stopdate'].slice(0, 4)),\r\n        \"Monat\": parseInt(this.tsquery['stopdate'].slice(5, 7))\r\n      },\r\n      \"showfields\": ['level', 'levelid', 'Jahr', 'Monat', 'KM6Versicherte', 'BEVSTAND']\r\n    }).subscribe(data => {\r\n      this.bevrefdata = data['data'][0];\r\n      this.api.postTypeRequest('analytics/timeseries/', this.tsquery).subscribe(data => { this.tsqueryresult = this.preparedata(data); });\r\n    });\r\n  }\r\n\r\n  preparedata(input) {\r\n    let output = [];\r\n\r\n    if (input.length > 0) {\r\n      let allitems = this.api.sumArray(this.api.getValues(input, 'count'));\r\n\r\n      for (let item of input) {\r\n        //item['Bev']=this.bevrefdata['BEVSTAND'];        \r\n        if (parseFloat(item['count']) > 0) {\r\n          item['Anzahl'] = item['count'];\r\n          item['Anteil'] = Math.round(1000 * item['count'] / allitems) / 1000;\r\n        }\r\n\r\n        //item['Je100Tsd']=Math.round(1e6*item['count']/item['Bev'])/10;\r\n        item['Alter'] = item['ALTER_text'];\r\n        item['Wochentag'] = this.api.getweekdayname(item['timeframe'], true);\r\n        item['KV'] = item['levelid'];\r\n\r\n        if (item['POCsmed_text']) {\r\n          item['Empfehlung Ort'] = item['POCsmed_text'];\r\n        };\r\n\r\n        if (item['TTTsmed_text']) {\r\n          item['Empfehlung Dringlichkeit'] = item['TTTsmed_text'];\r\n        };\r\n\r\n        if (item['POCdispo_text']) {\r\n          item['Entscheidung Ort'] = item['POCdispo_text'];\r\n        };\r\n\r\n        if (item['TTTdispo_text']) {\r\n          item['Entscheidung Dringlichkeit'] = item['TTTdispo_text'];\r\n        };\r\n\r\n        if (item['Beschwerden_gesamt']) {\r\n          item['Beschwerde'] = item['Beschwerden_gesamt'];\r\n          delete item['Beschwerden_gesamt'];\r\n        };\r\n\r\n        if (item['Anzahl']) {\r\n          output.push(item);\r\n        };\r\n      }\r\n\r\n      if (this.settings['diffmerkmale'].includes('Alter')) {\r\n        output = this.api.sortArray(output, 'ALTER_id');\r\n      }\r\n    }\r\n\r\n    this.progress = false;\r\n\r\n    return output;\r\n  }\r\n\r\n  exportascsv(name, data) {\r\n    this.csv.exportToCsv(name, data);\r\n    this.csv.exportToCsv(name + \"_settings.csv\", [this.settings]);\r\n  }\r\n}\r\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"30px\">\r\n  <div>\r\n    <h1 ngClass.lt-sm=\"mobileheading\">Tool für erweiterte Analysen</h1>\r\n    <p class=\"lightgreycolor\">In diesem Bereich nur für KV-Mitarbeiter ist ein Zugriff auf faktisch anonymisierte\r\n      Individualdatensätze möglich.\r\n      <span style=\"color:white;\">Bitte beachten Sie, dass die unstandardisierten Abfragen in diesem Bereich ggf. etwas\r\n        länger dauern.</span>.\r\n    </p>\r\n  </div>\r\n  <div *ngIf=\"true\">\r\n    <div>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\" *ngIf=\"!this.isSingleDayAnalyses\">\r\n          <mat-label>Analysezeitraum</mat-label>\r\n          <mat-date-range-input [rangePicker]=\"picker\">\r\n            <input matStartDate placeholder=\"Beginn\" (dateChange)=\"this.updatequery('__change',true)\"\r\n              [(ngModel)]=\"this.settings['start']\">\r\n            <input matEndDate placeholder=\"Ende\" (dateChange)=\"this.updatequery('__change',true)\"\r\n              [(ngModel)]=\"this.settings['end']\">\r\n          </mat-date-range-input>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-date-range-picker #picker></mat-date-range-picker>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\" *ngIf=\"this.isSingleDayAnalyses\">\r\n          <mat-label>Analysezeitraum</mat-label>\r\n          <input matInput [matDatepicker]=\"picker\" (dateChange)=\"this.updatequery('__change',true)\"\r\n            [(ngModel)]=\"this.settings['start']\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-slide-toggle [(ngModel)]=\"isSingleDayAnalyses\" style=\"padding-bottom: 15px;\">\r\n          ein Tag Analyse\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <p *ngIf=\"this.duration>64\" class=\"accentcolor\">\r\n        Die maximale Länge des Analysezeitraums beträgt 64 Tage. Ihre Anfrage kann nicht ausgeführt werden.\r\n      </p>\r\n      <p *ngIf=\"(this.duration>7 && this.duration<=64) && (this.settings['levelid']=='Gesamt')\"\r\n        class=\"mat-caption greycolor\">\r\n        Bitte beachten Sie, aufgrund der großen Zahl betroffener Datensätze kann es zu einer verzögerten Auswertung\r\n        kommen.\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <h3>Region</h3>\r\n      <p>\r\n        <mat-chip-list>\r\n          <mat-chip (click)=\"this.updatequery('levelid',item);\" *ngFor=\"let item of this.levelvalues\"\r\n            [selected]=\"(this.settings['levelid']==item)\" color=\"primary\">\r\n            {{item}}\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <h3>Level</h3>\r\n      <p>\r\n        <mat-chip-list>\r\n          <mat-chip (click)=\"this.updatequery('SmED_Level',item);\"\r\n            *ngFor=\"let item of ['Alle','Telefon','Tresen','Patient']\" [selected]=\"(this.SmED_Level==item)\"\r\n            color=\"primary\">\r\n            {{item}}\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </p>\r\n      <p class=\"mat-caption lightgreycolor\" *ngIf=\"this.SmED_Level=='Patient'\">Hinweis Assessments mit SmED-Patient sind\r\n        ab dem 6.12.21 enthalten. Sie können aktuell noch nicht KVen zugeordnet werden. Bitte wählen Sie \"Gesamt\" als\r\n        Region aus.</p>\r\n      <h3>Modul</h3>\r\n      <p>\r\n        <mat-chip-list>\r\n          <mat-chip (click)=\"this.updatequery('SmED_Modul',item);\"\r\n            *ngFor=\"let item of ['Alle','SmED-Triage','SmED-COVID-kurz','SmED-COVID-integriert','SmED-Kontakt+']\"\r\n            [selected]=\"(this.SmED_Modul==item)\" color=\"primary\">\r\n            {{item}}\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <h3>Outcome</h3>\r\n      <p>\r\n        <mat-chip-list>\r\n          <mat-chip (click)=\"this.updatequery('outcome',item);\" *ngFor=\"let item of this.outcomes\"\r\n            [selected]=\"(this.settings['outcome']==item)\" color=\"primary\">\r\n            {{item}}\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </p>\r\n    </div>\r\n    <div *ngIf=\"this.settings['outcome']\">\r\n      <h3>Differenzierungsmerkmale <span class=\"lightgreycolor\">(max. 2 Merkmale möglich)</span></h3>\r\n      <p>\r\n        <mat-chip-list multiple>\r\n          <mat-chip (click)=\"this.updatequery('diffmerkmale',item);\" *ngFor=\"let item of this.diffmerkmale\"\r\n            [selected]=\"(this.settings['diffmerkmale'].includes(item))\" color=\"primary\">\r\n            {{item}}\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </p>\r\n    </div>\r\n    <div *ngIf=\"this.progress\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n    <div *ngIf=\"this.tsqueryresult.length==0\">\r\n      <p>Keine Ergebnisse zur Anzeige</p>\r\n    </div>\r\n    <div *ngIf=\"this.settings['diffmerkmale'].length==0 && this.tsqueryresult.length>0\">\r\n\r\n\r\n      <div>\r\n        <app-box [value]=\"this.tsqueryresult[0]['count']\" [numberformat]=\"'1.0-0'\"\r\n          [maincolor]=\"this.colorsscheme[4].concat('80')\"\r\n          [description]=\"'Assessments in '.concat(this.settings['levelid'])\"></app-box>\r\n      </div>\r\n      <div *ngIf=\"this.tsqueryresult[0]['DAUERsmed']\">\r\n        <app-box [value]=\"this.tsqueryresult[0]['DAUERsmed']\" [numberformat]=\"'1.0-0'\"\r\n          [maincolor]=\"this.colorsscheme[2].concat('80')\" [description]=\"'Mittlere Dauer SmED'\"></app-box>\r\n      </div>\r\n      <div *ngIf=\"this.tsqueryresult[0]['DAUERdispo']\">\r\n        <app-box [value]=\"this.tsqueryresult[0]['DAUERdispo']\" [numberformat]=\"'1.0-0'\"\r\n          [maincolor]=\"this.colorsscheme[2].concat('80')\" [description]=\"'Mittlere Dauer Disposition'\"></app-box>\r\n      </div>\r\n      <div *ngIf=\"this.tsqueryresult[0]['Anzahl_Fragen']\">\r\n        <app-box [value]=\"this.tsqueryresult[0]['Anzahl_Fragen']\" [numberformat]=\"'1.0-0'\"\r\n          [maincolor]=\"this.colorsscheme[1].concat('80')\" [description]=\"'Mittlere Anzahl Fragen SmED'\"></app-box>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n    <div *ngIf=\"this.settings['diffmerkmale'].length==1 && this.tsqueryresult.length>0\" fxLayout=\"row wrap\">\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\r\n        <mat-card>\r\n          <h3>Anzahl Assessments</h3>\r\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\r\n            [outcomes]=\"['count']\" plottype=\"bar\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p>\r\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\r\n        <mat-card>\r\n          <h3>Anteil Assessments</h3>\r\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\r\n            [colorscheme]=\"['#d0f321']\" [outcomes]=\"['Anteil']\" [percent]=\"true\" plottype=\"bar\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p>\r\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"(this.tsqueryresult.length>0) && \r\n                    (this.tsquery['outcome']) || (this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\r\n                    || (this.settings['diffmerkmale'].includes('Beschwerde'))\r\n                    \">\r\n        <mat-card>\r\n          <h3>{{this.settings['outcome']}}</h3>\r\n          <ng-container *ngIf=\"!(this.settings['diffmerkmale'].includes('Hauptbeschwerde')) &&\r\n                        !(this.settings['diffmerkmale'].includes('Beschwerde'))\">\r\n            <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\r\n              [colorscheme]=\"['orange']\" [outcomes]=\"[this.tsquery['outcome']]\" plottype=\"bar\"></app-plot>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\r\n                        || (this.settings['diffmerkmale'].includes('Beschwerde'))\">\r\n            <app-table [(data)]=\"this.tsqueryresult\" [outcomes_rate]=\"['Anteil']\"\r\n              [columns]=\"this.restablecols\"></app-table>\r\n          </ng-container>\r\n\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p>\r\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n    <div *ngIf=\"this.settings['diffmerkmale'].length==2 && this.tsqueryresult.length>0\" fxLayout=\"row wrap\">\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\r\n        <mat-card>\r\n          <h3>Anzahl Assessments</h3>\r\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\r\n            [outcomes]=\"['count']\" [colorby]=\"this.settings['diffmerkmale'][1]\" plottype=\"bar\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p>\r\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\r\n        <mat-card>\r\n          <h3>Anteil Assessments</h3>\r\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\r\n            [colorscheme]=\"['#d0f321']\" [colorby]=\"this.settings['diffmerkmale'][1]\" [outcomes]=\"['Anteil']\"\r\n            [percent]=\"true\" plottype=\"bar\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p>\r\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"(this.tsqueryresult.length>0) && (this.tsquery['outcome']\r\n                    || ((this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\r\n                    || (this.settings['diffmerkmale'].includes('Beschwerde')))\r\n                    )\">\r\n        <mat-card>\r\n          <h3>{{this.settings['outcome']}}</h3>\r\n          <ng-container *ngIf=\"!(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\r\n                        && !(this.settings['diffmerkmale'].includes('Beschwerde'))\">\r\n            <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\"\r\n              [colorby]=\"this.settings['diffmerkmale'][1]\" [fontcolor]=\"'white'\" [colorscheme]=\"['orange']\"\r\n              [outcomes]=\"[this.tsquery['outcome']]\" plottype=\"bar\"></app-plot>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\r\n                            || (this.settings['diffmerkmale'].includes('Beschwerde'))\">\r\n            <app-table [(data)]=\"this.tsqueryresult\" [outcomes_rate]=\"['Anteil']\"\r\n              [columns]=\"this.restablecols\"></app-table>\r\n          </ng-container>\r\n\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p>\r\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core'; \r\nimport { Router } from '@angular/router'; \r\nimport { AuthService } from 'src/app/services/auth.service'; \r\nimport {ApiService} from '../../services/api.service' \r\n \r\n@Component({ \r\n  selector: 'app-profile', \r\n  templateUrl: './profile.component.html', \r\n  styleUrls: ['./profile.component.scss'] \r\n}) \r\nexport class ProfileComponent implements OnInit { \r\n \r\n  constructor( \r\n    private api : ApiService, \r\n    private _auth: AuthService, \r\n    private router:Router\r\n  ) { } \r\n \r\n  userdetails:any;\r\n  pwdchange:any;\r\n  action:string;\r\n  pwdrequest:any;\r\n  deleterequest:any;\r\n  deleteresult:string;\r\n\r\n  ngOnInit(): void { \r\n    this.pwdrequest={'oldpwd':'','newpwd':''}\r\n    this.deleterequest={'pwd':''}\r\n    this.pwdchange= {'progress':false,'ok':false};\r\n    this.userdetails = this._auth.getUserDetails();\r\n    \r\n  } \r\n\r\n  chpwd(){\r\n    this.pwdchange['progress'] = true;\r\n    this.api.changeuserpwd(this.userdetails.email,this.pwdrequest.newpwd,this.pwdrequest.oldpwd).subscribe(data=>{\r\n    this.pwdchange['ok'] = true;\r\n    this.pwdchange['progress'] = false;\r\n    this.pwdchange['done'] = true;\r\n    setTimeout(()=>{\r\n      this.pwdchange= {'progress':false,'ok':false};this.action=''},1500);\r\n      this.pwdrequest={'oldpwd':'','newpwd':''};    \r\n  },\r\n  error => {\r\n    this.pwdchange['done'] = true;\r\n    this.pwdchange['progress'] = false;})\r\n  }\r\n\r\n  deleteaccount(){\r\n    this.api.deleteuser(this.userdetails.email,this.deleterequest.pwd).subscribe(\r\n      data => {\r\n        //this.deleteresult=\"success\";\r\n        //localStorage.clear();\r\n        //setTimeout(()=>{this.router.navigate(['/'])},3000);        \r\n      },\r\n      error => {this.deleteresult=\"error\";}\r\n    )\r\n  }\r\n}\r\n","<div class=\"container\" fxLayout=\"row\" fxLayoutGap=\"1rem\"  fxLayoutAlign=\"space-around\"\r\n*ngIf=\"!(this.deleteresult=='success')\" >\r\n    <div class=\"small\">\r\n    <h1>Ihre Nutzerdaten</h1>    \r\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\r\n                <div fxFlex=20 fxFlex.lt-md=100>Name:</div>\r\n                <div fxFlex><strong>{{this.userdetails.anrede+' '+this.userdetails.firstname+' '+this.userdetails.lastname}}</strong></div>\r\n            </div>\r\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\r\n                <div fxFlex=20 fxFlex.lt-md=100>E-Mail:</div>\r\n                <div fxFlex><strong>{{this.userdetails.email}}</strong></div>\r\n            </div>\r\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\r\n                <div fxFlex=20 fxFlex.lt-md=100>Rolle:</div>\r\n                <div fxFlex><strong>{{this.userdetails.roles}}</strong></div>\r\n            </div>\r\n            <div *ngIf=\"this.userdetails.dashboards.length>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\" >\r\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboards:</div>\r\n                <div fxFlex><strong>{{this.userdetails.dashboards}}</strong></div>\r\n            </div>\r\n            <div *ngIf=\"this.userdetails.dashboard_admin.length>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\r\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboard Admin:</div>\r\n                <div fxFlex><strong>{{this.userdetails.dashboard_admin}}</strong></div>\r\n            </div>\r\n            <div *ngIf=\"this.userdetails.wrong_logins>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\r\n                <div fxFlex=20 fxFlex.lt-md=100>Fehlerhafte Loginversuche seit der letzten Anmeldung:</div>\r\n                <div fxFlex><strong>{{this.userdetails.wrong_logins}}</strong></div>\r\n            </div>\r\n            <div class=\"add-margin\" style=\"max-width:400px;\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-around\" fxLayoutGap=\"1rem\">\r\n                <div class=\"add-margin\"><button mat-raised-button (click)=\"this.action='chpwd'\" color=\"primary\">Passwort ändern</button></div>\r\n                <div class=\"add-margin\"><button mat-raised-button (click)=\"this.action='deleteaccount'\" color=\"accent\">Account löschen</button></div>\r\n            </div>\r\n            <div fxLayout=\"column\" *ngIf=\"this.action=='chpwd'\" style=\"max-width: 450px;\">\r\n                <div ><h1>Passwort ändern</h1></div>\r\n                <div *ngIf=\"!this.pwdchange.ok\">\r\n                    \r\n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\r\n                          <mat-label>Aktuelles Passwort</mat-label>\r\n                          <input  type=\"password\"  [disabled]=\"this.pwdchange.progress\"  matInput value=\"\" [(ngModel)]=\"this.pwdrequest.oldpwd\">                          \r\n                        </mat-form-field>\r\n                      \r\n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\r\n                          <mat-label>Neues Passwort</mat-label>\r\n                          <input type=\"password\" [disabled]=\"this.pwdchange.progress\" matInput value=\"\" [(ngModel)]=\"this.pwdrequest.newpwd\">\r\n                          <mat-hint>Mindestlänge 10 Zeichen</mat-hint>\r\n                        </mat-form-field>\r\n                </div>\r\n                <div>\r\n                    <mat-hint *ngIf=\"this.pwdchange.progress\">ändere das Passwort...</mat-hint>\r\n                    <p  *ngIf=\"(this.pwdchange.done && !this.pwdchange.ok)\"><mat-icon style=\"color:red\">error</mat-icon> Fehler: Bitte prüfen Sie das aktuelle Passwort!</p>\r\n                                            <p *ngIf=\"(this.pwdchange.done && this.pwdchange.ok)\"><mat-icon style=\"color:green\">check_circle</mat-icon>Änderung erfolgreich, Sie bleiben eingeloggt.</p>\r\n                </div>\r\n                <div *ngIf=\"!this.pwdchange.ok\" class=\"add-margin\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n                    <div><button  mat-raised-button (click)=\"this.action=''\" color=\"primary\">Abbrechen</button></div>\r\n                    <div><button mat-raised-button [disabled]=\"this.pwdrequest.newpwd.length<10\" (click)=\"this.chpwd()\" color=\"accent\">Ändern</button></div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"this.action=='deleteaccount'\"  style=\"max-width: 450px;\">\r\n                <h1>Account löschen</h1>\r\n                <div>\r\n                    <p>Warnung: Diese Aktion kann nicht rückgängig gemacht werden</p>\r\n                    <p>Bitte geben Sie Ihr aktuelles Passwort zur Sicherheit ein:</p>\r\n                    <mat-form-field  class=\"full-width\" appearance=\"fill\">\r\n                        <mat-label>Aktuelles Passwort</mat-label>\r\n                        <input  type=\"password\"  matInput value=\"\" [(ngModel)]=\"this.deleterequest.pwd\">                          \r\n                      </mat-form-field>\r\n                </div>\r\n                <div class=\"add-margin\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n                    <div><button mat-raised-button (click)=\"this.action=''\" color=\"primary\">Abbrechen</button></div>\r\n                    <div><button mat-raised-button (click)=\"this.deleteaccount()\" [disabled]=\"this.deleterequest.pwd.length<10\" color=\"primary\">Jetzt löschen</button></div>\r\n                </div>\r\n                <div *ngIf=\"this.deleteresult=='error'\">\r\n                    <p style=\"color:crimson\">Es ist ein Fehler aufgetreten, bitte prüfen Sie Ihr Passwort.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        \r\n    \r\n</div>\r\n<div class=\"container\" *ngIf=\"this.deleteresult=='success'\">\r\n    <h1>Ihr Account wurde gelöscht</h1>\r\n</div>","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAllign=\"space-around\">\r\n  <div>\r\n    <p *ngIf=\"this.currentuser\" class=\"mat-caption lightgreycolor right\">\r\n      Angemeldet als <span> {{this.currentuser.anrede?this.currentuser.anrede+\"\r\n        \"+this.currentuser.lastname:\"\" }}</span></p>\r\n    <div *ngIf=\"!isExtern\" class=\"brandingpicture\"\r\n      [ngClass]=\"{'smallheader': this.currentuser || this.summaryinfo['done']}\">\r\n      <h1>Akut- und Notfälle bei der 116117</h1>\r\n    </div>\r\n    <div *ngIf=\"isExtern\" class=\"brandingpicture\"\r\n      [ngClass]=\"{'smallheader': this.currentuser || this.summaryinfo['done']}\">\r\n      <h1>Ersteinschätzung von Akut- und Notfällen mit SmED</h1>\r\n    </div>\r\n    <ng-container *ngIf=\"this.metadata && !this.currentuser\">\r\n      <!-- Text anpassen -->\r\n      <ng-container *ngIf=\"(this.timetogo<0)\">\r\n        <p>Auf diesem Portal stellt das Zentralinstitut für die kassenärztliche Versorgung in Deutschland (<strong><a\r\n              style=\"color:white;\" href=\"https://www.zi.de\">Zi</a></strong>) Informationen\r\n          zu\r\n          ambulanten Akut- und Notfällen in Deutschland zur Verfügung. Aktuell basieren die Auswertungen auf den\r\n          SmED-Daten,\r\n          die von den 116117-Leitstellen der Kassenärztlichen Vereinigungen übermittelt wurden. Bei\r\n          <strong>SmED</strong> (Strukturierte\r\n          medizinische Ersteinschätzung in Deutschland) handelt es sich um eine Ersteinschätzungssoftware, die den\r\n          Anwender\r\n          bei der Einschätzung der Beschwerden eines Patienten unterstützen kann. Durch <strong>SmED</strong> wird das\r\n          medizinische\r\n          Fachpersonal bei der systematischen Abfrage von Symptomen in Kombination mit allgemeinen und\r\n          symptomspezifischen\r\n          Risikofaktoren (z.B. Alter, Geschlecht, Begleitbeschwerden) sowie bei der Entscheidung, welches die passende\r\n          Versorgungsmöglichkeit für den Anrufenden ist, unterstützt. Die SmED-Empfehlungen der Software stellen dabei\r\n          eine\r\n          Entscheidungshilfe für den Anwender dar. Weitere Informationen zu <strong>SmED</strong> finden Sie\r\n          <strong><a href=\"https://www.zi.de/smed\">hier</a></strong>.\r\n        </p>\r\n        <p>Zukünftig soll das Portal um Informationen aus weiteren Quellen (wie beispielsweise die Abrechnungsdaten) für\r\n          ambulante Akut- und Notfälle ergänzt werden.</p>\r\n        <h1 class=\"lightgreycolor\" *ngIf=\"this.timetogo<=0\">Zeit bis zum Start<br>{{counterstring(this.timetogo)}}</h1>\r\n      </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"(this.timetogo>=0) || this.currentuser\">\r\n      <ng-container *ngIf=\"((this.timetogo>=0) || this.currentuser) && !this.isExtern\">\r\n        <p class=\"lightgreycolor\"> Dashboard des Zentralinstituts für die kassenärztliche Versorgung in Deutschland\r\n          (<strong><a style=\"color:white;\" href=\"https://www.zi.de\">Zi</a></strong>) mit aktuellen Ergebnissen aus der\r\n          Strukturierten medizinischen Ersteinschätzung in Deutschland\r\n          (<strong><a style=\"color:white;\" href=\"https://www.zi.de/smed\">SmED</a></strong>) im Rahmen von Anrufen bei\r\n          der\r\n          Rufnummer (<strong><a style=\"color:white;\" href=\"https://www.116117.de\">116117</a></strong>). Bei jeder\r\n          Ersteinschätzung werden die Inhalte und Empfehlungen strukturiert protokolliert (Assessments). <span\r\n            *ngIf=\"this.summaryinfo && this.levelsettings['resolution']=='weekly'\">Daten für vollständige\r\n            Kalenderwochen beginnend mit der Woche vom {{this.summaryinfo[\"Beginn\"] | date}} bis zur Woche beginnend am\r\n            {{this.summaryinfo[\"Ende\"] | date}}.</span></p>\r\n        <p class=\"lightgreycolor\" *ngIf=\"this.currentuser\">Als registrierter Nutzer steht Ihnen unser <a\r\n            routerLink=\"/private\">interner Analysebereich</a> zur Verfügung.</p>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"((this.timetogo>=0) || this.currentuser) && this.isExtern\">\r\n        <p class=\"lightgreycolor\"> Dashboard mit aktuellen Ergebnissen aus der Strukturierten medizinischen\r\n          Ersteinschätzung in Deutschland (SmED) im Rahmen der Anwendung am eigenen Standort. </p>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <div *ngIf=\"(this.timetogo>=0) || this.currentuser\">\r\n    <div *ngIf=\"this.currentuser\">\r\n      <div *ngIf=\"this.isExtern; then rkiUser else kvUser\"></div>\r\n      <ng-template #kvUser>\r\n        <h3>Bundesland</h3>\r\n        <p>\r\n          <mat-chip-list>\r\n            <mat-chip (click)=\"this.setlevel('levelvalues',item);\" *ngFor=\"let item of this.levelvalues\"\r\n              [selected]=\"(this.levelsettings['levelvalues']==item)\" color=\"primary\">\r\n              {{item.replace('KV ','')}}\r\n            </mat-chip>\r\n          </mat-chip-list>\r\n        </p>\r\n      </ng-template>\r\n      <ng-template #rkiUser>\r\n        <h3>Einsatzort</h3>\r\n        <p>\r\n          <mat-chip-list>\r\n            <mat-chip (click)=\"this.setlevel('levelvalues',item); chipSelectedIndex = index;\"\r\n              *ngFor=\"let item of this.externLevelValues; let index = index\" [selected]=\"index === chipSelectedIndex\"\r\n              color=\"primary\">\r\n              {{item}}\r\n            </mat-chip>\r\n          </mat-chip-list>\r\n        </p>\r\n      </ng-template>\r\n    </div>\r\n    <h3>Analysezeitraum</h3>\r\n    <p>\r\n      <mat-chip-list>\r\n        <mat-chip (click)=\"this.setlevel('zeitraum',item);\" *ngFor=\"let item of this.zeitaumoptions\"\r\n          [selected]=\"(this.levelsettings['zeitraum']==item)\" color=\"primary\">\r\n          {{item}}\r\n        </mat-chip>\r\n      </mat-chip-list>\r\n    </p>\r\n    <div>\r\n      <h3>Zeitliche Auflösung</h3>\r\n      <p>\r\n        <mat-chip-list>\r\n          <mat-chip (click)=\"this.setlevel('resolution','weekly');\"\r\n            [selected]=\"(this.levelsettings['resolution']=='weekly')\" color=\"primary\">\r\n            Kalenderwochen\r\n          </mat-chip>\r\n          <mat-chip (click)=\"this.setlevel('resolution','monthly');\"\r\n            [selected]=\"(this.levelsettings['resolution']=='monthly')\" color=\"primary\">\r\n            Monate\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </p>\r\n    </div>\r\n    <div *ngIf=\"this.progress\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n    <div *ngIf=\"!this.summaryinfo && !this.progress\">\r\n      <p>\r\n        Keine Daten verfügbar\r\n      </p>\r\n    </div>\r\n    <div *ngIf=\"this.summaryinfo['done']\" fxLayout=\"row wrap\">\r\n      <mat-card *ngIf=\"this.summaryinfo['Assessments Gesamt']\" class=\"key-wrapper\">\r\n        <div class=\"card-wrapper\">\r\n          <app-box class=\"app-box\" [value]=\"this.summaryinfo['Assessments Gesamt']\" [textbehind]=\"true\" title=\"\"\r\n            [numberformat]=\"'1.0-0'\" [maincolor]=\"this.colorsscheme[4].concat('80')\"\r\n            [description]=\"'Gesamtanzahl der Assessments'\"></app-box>\r\n          <app-box class=\"app-box\" [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\" [maincolor]=\"this.colorsscheme[3].concat('80')\"\r\n            [value]=\"this.summaryinfo['Mittlere Dauer']\" description=\"Mittlere Dauer pro Assessment (in Sekunden)\"></app-box>\r\n          <app-box class=\"app-box\" [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\r\n            [maincolor]=\"this.colorsscheme[2].concat('80')\" [value]=\"this.summaryinfo['Anzahl Beschwerden']\"\r\n            description=\"Mittlere Anzahl Beschwerden pro Asssessment\">\r\n          </app-box>\r\n          <app-box class=\"app-box\" [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\r\n            [maincolor]=\"this.colorsscheme[1].concat('80')\" [value]=\"this.summaryinfo['Anzahl Fragen']\"\r\n            description=\"Mittlere Anzahl beantworteter Fragen pro Asssessment\">\r\n          </app-box>\r\n        </div>\r\n      </mat-card>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\r\n        <mat-card>\r\n          <div class=\"sliderHeader\">\r\n            <h3>SmED Assessments </h3>\r\n            <mat-slide-toggle *ngIf=\"!this.isExtern\" input [(ngModel)]=\"absoluteNumbers\">Absolute\r\n              Zahlen</mat-slide-toggle>\r\n          </div>\r\n          <br><span *ngIf=\"!absoluteNumbers\" class=\"lightgreycolor\">pro 100.000 Einwohner</span>\r\n          <span class=\"lightgreycolor\" *ngIf=\"absoluteNumbers\">Absolute Zahlen</span>\r\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\"\r\n            [outcomes]=\"!absoluteNumbers ? ['Assessments pro 100 Tsd. Einw.'] : ['totaleNumbers']\" [sortx]=\"true\"\r\n            [fontcolor]=\"'white'\" plottype=\"area\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <div class=\"mat-caption\">\r\n                <p *ngIf=\"this.currentuser\">\r\n                  <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\r\n                    <mat-icon inline=true>file_download</mat-icon>\r\n                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                  </a>\r\n                </p>\r\n                <h3> Weitere Informationen zum Indikator</h3>\r\n                <p></p>\r\n                <p *ngIf=\"!absoluteNumbers && !isExtern\">Anzahl der SmED-Assessments pro 100.000 Einwohner, die im\r\n                  Rahmen von Anrufen\r\n                  bei der 116117 {{ this.levelsettings['resolution'] === 'weekly' ? 'wöchentlich' : 'monatlich' }}\r\n                  durchgeführt wurden.</p>\r\n                <p *ngIf=\"absoluteNumbers && !isExtern\">\r\n                  Anzahl der SmED-Assessments (in Tausend), die im Rahmen von Anrufen\r\n                  bei der 116117 {{ this.levelsettings['resolution'] === 'weekly' ? 'wöchentlich' : 'monatlich' }}\r\n                  durchgeführt wurden.\r\n                </p>\r\n                <p *ngIf=\"this.isExtern\">\r\n                  Anzahl der SmED-Assessments pro {{ this.levelsettings['resolution'] === 'weekly' ? 'Kalenderwoche' :\r\n                  'Monat' }}.\r\n                </p>\r\n              </div>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts && (!this.isExtern)\">\r\n        <mat-card>\r\n          <h3>Aktivität respiratorischer Erkrankungen<br><span class=\"lightgreycolor\">Abweichung von der\r\n              Hintergrundaktivität in Prozent</span></h3>\r\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\"\r\n            [outcomes]=\"['Anteil ARE Assessments']\" [sortx]=\"true\" [fontcolor]=\"'white'\" [colorscheme]=\"['crimson']\"\r\n            plottype=\"area\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <div class=\"mat-caption\">\r\n                <p *ngIf=\"this.currentuser\">\r\n                  <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\r\n                    <mat-icon inline=true>file_download</mat-icon>\r\n                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                  </a>\r\n                </p>\r\n                <h3> Weitere Informationen zum Indikator</h3>\r\n                <p>Anzahl der Assessments mit typischen Symptomen von Akuten Respiratorischen Erkrankungen (ARE)\r\n                  ausgewiesen als prozentuale Abweichung von ARE Hintergrundaktivität (erwartet werden 25%\r\n                  ARE-Assessments).\r\n                  Berücksichtigt wurden folgende SmED-Beschwerdebilder: Atembeschwerden, Covid 19, Erkältung/Grippaler\r\n                  Infekt, Fieber, Hals-/Rachenschmerzen, Husten, Kopfschmerzen, Ohrenschmerzen und Schluckbeschwerden\r\n                  (Liste ist aktuell noch in Entwicklung, Änderungen sind möglich).</p>\r\n              </div>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div [fxFlex]=\"isExtern ? 50 : 100\" fxFlex.lt-md=100 *ngIf=\"this.symptoms_list\">\r\n        <mat-card *ngIf=\"this.symptoms_list.length>0\">\r\n          <h3>Häufigste Beschwerden</h3>\r\n          <br>\r\n          <span class=\"lightgreycolor\">Anteil Assessments mit angezeigter Beschwerde an allen Assessments in\r\n            Prozent</span>\r\n          <app-plot [(data)]=\"this.symptoms_list\" [xvalue]=\"'Sympt'\" [percent]=\"true\" [fontcolor]=\"'white'\"\r\n            (clicked)=\"handleklick('Beschwerden',$event);\" [outcomes]=\"['Anteil']\" [sort]=\"true\"\r\n            plottype=\"hbar\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('symptome.csv',this.symptoms_list_export)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Darstellung der prozentuellen Häufigkeit der im Rahmen der SmED-Assessments dokumentierten\r\n                    Beschwerden. Die Beschwerden sind sortiert nach der Häufigkeit und werden anteilig an allen\r\n                    SmED-Assessments, in denen eine Angabe zur Beschwerde vorliegt, angezeigt. Insgesamt sind über 100\r\n                    verschiedene Beschwerden über SmED verzeichnet worden. Bisher nicht enthalten sind Beschwerden, die\r\n                    im Rahmen der Abfrage von lebensbedrohlichen Situationen (Vortriage) erfasst wurden.</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.utiltimes['z']\">\r\n        <ng-container *ngIf=\"this.utiltimes['z'].length>0\">\r\n          <mat-card>\r\n            <h3>Aufkommen nach Tag und Uhrzeit<br><span class=\"lightgreycolor\">Anteil Assessments zum angegebenen\r\n                Zeitintervall an allen Assessments in Prozent</span>\r\n              <span class=\"lightgreycolor mat-caption\">(grün:hoch, blau:niedrig)</span>\r\n            </h3>\r\n            <app-plot [(data)]=\"this.utiltimes\" [fontcolor]=\"'white'\" plottype=\"heatmap\">\r\n            </app-plot>\r\n            <div>\r\n              <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n                (closed)=\"panelOpenState = false\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n                </mat-expansion-panel-header>\r\n                <mat-panel-description>\r\n                  <div class=\"mat-caption\">\r\n                    <p *ngIf=\"this.currentuser\">\r\n                      <a (click)=\"this.exportascsv('zeiten.csv',this.utiltimes)\">\r\n                        <mat-icon inline=true>file_download</mat-icon>\r\n                        Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                      </a>\r\n                    </p>\r\n                    <h3> Weitere Informationen zum Indikator</h3>\r\n                    <p>Prozentuale Verteilung der SmED-Assessments nach Wochentag und Uhrzeit\r\n                      (Drei-Stunden-Intervalle).​\r\n                      Grüne Flächen zeigen ein hohes Aufkommen, blaue ein niedriges Aufkommen an durchgeführten\r\n                      Assessments.\r\n                    </p>\r\n                  </div>\r\n                </mat-panel-description>\r\n              </mat-expansion-panel>\r\n            </div>\r\n          </mat-card>\r\n        </ng-container>\r\n      </div>\r\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.timetotreat\">\r\n        <mat-card *ngIf=\"this.timetotreat.length>0\">\r\n          <h3>SmED Empfehlungen zur Dringlichkeit<br><span class=\"lightgreycolor\">Anteil Assessments mit angegebener\r\n              Dringlichkeit an allen Assessments in Prozent</span>\r\n          </h3>\r\n          <app-plot [(data)]=\"this.timetotreat\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"false\"\r\n            [outcomes]=\"['Anteil']\" [custommargins]=\"{ l: 50, r: 0, b: 0, t: 0 }\" plottype=\"hbar\">\r\n          </app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('empfehlung.csv',this.timetotreat)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Prozentuale Verteilung der SmED-Assessments nach der von SmED empfohlenen Versorgungsdringlichkeit.\r\n                    Die Versorgungsdringlichkeit gibt an, innerhalb welcher Zeitspanne der Anrufer medizinisch versorgt\r\n                    werden sollte.\r\n                  </p>\r\n                  <ol type=\"1\">\r\n                    <li>Notfall:</li>\r\n                    <p>Es besteht ein potentiell lebensbedrohlicher Zustand. Die ärztliche Behandlung muss unverzüglich\r\n                      erfolgen.</p>\r\n                    <li>Schnellstmögliche ärztliche Versorgung:</li>\r\n                    <p>Die ärztliche Behandlung soll schnellstmöglich erfolgen, muss jedoch nicht unmittelbar\r\n                      stattfinden.</p>\r\n                    <li>Ärztliche Behandlung innerhalb von 24 h:</li>\r\n                    <p>Die ärztliche Behandlung soll innerhalb von 24 Stunden erfolgen.</p>\r\n                    <li>Ärztliche Behandlung nicht innerhalb von 24 h erforderlich:</li>\r\n                    <p>Die ärztliche Behandlung eilt nicht. Falls die Beschwerden in den nächsten 2 Tagen nicht\r\n                      abklingen, ist eine ärztliche Behandlung in jedem Fall angezeigt.</p>\r\n                  </ol>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\r\n        <mat-card>\r\n          <h3>Mittlere Dauer <br><span class=\"lightgreycolor\">Dauer in Sekunden pro Assessment</span></h3>\r\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\r\n            [colorscheme]=\"[this.colorsscheme[3]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Dauer (Sek.)']\"\r\n            plottype=\"tsline\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Angaben zur Dauer liegen erst seit Mai 2020 vor. In die Berechnung der Dauer fließen nur\r\n                    Assessments ein, die mit dem klassischen SmED-Modul (nicht COVID-spezifische Module) erfasst wurden.\r\n                    Weiterhin wurden Assessments mit einer Dauer von über 1000 Sekunden ausgeschlossen, da bei diesen\r\n                    Assessments davon auszugehen ist, dass diese nicht ordnungsgemäß abgeschlossen wurden.</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\r\n        <mat-card>\r\n          <h3>Mittlere Anzahl Beschwerden<br><span class=\"lightgreycolor\">Mittlere Anzahl unterschiedlicher Beschwerden\r\n              pro Assessment</span></h3>\r\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\r\n            [colorscheme]=\"[this.colorsscheme[2]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Anzahl Beschwerden']\"\r\n            plottype=\"tsline\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Die Anzahl der Beschwerden umfasst die im Rahmen eines SmED-Assessments dokumentierten vorliegenden\r\n                    Beschwerden der Anrufenden. Bisher nicht enthalten sind Beschwerden, die im Rahmen der Abfrage von\r\n                    lebensbedrohlichen Situationen (Vortriage) erfasst wurden.</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts && this.currentuser\">\r\n        <mat-card>\r\n          <h3>Mittlere Anzahl Fragen<br><span class=\"lightgreycolor\">Mittlere Anzahl beantworteter Fragen pro\r\n              Assessment</span>\r\n            <mat-icon class=\"backgroundicon\">lock_open</mat-icon>\r\n          </h3>\r\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\r\n            [colorscheme]=\"[this.colorsscheme[1]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Anzahl Fragen']\"\r\n            plottype=\"tsline\"></app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Die Anzahl der Fragen umfasst die im Rahmen eines SmED-Assessments dokumentierten beantworteten\r\n                    Fragen (inklusive Fragen zu Alter, Geschlecht, Schwangerschaft, lebensbedrohlicher Situation,\r\n                    Beschwerden, chronischen Erkrankungen, Begleitumständen usw.).</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.currentuser && this.decisions_pocvsttt\">\r\n        <mat-card *ngIf=\"this.decisions_pocvsttt.length>0\">\r\n          <h3>Empfehlung Behandlungsort nach Dringlichkeit <br><span class=\"lightgreycolor\">Anzahl Assessment<mat-icon\r\n                class=\"backgroundicon\">lock_open\r\n              </mat-icon></span>\r\n          </h3>\r\n          <div>\r\n            <app-plot [(data)]=\"this.decisions_pocvsttt\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\"\r\n              [showlegend]=\"false\" [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\"\r\n              plottype=\"stackedbar\" [colorby]=\"'POCsmed_text'\">\r\n            </app-plot>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('timetotreat.csv',this.timetotreat)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Prozentuale Verteilung der SmED-Assessments nach der von SmED empfohlenen Versorgungsebene\r\n                    (Behandlungsort) und Versorgungsdringlichkeit.</p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.timetotreat && this.currentuser\">\r\n        <mat-card *ngIf=\"this.timetotreat.length>0\">\r\n          <h3>SmED-Assessments nach QM-Kategorien<br><span class=\"lightgreycolor\">Anteil Assessments in der angegebenen\r\n              QM-Kategorie an allen Assessments in Prozent, basierend auf Daten seit 14.04.2023, ohne\r\n              COVID-Module</span>\r\n          </h3>\r\n          <app-plot [(data)]=\"this.qmCases\" [xvalue]=\"'text'\" [fontcolor]=\"'white'\" [showlegend]=\"false\"\r\n            [outcomes]=\"['data']\" [custommargins]=\"{ l: 50, r: 0, b: 0, t: 0 }\" plottype=\"hbar\">\r\n          </app-plot>\r\n          <div>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('empfehlung.csv',this.timetotreat)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Prozentuale Verteilung der SmED-Assessments nach QM-Kategorie.</p>\r\n                  <ol type=\"1\">\r\n                    <li>Vortriage:</li>\r\n                    <p>Im Rahmen der Abfrage einer lebensbedrohlichen Situation (Vortriage) wurde ein Notfall\r\n                      festgestellt.</p>\r\n                    <li>Nur Notfall ausgeschlossen:</li>\r\n                    <p>Im Rahmen der Vortriage wurde ein Notfall ausgeschlossen, es wurde aber nicht weiter ins\r\n                      Assessment eingestiegen.</p>\r\n                    <li>Assessment vollständig:</li>\r\n                    <p>SmED-Assessment durchgeführt, SmED-Empfehlung zur Dringlichkeit liegt vor, es wurden alle\r\n                      farbigen Fragen beantwortet.</p>\r\n                    <li>Assessment abgekürzt:</li>\r\n                    <p>SmED-Assessment durchgeführt, SmED-Empfehlung zur Dringlichkeit liegt vor, jedoch nicht alle\r\n                      farbigen Fragen beantwortet.</p>\r\n                    <li>SmED nicht anwendbar:</li>\r\n                    <p>Die Anwendung von SmED resultierte nicht in einer SmED-Empfehlung zur Dringlichkeit der\r\n                      Behandlung. Dies kann folgende Gründe haben: (a) Es wurden zu wenige Angaben gemacht, (b) es\r\n                      wurden zu viele unklare Antworten gegeben.</p>\r\n                  </ol>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"(this.currentuser && this.decisions_ttt) && (!this.isExtern)\">\r\n        <mat-card *ngIf=\"this.decisions_ttt.length>0\">\r\n          <h3>Abgleich Empfehlung vs. Entscheidung Dringlichkeit<br><span class=\"lightgreycolor\">Anzahl\r\n              Assessment<mat-icon class=\"backgroundicon\">lock_open\r\n              </mat-icon></span>\r\n          </h3>\r\n          <div>\r\n            <app-plot [(data)]=\"this.decisions_ttt\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"true\"\r\n              [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\" plottype=\"stackedbar\"\r\n              [colorby]=\"'TTTdispo_text'\">\r\n            </app-plot>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('decisions_ttt.csv',this.decisions_ttt)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Abgleich der SmED-Empfehlung mit der Entscheidung des/der Disponent*in hinsichtlich der\r\n                    Versorgungsdringlichkeit.\r\n                    Die Entscheidung des/der Disponent*in wird in SmED bisher nur bei einem kleinen Anteil der\r\n                    SmED-Assessments dokumentiert.\r\n                    Es wird an einer Übermittlung der entsprechenden Angaben aus der Dispositionssoftware gearbeitet.\r\n                    Dieser Prozess ist bisher\r\n                    mit einigen wenigen KVen etabliert. </p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"(this.decisions_poc && this.currentuser) && (!this.isExtern)\">\r\n        <mat-card *ngIf=\"this.decisions_poc.length>0\">\r\n          <h3>Abgleich Empfehlung vs. Entscheidung Behandlungsort <br><span class=\"lightgreycolor\">Anzahl\r\n              Assessment<mat-icon class=\"backgroundicon\">lock_open\r\n              </mat-icon></span>\r\n          </h3>\r\n          <div>\r\n            <app-plot [(data)]=\"this.decisions_poc\" [xvalue]=\"'POCsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"true\"\r\n              [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\" plottype=\"stackedbar\"\r\n              [colorby]=\"'POCdispo_text'\">\r\n            </app-plot>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\r\n              (closed)=\"panelOpenState = false\">\r\n              <mat-expansion-panel-header>\r\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\r\n              </mat-expansion-panel-header>\r\n              <mat-panel-description>\r\n                <div class=\"mat-caption\">\r\n                  <p *ngIf=\"this.currentuser\">\r\n                    <a (click)=\"this.exportascsv('decisions_poc.csv',this.decisions_poc)\">\r\n                      <mat-icon inline=true>file_download</mat-icon>\r\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\r\n                    </a>\r\n                  </p>\r\n                  <h3> Weitere Informationen zum Indikator</h3>\r\n                  <p>Abgleich der SmED-Empfehlung mit der Entscheidung des/der Disponent*in hinsichtlich der\r\n                    Versorgungsebene.\r\n                    Die Entscheidung des/der Disponent*in wird in SmED bisher nur bei einem kleinen Anteil der\r\n                    SmED-Assessments dokumentiert.\r\n                    Es wird an einer Übermittlung der entsprechenden Angaben aus der Dispositionssoftware gearbeitet.\r\n                    Dieser Prozess ist bisher\r\n                    mit einigen wenigen KVen etabliert. </p>\r\n                </div>\r\n              </mat-panel-description>\r\n            </mat-expansion-panel>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { SmedAggregationService } from 'src/app/services/smed-aggregation.service';\r\nimport { CsvexportService } from 'src/app/services/csvexport.service';\r\nimport { DBService } from 'src/app/services/dbservice.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.scss']\r\n})\r\nexport class StartComponent implements OnInit {\r\n  constructor(private db: DBService, private csv: CsvexportService,\r\n    private api: ApiService, private auth: AuthService, private smed: SmedAggregationService,\r\n    private router: Router) { }\r\n  metadata = [];\r\n  progress: boolean;\r\n  metadataok: boolean;\r\n  mapdata: any;\r\n  mapdatafor: string;\r\n  sortdata = [];\r\n  level: any;\r\n  levelvalues = [\r\n    'Gesamt',\r\n    'Baden-Württemberg',\r\n    'Bayern',\r\n    'Berlin',\r\n    'Brandenburg',\r\n    'Bremen',\r\n    'Hamburg',\r\n    'Hessen',\r\n    'Mecklenburg-Vorpommern',\r\n    'Niedersachsen',\r\n    'Nordrhein-Westfalen',\r\n    'Nordrhein',\r\n    'Westfalen-Lippe',\r\n    'Rheinland-Pfalz',\r\n    'Saarland',\r\n    'Sachsen',\r\n    'Sachsen-Anhalt',\r\n    'Schleswig-Holstein',\r\n    'Thüringen'\r\n  ];\r\n  externLevelValues = [\r\n  ]\r\n  subgroups: any;\r\n  outcomes: any;\r\n  determinants: any;\r\n  levelsettings = {};\r\n  data: any;\r\n  datakeys: any;\r\n  currentuser: any;\r\n  data_rate: any;\r\n  data_number: any;\r\n  geojson_available: any;\r\n  colorsscheme: any;\r\n  levelid: string;\r\n  datakeystable: any;\r\n  debug = false;\r\n  // SMED\r\n  stats_ts: any = [];\r\n  symptoms_list: any;\r\n  symptoms_list_export: any;\r\n  summaryinfo = {};\r\n  smedrange = {};\r\n  zeitaumoptions = [\"Letzte 12 Monate\", \"Letztes Jahr\", \"Gesamt\"];\r\n  allpublicfields = ['stats', 'mainsymptoms_ts', 'timetotreat', 'timestats', 'qmCases'];\r\n  ts_results = {};\r\n  utiltimes = {};\r\n  timetotreat: any;\r\n  qmCases: any;\r\n  decisions_ttt: any;\r\n  decisions_poc: any;\r\n  decisions_pocvsttt: any;\r\n  timetogo: number;\r\n  absoluteNumbers: boolean = false\r\n  isRKIUser: boolean = false\r\n  isRKIKVUser: boolean = false\r\n  isExtern: boolean = false\r\n  chipSelectedIndex: number = 0\r\n\r\n  ngOnInit(): void {\r\n    this.levelsettings = { \"level\": \"KV\", \"levelvalues\": \"Gesamt\", \"zeitraum\": \"Letzte 12 Monate\", 'resolution': 'monthly' };\r\n    this.summaryinfo[\"done\"] = false;\r\n    this.colorsscheme = this.api.makescale(5);\r\n    this.mapdatafor = \"\";\r\n    this.mapdata = [];\r\n    this.levelsettings = this.smed.updatestartstop(this.levelsettings);\r\n    this.auth.currentUser.subscribe(data => { this.currentuser = data; });\r\n\r\n    this.isRKIUser = this.auth.isRKIUser()\r\n    this.isRKIKVUser = this.auth.isRKIKVUser()\r\n    this.isExtern = this.auth.isExtern()\r\n    this.buildLevelValuesForCustomers()\r\n\r\n    if (this.isExtern) {\r\n      this.levelsettings['level'] = 'customer'\r\n      this.levelsettings['levelvalues'] = this.externLevelValues[0]\r\n\r\n      this.absoluteNumbers = true\r\n    }\r\n\r\n    this.updatemetadata();\r\n    window.scroll(0, 0);\r\n    this.setlevel(\"__init\", \"\");\r\n    // fix long loading\r\n    setTimeout(() => {\r\n      if (this.stats_ts.length == 0) {\r\n        this.setlevel(\"__init\", \"\");\r\n      };\r\n    }, 1500);\r\n\r\n    // counter\r\n    this.timetogo = this.check_portal_online();\r\n    if ((this.timetogo < 0) && !this.currentuser) {\r\n      setInterval(() => {\r\n        this.timetogo = this.check_portal_online();\r\n        if (this.timetogo >= 0) {\r\n          this.router.navigate(['/']);\r\n        }\r\n      }, 500);\r\n    };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.mapdata = [];\r\n  }\r\n\r\n  buildLevelValuesForCustomers() {\r\n    if (this.isExtern) {\r\n      for (const item of this.currentuser.usergroups.smed_reporting) {\r\n        if (item === 'kvuser') continue\r\n\r\n        this.externLevelValues.push(item)\r\n      }\r\n\r\n      if (this.isRKIKVUser) {\r\n        for (const item of this.levelvalues) {\r\n          this.externLevelValues.push(item)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async setlevel(level, value) {\r\n    if (!this.currentuser && (this.timetogo < 0)) {\r\n      return null;\r\n    }\r\n\r\n    this.levelsettings[\"resolution\"] = this.isExtern ? 'weekly' : this.levelsettings[\"resolution\"];\r\n\r\n    if (level !== \"__init\") {\r\n      this.levelsettings[level] = value;\r\n      this.levelsettings = this.smed.updatestartstop(this.levelsettings);\r\n    };\r\n\r\n    this.summaryinfo = [];\r\n    this.stats_ts = [];\r\n    this.utiltimes = {};\r\n    this.decisions_ttt = [];\r\n    this.decisions_poc = [];\r\n    this.decisions_pocvsttt = [];\r\n    this.timetotreat = NaN;\r\n    this.qmCases = NaN;\r\n\r\n    if (this.metadata.length == 0) {\r\n      this.updatemetadata();\r\n      return null;\r\n    }\r\n\r\n    if (this.levelsettings['start'] && this.levelsettings['stop']) {\r\n      this.progress = true;\r\n      await this.querydatasmed();\r\n      if (this.currentuser) {\r\n        await this.querydatasmed('decisions');\r\n      };\r\n    }\r\n  }\r\n\r\n  async updatemetadata() {\r\n    if (this.api.getmetadata(\"metadata\")) {\r\n      this.metadata = await this.api.getmetadata(\"metadata\");\r\n      // Performance optimization - use only if needed by app\r\n      // this.sortdata = this.api.getmetadata(\"sortdata\");\r\n      // this.geojson_available = this.api.getmetadata(\"geodata\");\r\n    }\r\n\r\n    if (this.metadata) {\r\n      if (this.metadata.length > 0) {\r\n        this.dometasettings();\r\n      }\r\n    } else {\r\n      this.metadata = [];\r\n      setTimeout(() => {\r\n        if ((this.metadata !== undefined) && (this.sortdata !== undefined)) {\r\n          if (this.metadata.length > 0) {\r\n            this.dometasettings();\r\n          }\r\n        }\r\n        else {\r\n          this.metadataok = false;\r\n          this.metadata = [];\r\n        }\r\n      }, 1500);\r\n    };\r\n  }\r\n\r\n  handleklick(plot, event) {\r\n  }\r\n\r\n  dometasettings() {\r\n    this.level = this.api.filterArray(this.metadata, \"type\", \"level\")[0][\"varname\"];\r\n    this.levelid = this.api.filterArray(this.metadata, \"type\", \"levelid\")[0]['varname'];\r\n    this.subgroups = [\"Keine\"].concat(this.api.getValues(this.api.filterArray(this.metadata, \"type\", \"group\"), \"varname\"));\r\n    this.metadataok = true;\r\n  }\r\n\r\n  async querydatasmed(thefield = \"\") {\r\n    let now: Date = new Date();\r\n    let oldstand: Date = new Date();\r\n    let dataage = 0; // 0 hours old     \r\n    let query = {\r\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\r\n      \"groupinfo\": {}\r\n    };\r\n    query[\"groupinfo\"][\"level\"] = (this.isExtern) && this.levelsettings['levelvalues'] !== 'Gesamt' ? \"customer\" : \"KV\"\r\n    query[\"groupinfo\"][\"levelid\"] = this.levelsettings[\"levelvalues\"];\r\n    query[\"groupinfo\"][\"timeframe\"] = this.levelsettings[\"resolution\"];\r\n    query[\"groupinfo\"][\"Jahr\"] = {\r\n      \"$gte\": parseInt(this.levelsettings[\"start\"].slice(0, 4)),\r\n      \"$lte\": parseInt(this.levelsettings[\"stop\"].slice(0, 4))\r\n    };\r\n\r\n    if (thefield != \"\") {\r\n      query[\"showfields\"] = [thefield, 'KM6Versicherte', 'BEVSTAND'];\r\n    }\r\n    else {\r\n      query[\"showfields\"] = this.allpublicfields.concat(['KM6Versicherte', 'BEVSTAND']);\r\n    };\r\n\r\n    let dbdaterange;\r\n\r\n    if (thefield != \"\") {\r\n      await this.db.querydatadates(\r\n        this.levelsettings['level'], this.levelsettings[\"levelvalues\"], thefield, this.levelsettings[\"resolution\"]).then(data => {\r\n          if (data.length > 0) { dbdaterange = Object.create(data[0]); }\r\n        }\r\n        );\r\n    }\r\n    else {\r\n      await this.db.querydatadates(\r\n        this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.allpublicfields[0], this.levelsettings[\"resolution\"]).then(data => {\r\n          if (data.length > 0) { dbdaterange = Object.create(data[0]); }\r\n        });\r\n    };\r\n\r\n    if (!dbdaterange) {\r\n      dbdaterange = { 'startdate': '2000-01-01', 'stopdate': '2000-01-01' };\r\n    }\r\n    else {\r\n      oldstand = new Date(dbdaterange['Stand']);\r\n      dataage = (now.getTime() - oldstand.getTime()) / (1000 * 60 * 60);\r\n    };\r\n    if ((dbdaterange['startdate'] <= this.levelsettings[\"start\"]) && (dbdaterange['stopdate'] >= this.levelsettings[\"stop\"]) &&\r\n      (dataage < 6)\r\n    ) {\r\n      if (thefield != \"\") {\r\n        this.makesmeditems(thefield);\r\n      }\r\n      else {\r\n        for (let fielditem of this.allpublicfields) {\r\n          this.makesmeditems(fielditem);\r\n        };\r\n      };\r\n    }\r\n    else {\r\n      await this.api.postTypeRequest('get_data/', query).subscribe(\r\n        data => {\r\n          let res = data[\"data\"];\r\n\r\n          if (thefield === \"\") {\r\n            for (const item of res) {\r\n              if (!item.mainsymptoms_ts) {\r\n                item.mainsymptoms_ts = []\r\n              }\r\n            }\r\n          }\r\n\r\n          if (thefield != \"\" && res.length > 0) {\r\n            this.db.deletewhere(thefield, this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.levelsettings[\"resolution\"],\r\n              this.levelsettings[\"start\"], this.levelsettings[\"stop\"],\r\n            ).then(() => {\r\n              this.updatedb(res, thefield)\r\n            });\r\n\r\n            this.db.storestand(thefield, this.levelsettings['level'],\r\n              this.levelsettings[\"levelvalues\"], now.toISOString(),\r\n              this.levelsettings[\"start\"], this.levelsettings[\"stop\"], this.levelsettings[\"resolution\"]);\r\n          };\r\n\r\n          if (thefield == \"\" && res.length > 0) {\r\n            for (let fielditem of this.allpublicfields) {\r\n              this.db.deletewhere(fielditem, this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.levelsettings[\"resolution\"],\r\n                this.levelsettings[\"start\"], this.levelsettings[\"stop\"], this.levelsettings['zeitraum']\r\n              ).then(() => {\r\n                this.updatedb(res, fielditem)\r\n              });\r\n\r\n              this.db.storestand(fielditem, this.levelsettings['level'],\r\n                this.levelsettings[\"levelvalues\"], now.toISOString(),\r\n                this.levelsettings[\"start\"], this.levelsettings[\"stop\"], this.levelsettings[\"resolution\"]);\r\n            };\r\n          };\r\n        },\r\n        error => { });\r\n    };\r\n  }\r\n\r\n  async updatedb(data, thefield) {\r\n    await this.smed.newcombine(data, thefield);\r\n    await this.makesmeditems(thefield);\r\n  }\r\n\r\n  exportascsv(name, data) {\r\n    this.csv.exportToCsv(name, data);\r\n    this.csv.exportToCsv(name + \"_settings.csv\", [this.levelsettings]);\r\n  }\r\n\r\n  async makesmeditems(thefield) {\r\n    this.levelsettings = this.smed.updatestartstop(this.levelsettings);\r\n    let startdate = this.levelsettings['startdate'];\r\n    let enddate = this.levelsettings['enddate'];\r\n\r\n    if (thefield == \"stats\") {\r\n      this.stats_ts = [];\r\n      this.summaryinfo = [];\r\n      let statswdate = await this.db.listdata('stats', this.levelsettings['level'],\r\n        this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true,\r\n        this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\r\n\r\n      if (statswdate.length > 0) {\r\n\r\n        for (let item of statswdate) {\r\n          item[\"Mittlere Dauer (Sek.)\"] = (item[\"DAUERsmed\"] / item[\"DAUERsmedFaelle\"]);\r\n\r\n          if (item[\"Dauer_sek\"] == 0) {\r\n            item[\"Mittlere Dauer (Sek.)\"] = null;\r\n          }\r\n\r\n          item[\"Mittlere Anzahl Beschwerden\"] = item[\"Anzahl_Beschwerden\"] / item[\"Assessments\"];\r\n          item[\"Mittlere Anzahl Fragen\"] = item[\"Anzahl_Fragen\"] / item[\"Assessments\"];\r\n\r\n          if (item[\"Anzahl_Beschwerden\"] == 0) {\r\n            item[\"Mittlere Anzahl Beschwerden\"] = null;\r\n          }\r\n\r\n          item[\"Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments\"] / (item[\"BEVSTAND\"] / 1e5);\r\n          // item[\"ARE Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE\"] / (item[\"BEVSTAND\"] / 1e5);\r\n          // item[\"ARE Assessments (v2) pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE_v2\"] / (item[\"BEVSTAND\"] / 1e5);\r\n          item[\"Anteil ARE Assessments\"] = (100 * ((item[\"Assessments_mit_ARE_v3\"] / item[\"Assessments\"]) / .25)) - 100;\r\n\r\n          item['totaleNumbers'] = item['Assessments']\r\n        };\r\n\r\n        this.stats_ts = statswdate;\r\n        let theid = this.stats_ts[0]['levelid'];\r\n\r\n        if (theid != \"Gesamt\") { this.summaryinfo[\"levelid\"] = \" in \".concat(theid); }\r\n        else { this.summaryinfo[\"levelid\"] = \" in Deutschland\"; };\r\n\r\n        this.summaryinfo[\"Assessments Gesamt\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Assessments\"));\r\n        this.summaryinfo[\"Assessments pro Woche\"] = this.summaryinfo[\"Assessments Gesamt\"] / this.api.getValues(this.stats_ts, \"Assessments\").length;\r\n        this.summaryinfo[\"Mittlere Dauer\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"DAUERsmed\")) / this.api.sumArray(this.api.getValues(this.stats_ts, \"DAUERsmedFaelle\"));\r\n        this.summaryinfo[\"Anzahl Beschwerden\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Anzahl_Beschwerden\")) / this.summaryinfo[\"Assessments Gesamt\"];\r\n        this.summaryinfo[\"Anzahl Fragen\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Anzahl_Fragen\")) / this.summaryinfo[\"Assessments Gesamt\"];\r\n        let sorteddates = this.api.getValues(this.stats_ts, \"Datum\").sort();\r\n        this.summaryinfo[\"Beginn\"] = new Date(sorteddates[0]);\r\n        this.summaryinfo[\"Ende\"] = new Date(sorteddates.pop());\r\n        this.summaryinfo[\"done\"] = true;\r\n        // only here signal for loading done:\r\n        this.progress = false;\r\n      }\r\n    };\r\n\r\n    if (thefield == \"mainsymptoms_ts\") {\r\n      let symptoms_list = [];\r\n\r\n      symptoms_list = await this.db.listdata('mainsymptoms_ts', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\r\n      symptoms_list = this.api.getValues(symptoms_list, 'data');\r\n\r\n      this.symptoms_list_export = this.api.sortArray(this.api.groupbysum(symptoms_list, 'Sympt', '', 'n'), 'n', \"descending\");\r\n\r\n      for (let item of this.symptoms_list_export) {\r\n        let anzahl_symptome = this.api.sumArray(this.api.getValues(this.symptoms_list_export, \"n\"));\r\n        item[\"Anteil\"] = Math.round(1000 * item['n'] / anzahl_symptome) / 10;\r\n      }\r\n\r\n      this.symptoms_list = this.symptoms_list_export.slice(0, 15);\r\n    };\r\n\r\n    if (thefield == \"timestats\") {\r\n      let utiltimes = [];\r\n      let dbutiltimes = await this.db.listdata('timestats', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], false, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\r\n      dbutiltimes = this.api.getValues(dbutiltimes, 'data');\r\n      utiltimes = this.api.groupbysum(dbutiltimes, \"wt\", \"h\", \"n\");\r\n      let ntotal = this.api.sumArray(this.api.getValues(utiltimes, 'n'));\r\n      dbutiltimes = [];\r\n\r\n      for (let item of utiltimes) {\r\n        item[\"Wochentag\"] = this.api.getweekdayname(item[\"wt\"]);\r\n        item['Anzahl'] = item['n'];\r\n        item['Anteil'] = 0.1 * Math.round(1000 * item['n'] / ntotal);\r\n        item['TimeLabel'] = item['h'] + \"-\" + (item['h'] + 2) + 'h';\r\n        delete item['n'];\r\n      }\r\n      this.utiltimes = this.api.makeheatmapdata(utiltimes, \"wt\", \"h\", 'Anteil', 'Wochentag', 'TimeLabel');\r\n    };\r\n\r\n    if (thefield == \"timetotreat\") {\r\n      let result = [];\r\n      let standardSort = [\r\n        {\r\n          TTTsmed_text: undefined,\r\n          Anzahl: 0,\r\n          Anteil: 0\r\n        },\r\n        {\r\n          TTTsmed_text: 'Notfall',\r\n          Anzahl: 0,\r\n          Anteil: 0\r\n        },\r\n        {\r\n          TTTsmed_text: 'schnellstmögliche ärztliche Behandlung',\r\n          Anzahl: 0,\r\n          Anteil: 0\r\n        },\r\n        {\r\n          TTTsmed_text: 'Ärztliche Behandlung innerhalb von 24h',\r\n          Anzahl: 0,\r\n          Anteil: 0\r\n        },\r\n        {\r\n          TTTsmed_text: 'Ärztliche Behandlung nicht innerhalb von 24h erforderlich',\r\n          Anzahl: 0,\r\n          Anteil: 0\r\n        },\r\n        {\r\n          TTTsmed_text: 'k.A./Befragung unklar',\r\n          Anzahl: 0,\r\n          Anteil: 0\r\n        }\r\n      ]\r\n\r\n      result = await this.db.listdata('timetotreat', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\r\n      result = this.api.groupbysum(result, 'TTTsmed_text', '', 'Anzahl');\r\n      const total = this.api.sumArray(this.api.getValues(result, 'Anzahl'));\r\n\r\n      for (let item of result) {\r\n        item['Anteil'] = Math.round(1000 * item['Anzahl'] / total) / 10;\r\n      }\r\n\r\n      if (!this.isRKIUser || !this.isRKIKVUser) {\r\n        if (result[0].TTTsmed_text !== undefined) {\r\n          result.push({ TTTsmed_text: undefined, Anzahl: 0, Anteil: 0 })\r\n        }\r\n      }\r\n\r\n      this.timetotreat = createStandardSort(result);\r\n\r\n      function createStandardSort(data) {\r\n        const result = []\r\n\r\n        for (const item of standardSort) {\r\n          for (const _item of data) {\r\n            if (item.TTTsmed_text === _item.TTTsmed_text) {\r\n              item.Anteil = _item.Anteil\r\n              item.Anzahl = _item.Anzahl\r\n            }\r\n          }\r\n          result.push(item)\r\n        }\r\n        return result.reverse()\r\n      }\r\n    }\r\n\r\n    if (thefield == \"decisions\") {\r\n      let decisions = [];\r\n      decisions = await this.db.listdata('decisions', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\r\n      let total = this.api.sumArray(this.api.getValues(decisions, 'Anzahl'));\r\n      this.decisions_ttt = this.api.replacemissing(this.api.groupbysum(decisions, 'TTTsmed_text', \"TTTdispo_text\", 'Anzahl'), 'TTTdispo_text', \"Keine Daten\");\r\n      this.decisions_poc = this.api.replacemissing(this.api.groupbysum(decisions, 'POCsmed_text', \"POCdispo_text\", 'Anzahl'), 'POCdispo_text', \"Keine Daten\");;\r\n      this.decisions_pocvsttt = this.api.groupbysum(decisions, 'TTTsmed_text', \"POCsmed_text\", 'Anzahl').reverse();\r\n    }\r\n\r\n    if (thefield === \"qmCases\") {\r\n      let standardSort = [\r\n        {\r\n          text: \"Vortriage\",\r\n          data: 0,\r\n        },\r\n        {\r\n          text: 'nur Notfall ausgeschlossen',\r\n          data: 0,\r\n        },\r\n        {\r\n          text: 'Assessment vollständig',\r\n          data: 0,\r\n        },\r\n        {\r\n          text: 'Assessement abgekürzt',\r\n          data: 0,\r\n        },\r\n        {\r\n          text: 'SmED nicht anwendbar',\r\n          data: 0,\r\n        },\r\n      ]\r\n\r\n      const data = await this.db.listdata('stats', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\r\n      let total = 0\r\n\r\n      if (data.length > 0) {\r\n        for (const item of data) {\r\n          if (item[\"QMFaelle\"]) {\r\n            total += item[\"QMFaelle\"]\r\n            for (const _item of standardSort) {\r\n              if (_item.text === \"Vortriage\") {\r\n                if (_item.data === 0) {\r\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Vortriage\")))\r\n                }\r\n              }\r\n              if (_item.text === \"nur Notfall ausgeschlossen\") {\r\n                if (_item.data === 0) {\r\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_nur_Notfall_ausgeschlossen\")))\r\n                }\r\n              }\r\n              if (_item.text === \"Assessment vollständig\") {\r\n                if (_item.data === 0) {\r\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Assessment_vollst\")))\r\n                }\r\n              }\r\n              if (_item.text === \"Assessement abgekürzt\") {\r\n                if (_item.data === 0) {\r\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Assessment_abgekuerzt\")))\r\n                }\r\n              }\r\n              if (_item.text === \"SmED nicht anwendbar\") {\r\n                if (_item.data === 0) {\r\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_SmED_nicht_anwendbar\")))\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (standardSort) {\r\n        for (const item of standardSort) {\r\n          item.data = inPercent(item.data, total)\r\n        }\r\n      }\r\n\r\n      this.qmCases = standardSort.reverse()\r\n\r\n      function inPercent(x, y) {\r\n        const result = Math.round(1000 * x / y) / 10\r\n\r\n        return result\r\n      }\r\n    }\r\n  }\r\n\r\n  // Pre Launch Counter\r\n  check_portal_online() {\r\n    let date1 = new Date(\"2022-03-14 08:00:00\".replace(/-/g, \"/\")); // DUE TO BAD SAFARI IMPLEMENTATION!\r\n    let date2 = new Date();\r\n    let timediff = date2.getTime() - date1.getTime();\r\n    return timediff;\r\n  }\r\n\r\n  counterstring(timediff) {\r\n    if (timediff >= 0) {\r\n      return \"\";\r\n    }\r\n\r\n    let Tage = Math.floor(-timediff / (1000 * 60 * 60 * 24));\r\n    let Stunden = Math.floor(-timediff / (1000 * 60 * 60));\r\n    Stunden = Math.floor((Stunden / 24 - Math.floor(Stunden / 24)) * 24);\r\n    let Minuten = Math.floor(-timediff / (1000 * 60));\r\n    Minuten = Math.floor((Minuten / 60 - Math.floor(Minuten / 60)) * 60);\r\n    let Sekunden = Math.floor(-timediff / (1000));\r\n    Sekunden = Math.floor((Sekunden / 60 - Math.floor(Sekunden / 60)) * 60);\r\n    return Tage + ' Tage ' + Stunden + \" Stunden \" + Minuten + \" Minuten \" + Sekunden + \" Sekunden\";\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { retry, timeout } from 'rxjs/operators';\r\nimport * as chroma from \"chroma-js\";\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  public itsatest = false;\r\n  public REST_API_SERVER = \"https://api.zidatasciencelab.de/\"; // \"https://barebonedashboardapi.azurewebsites.net/\"; \"https://dashboardapi.ziapp.de/\"; \"http://localhost:8000/\"; \r\n  public REST_API_SERVER_CLIENTID = \"smed_reporting\";\r\n  public primarycolor = '#3c9bfa' //\"#2196f3\"; // \"#e91e63\";\r\n  public accentcolor = '#2dcd73' //\"#e3714e1\";\r\n  public warncolor = '#f0194b' //\"#e1149b\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getTypeRequest(url) {\r\n    return this.httpClient.get(this.REST_API_SERVER + url).pipe(map(res => {\r\n      return res;\r\n    })).pipe(/*timeout(3500),*/retry(3));\r\n  }\r\n\r\n  public postTypeRequest(url, payload) {\r\n    return this.httpClient.post(this.REST_API_SERVER + url, payload).pipe(map(res => {\r\n      return res;\r\n    })).pipe(/*timeout(15000),*/retry(3));;\r\n  }\r\n\r\n  public getTypeRequestnotimeout(url) {\r\n    return this.httpClient.get(this.REST_API_SERVER + url).pipe(map(res => {\r\n      return res;\r\n    })).pipe(retry(3));\r\n  }\r\n\r\n  public postTypeRequestnotimeout(url, payload) {\r\n    return this.httpClient.post(this.REST_API_SERVER + url, payload).pipe(map(res => {\r\n      return res;\r\n    })).pipe(retry(3));;\r\n  }\r\n\r\n\r\n  // Specific Requests\r\n\r\n  public updateuser(user, setting, value, usergroups = \"\") {\r\n    let payload = { 'email': user, 'key': setting, 'value': value };\r\n    if (usergroups != \"\") {\r\n      payload['usergroups'] = usergroups;\r\n    }\r\n    return this.postTypeRequest('userstatus/', payload);\r\n  }\r\n\r\n  public deleteuser(user, password = \"\") {\r\n    let payload = { \"email\": user };\r\n    if (password != \"\") { payload[\"password\"] = password };\r\n    return this.postTypeRequest('deleteuser', payload);\r\n  }\r\n\r\n  public changeuserpwd(user, newpwd, oldpwd = \"\") {\r\n    let payload = { \"newpassword\": newpwd, email: user };\r\n    if (oldpwd != \"\") {\r\n      payload[\"oldpassword\"] = oldpwd;\r\n    }\r\n    return this.postTypeRequest('changepwd', payload);\r\n  }\r\n\r\n  countView(url) {\r\n    // Privacy preserving Webcounter, see Documentation here https://github.com/zidatalab/ziwebcounter\r\n    this.httpClient.get('https://analytics.api.ziapp.de/view/ambulante_notfaelle/data?pageid=' + url + '&cookiedissent=' + true, { withCredentials: false }).subscribe();\r\n  }\r\n\r\n  // Data APIs\r\n  public getValues(array, key) {\r\n    let values = [];\r\n    for (let item of array) {\r\n      values.push(item[key]);\r\n    }\r\n    return values;\r\n  }\r\n  public getKeys(array) {\r\n    return Object.keys(array[0]);\r\n  }\r\n\r\n  objectkeystocolumns(array, targetData) {\r\n    for (let item of array) {\r\n      let obj = item[targetData];\r\n\r\n      for (let key of Object.keys(obj)) {\r\n        item[key] = obj[key];\r\n      }\r\n\r\n      obj[targetData] = NaN;\r\n      delete obj[targetData];\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  public getOptions(array, key) {\r\n    return array.map(item => item[key])\r\n      .filter((value, index, self) => self.indexOf(value) === index)\r\n  }\r\n\r\n  public filterArray(array, key, value) {\r\n    let i = 0\r\n    let result = []\r\n    if (!Array.isArray(array)) {\r\n      return result;\r\n    }\r\n    for (let item of array) {\r\n      if (item[key] == value) { result.push(item) };\r\n      i = i + 1\r\n    }\r\n    return result\r\n  }\r\n\r\n  public filterNAArray(array, key) {\r\n    let i = 0\r\n    let result = []\r\n    for (let item of array) {\r\n      if (item[key] && (item[key] !== null) && (!isNaN(item[key]))) {\r\n        result.push(item)\r\n      };\r\n      i = i + 1\r\n    }\r\n    return result\r\n  }\r\n\r\n  public filterNA(array) {\r\n    let result = []\r\n    for (let item of array) {\r\n      if (!isNaN(item)) {\r\n        result.push(item)\r\n      };\r\n    }\r\n    return result\r\n  }\r\n\r\n  public filterArraybyList(array, key, list) {\r\n    let i = 0\r\n    let result = []\r\n    for (let item of array) {\r\n      if (list.indexOf(item[key]) >= 0) { result.push(item) };\r\n      i = i + 1\r\n    }\r\n    return result\r\n  }\r\n\r\n  public async getmetadata(name) {\r\n    return JSON.parse(localStorage.getItem(name));\r\n  }\r\n\r\n  public sortArray(array, key, order = \"ascending\") {\r\n    let result = array;\r\n    if (order == \"ascending\") {\r\n      return result.sort((a, b) => (a[key] < b[key] ? -1 : 1));\r\n    }\r\n    else {\r\n      return result.sort((a, b) => (a[key] > b[key] ? -1 : 1));\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  public sumArray(array) {\r\n    var total = 0;\r\n    for (var obj of array) {\r\n      if (parseFloat(obj)) { total += +obj; }\r\n    };\r\n\r\n    return total;\r\n  }\r\n\r\n  public getuniqueValues(array, key) {\r\n    let items = this.getValues(array, key);\r\n    return [...new Set(items)];\r\n  }\r\n\r\n\r\n  public groupbysum(array, key1, key2 = \"\", outcome) {\r\n    let result = [];\r\n    let valueskey1 = this.getuniqueValues(array, key1);\r\n    let valueskey2 = [];\r\n    if (key2 != \"\") {\r\n      valueskey2 = this.getuniqueValues(array, key2);\r\n    }\r\n\r\n    for (let value of valueskey1) {\r\n      let keyvalues = this.filterArray(array, key1, value);\r\n\r\n      if (key2 == \"\") {\r\n        let topush = {};\r\n        topush[key1] = value;\r\n        topush[outcome] = this.sumArray(this.getValues(keyvalues, outcome));\r\n        result.push(topush);\r\n      }\r\n      if (key2 !== \"\") {\r\n        for (let k2value of valueskey2) {\r\n          let topush = {};\r\n          topush[key1] = value;\r\n          topush[key2] = k2value;\r\n          topush[outcome] = this.sumArray(this.getValues(this.filterArray(keyvalues, key2, k2value), outcome));\r\n          result.push(topush);\r\n        }\r\n\r\n      };\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getweekdayname(dayofweek, mongo = false) {\r\n    let days = [\"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\", \"Sonntag\"];\r\n    if (mongo) {\r\n      days = [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"];\r\n    }\r\n    return days[dayofweek - 1];\r\n  }\r\n\r\n  public splitarraybykey(array, splitkey) {\r\n    let res = []\r\n    let splitvalues = this.getuniqueValues(array, splitkey);\r\n    for (let value of splitvalues) {\r\n      res.push(this.filterArray(array, splitkey, value));\r\n    }\r\n    return res = [];\r\n  }\r\n\r\n  public makescale(bins = 5) {\r\n    return chroma.scale([chroma(this.primarycolor).set('hsl.h', +70), this.primarycolor]).colors(bins);\r\n  };\r\n\r\n  public stringwrap(string, maxlength = 30) {\r\n    let newstring = \"\";\r\n    let wordsarray = string.split(\" \");\r\n    let fulllength = string.length\r\n    let linelength = 0\r\n    for (let word of wordsarray) {\r\n      let wordlen = word.length;\r\n      if ((linelength + wordlen) < maxlength) {\r\n        newstring = newstring + \" \" + word;\r\n        linelength = linelength + wordlen;\r\n      }\r\n      else {\r\n        newstring = newstring + \"<br>\" + word;\r\n        linelength = wordlen;\r\n      };\r\n    }\r\n    return newstring;\r\n  };\r\n\r\n  public makeheatmapdata(array, xname, yname, valuename, xlabel = \"\", ylabel = \"\") {\r\n    let res = {};\r\n    res['x'] = this.getuniqueValues(array, xname).sort(function (a, b) { return a - b });\r\n    res['y'] = this.getuniqueValues(array, yname).sort(function (a, b) { return a - b });\r\n    res['z'] = [];\r\n    for (let yitem of res['y']) {\r\n      let topush = [];\r\n      for (let xitem of res['x']) {\r\n        try {\r\n          topush.push(this.filterArray(this.filterArray(array, xname, xitem), yname, yitem)[0][valuename]);\r\n        }\r\n        catch {\r\n          topush.push(NaN);\r\n        };\r\n      }\r\n      res['z'].push(topush);\r\n    }\r\n    if (xlabel != \"\") {\r\n      let xlab = [];\r\n      for (let item of res['x']) {\r\n        try { xlab.push(this.filterArray(array, xname, item)[0][xlabel]) }\r\n        catch { xlab.push(\"\") };\r\n      }\r\n      res['x'] = xlab;\r\n    };\r\n    if (ylabel != \"\") {\r\n      let ylab = [];\r\n      for (let item of res['y']) {\r\n        try { ylab.push(this.filterArray(array, yname, item)[0][ylabel]) }\r\n        catch { ylab.push(\"\") };\r\n      }\r\n      res['y'] = ylab;\r\n    };\r\n\r\n    return res;\r\n  };\r\n\r\n  public replacemissing(array, key, replacement = \"Fehlend\") {\r\n    for (let item of array) {\r\n      if (!item[key]) {\r\n        item[key] = replacement;\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n\r\n  public arrayintersect(a, b) {\r\n    var setA = new Set(a);\r\n    var setB = new Set(b);\r\n    var intersection = new Set([...setA].filter(x => setB.has(x)));\r\n    return Array.from(intersection);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService {\r\nconstructor(\r\n    private _authService: AuthService,\r\n    private _router: Router\r\n  ) { }\r\n\r\n\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    let result = false;\r\n    let userdata = this._authService.getUserDetails()\r\n    let isExtern = this._authService.isExtern()\r\n    if (userdata && !isExtern) {\r\n      result = true;\r\n    }\r\n    else {\r\n      this._router.navigate(['/']);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  canActivateAdmin(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    let result = false;\r\n    let userdata = this._authService.getUserDetails()\r\n    if (userdata){\r\n    if (userdata[\"is_admin\"] || userdata[\"is_superadmin\"]) {\r\n      result = true;\r\n    }\r\n    }\r\n    else {\r\n      this._router.navigate(['/']);\r\n    }\r\n    return result;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Observer, fromEvent, merge } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  private currentUserSubject: BehaviorSubject<any>;\r\n  public currentUser: Observable<any>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private _api: ApiService,\r\n    private router: Router) {\r\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('userInfo')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): any {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  OnlineStatus() {\r\n    return merge<boolean>(\r\n      fromEvent(window, 'offline').pipe(map(() => false)),\r\n      fromEvent(window, 'online').pipe(map(() => true)),\r\n      new Observable((sub: Observer<boolean>) => {\r\n        sub.next(navigator.onLine);\r\n        sub.complete();\r\n      }));\r\n  }\r\n\r\n  login(formdata) {\r\n    let b = formdata;\r\n    const payload = new HttpParams()\r\n      .set('username', b.username)\r\n      .set('password', b.password)\r\n      .set('client_id', this._api.REST_API_SERVER_CLIENTID);\r\n    return this._api.postTypeRequestnotimeout('login/', payload).pipe(map(user => {\r\n      return this.logintasks(user);\r\n    }));\r\n  }\r\n\r\n  logintasks(user) {\r\n    this.setDataInLocalStorage('refresh_token', user.refresh_token);\r\n    this.setDataInLocalStorage('access_token', user.access_token);\r\n    this.storeUserDetails(user.user);\r\n    this.currentUserSubject.next(user.user);\r\n    return user;\r\n  }\r\n\r\n  adduser(data) {\r\n    return this._api.postTypeRequest('newuser', data);\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.http.post(this._api.REST_API_SERVER + 'login/refresh/', { refresh: true }).subscribe(\r\n      data => {\r\n        let result: any = data;\r\n        this.setDataInLocalStorage('access_token', result.access_token);\r\n\r\n      },\r\n      error => { }\r\n    )\r\n  }\r\n\r\n  storeUserDetails(data) {\r\n    return localStorage.setItem('userInfo', JSON.stringify(data));\r\n  }\r\n\r\n  public getUserDetails() {\r\n    return localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : false;\r\n  }\r\n\r\n  setDataInLocalStorage(variableName, data) {\r\n    localStorage.setItem(variableName, data);\r\n  }\r\n\r\n  public getToken() {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n\r\n  public getRefreshToken() {\r\n    return localStorage.getItem('refresh_token');\r\n  }\r\n\r\n  public logout() {\r\n    localStorage.clear();\r\n    this.currentUserSubject.next(null);\r\n  }\r\n\r\n  public updateUserData() {\r\n    return this._api.getTypeRequest('users/profile/')\r\n  }\r\n\r\n  public gettokeninfo() {\r\n    let token = this.getToken();\r\n    var base64Url = token.split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n    return JSON.parse(jsonPayload);\r\n  };\r\n\r\n  public getUserReportingGroup() {\r\n    if (this.currentUserValue) {\r\n\r\n      return this.currentUserValue.usergroups.smed_reporting\r\n    }\r\n\r\n    return []\r\n  }\r\n\r\n  public isRKIUser() {\r\n    if(this.currentUserValue) {\r\n      const userGroup = this.currentUserValue.usergroups.smed_reporting\r\n      \r\n      if(userGroup.includes('rki') && !(userGroup.includes('kvuser'))) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  public isRKIKVUser() {\r\n    if(this.currentUserValue) {\r\n      const userGroup = this.currentUserValue.usergroups.smed_reporting\r\n      \r\n      if(userGroup.includes('rki') && userGroup.includes('kvuser')) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  public isExtern() {\r\n    if(this.currentUserValue) {\r\n      const usergroup = this.currentUserValue.usergroups.smed_reporting\r\n\r\n      if(!usergroup.includes('kvuser')) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CsvexportService {\r\n\r\n  public exportToCsv(filename: string, rows: object[]) {\r\n    if (!rows ) {\r\n      return;\r\n    }\r\n    if (rows && !rows.length ) {\r\n      rows=[rows];\r\n    }\r\n    const separator = ',';\r\n    const keys = Object.keys(rows[0]);\r\n    const csvContent =\r\n      keys.join(separator) +\r\n      '\\n' +\r\n      rows.map(row => {\r\n        return keys.map(k => {\r\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\r\n          cell = cell instanceof Date\r\n            ? cell.toLocaleString()\r\n            : cell.toString().replace(/\"/g, '\"\"');\r\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n            cell = `\"${cell}\"`;\r\n          }\r\n          return cell;\r\n        }).join(separator);\r\n      }).join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      if (link.download !== undefined) {\r\n        // Browsers that support HTML5 download attribute\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', filename);\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      \r\n    }\r\n  }\r\n}","import Dexie, { Table } from 'dexie';\r\n\r\nexport class DataItem {\r\n  level: string;\r\n  levelid: string;\r\n  Jahr: number;\r\n  Monat: number;\r\n  KW: number;\r\n  Datum:string;\r\n  Indicator:string;\r\n  timeframe:string;\r\n  data:any;\r\n}\r\n\r\nexport class StandItem {\r\n  level: string;\r\n  levelid: string;\r\n  Stand:string;\r\n  Indicator:string;\r\n  startdate:string;\r\n  stopdate:string;\r\n  timeframe:string;\r\n}\r\n\r\nexport class AppDB extends Dexie {\r\n  public datadb: Table<DataItem, number>;\r\n  public standdb: Table<StandItem, number>;\r\n\r\n  constructor() { \r\n    super('smeddb');\r\n    var db = this;\r\n    db.on(\"versionchange\", function (event) {\r\n      db.close();        \r\n    });\r\n    db.version(11).stores({\r\n      datadb: 'id++,[level+levelid+Indicator+timeframe+Datum],[level+levelid+Indicator+timeframe],[level+levelid+Indicator+timeframe+Jahr]',\r\n      standdb: 'id++,[level+levelid+Indicator+timeframe]',\r\n    }); \r\n    db.datadb.mapToClass(DataItem); \r\n    db.standdb.mapToClass(StandItem); \r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n\r\nexport var db = new AppDB();","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { db, StandItem } from './db';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DBService {\r\n\r\n  constructor(private api: ApiService) { }\r\n\r\n  async storestand(Indicator, level, levelid, Stand, mindate, maxdate, resolution) {\r\n    await db.standdb\r\n      .where('[level+levelid+Indicator+timeframe]')\r\n      .equals([level, levelid, Indicator, resolution])\r\n      .delete();\r\n    db.standdb.put({\r\n      'level': level,\r\n      'levelid': levelid,\r\n      'Stand': Stand,\r\n      'Indicator': Indicator,\r\n      'startdate': mindate,\r\n      'stopdate': maxdate,\r\n      'timeframe': resolution\r\n    });\r\n  };\r\n\r\n  getstand(Indicator, level, levelid, resolution) {\r\n    return db.standdb\r\n      .where('[level+levelid+Indicator+timeframe]')\r\n      .equals([level, levelid, Indicator, resolution]).first();\r\n  }\r\n\r\n  listdata(Indicator, level, levelid, start = \"\", stop = \"\", expand = true, resolution, timeframe = '') {\r\n    let tosearch = {\r\n      Indicator: Indicator,\r\n      level: level,\r\n      levelid: levelid\r\n    }\r\n\r\n    // Can be implemented later to restrict results\r\n    if (start !== \"\" && stop !== \"\" && expand == true) {\r\n      if (timeframe === 'Letztes Jahr') {\r\n        const lastYear = Number(start.slice(0, 4))\r\n        return db.datadb.where('[level+levelid+Indicator+timeframe+Jahr]').equals([level, levelid, Indicator, resolution, lastYear]).toArray()\r\n          .then(data => {\r\n            return this.api.objectkeystocolumns(data, 'data')\r\n          });\r\n      }\r\n\r\n      return db.datadb\r\n        .where('[level+levelid+Indicator+timeframe+Datum]')\r\n        .between([level, levelid, Indicator, resolution, start], [level, levelid, Indicator, resolution, stop])\r\n        .toArray()\r\n        .then(data => this.api.objectkeystocolumns(data, 'data'));\r\n    }\r\n\r\n    if (expand == true) {\r\n      return db.datadb\r\n        .where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray().then(data => this.api.objectkeystocolumns(data, 'data'));\r\n    }\r\n\r\n    if (expand == false) {\r\n      return db.datadb\r\n        .where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray();\r\n    };\r\n  }\r\n\r\n  async querydatadates(level, levelid, Indicator, resolution = \"monthly\") {\r\n    let res = await db.standdb.where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray();\r\n\r\n    return res\r\n  }\r\n\r\n  deletewhere(Indicator, level, levelid, resolution = \"monthly\", start = \"\", stop = \"\", timeframe = \"\") {\r\n    let tosearch = {\r\n      Indicator: Indicator,\r\n      level: level,\r\n      levelid: levelid,\r\n      timeframe: resolution\r\n    }\r\n\r\n    // Can be implemented later to restrict results\r\n    if (start !== \"\" && stop !== \"\") {\r\n      const lastYear = Number(start.slice(0, 4))\r\n\r\n      if (timeframe === 'Letztes Jahr') {\r\n        return db.datadb\r\n          .where('[level+levelid+Indicator+timeframe+Jahr]').equals(\r\n            [level, levelid, Indicator, resolution, lastYear]).delete();\r\n      }\r\n\r\n      return db.datadb\r\n        .where('[level+levelid+Indicator+timeframe+Datum]').between(\r\n          [level, levelid, Indicator, resolution, start],\r\n          [level, levelid, Indicator, resolution, stop]).delete();\r\n    }\r\n    else {\r\n      return db.datadb\r\n        .where('[level+levelid+Indicator+timeframe]').equals(\r\n          [level, levelid, Indicator, resolution]).delete();\r\n    }\r\n  }\r\n\r\n  adddatabulk(array) {\r\n    return db.datadb.bulkPut(array);\r\n  };\r\n\r\n  async adddata({ level, levelid, Jahr, Monat, KW, Datum, Indicator, data, KM6Versicherte, BEVSTAND, resolution }) {\r\n    return await db.datadb\r\n      .put({\r\n        Indicator: Indicator,\r\n        level: level,\r\n        levelid: levelid,\r\n        Jahr: Jahr,\r\n        Monat: Monat,\r\n        KW: KW,\r\n        Datum: Datum,\r\n        data: data,\r\n        timeframe: resolution\r\n      });\r\n  };\r\n\r\n  clean() {\r\n    db.delete();\r\n    db.open();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { ApiService } from './api.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService {\r\n  private refreshTokenInProgress = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _auth: AuthService,\r\n    private _api: ApiService\r\n  ) {\r\n  }\r\n  apiurl = this._api.REST_API_SERVER;\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (request.url.includes(this.apiurl) && !request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${this._auth.getToken()}`\r\n        }\r\n\r\n      });\r\n    }\r\n    if (request.url.includes(this.apiurl) && request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${this._auth.getRefreshToken()}`\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n\r\n\r\n    return next.handle(request).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n\r\n        // Refresh if token has expired and Userdetails not null\r\n        if (request.url.includes(this.apiurl) && (this._auth.getUserDetails()[\"email\"].length>0) &&\r\n          error.status == 401) {\r\n          this._auth.refreshToken();\r\n        }\r\n\r\n        // Logout on Refresh error\r\n        if (request.url.includes(this.apiurl) &&  request.url.includes(\"login/refresh\") && error.status == 422) {\r\n          this.refreshTokenInProgress = false;\r\n          this._auth.logout();\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n        else {\r\n          this.refreshTokenInProgress = false;\r\n        };\r\n\r\n        return throwError(error);\r\n      }\r\n\r\n      ))\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'replace'})\r\nexport class ReplacePipe implements PipeTransform {\r\n  transform(value: string, strToReplace: string, replacementStr: string): string {\r\n\r\n    if(!value || ! strToReplace || ! replacementStr)\r\n    {\r\n      return value;\r\n    }\r\n\r\n return value.replace(new RegExp(strToReplace, 'g'), replacementStr);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { DBService } from 'src/app/services/dbservice.service';\r\nimport { DataItem } from 'src/app/services/db';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmedAggregationService {\r\n\r\n  constructor(private db: DBService, private api:ApiService) { }\r\n\r\n// Query Methods\r\n\r\n\r\n\r\nasync newcombine(array,fieldname){\r\n  //if (fieldname==\"stats\"){console.log(\"newcombine\",fieldname,array);};\r\n  let dbarray=[];\r\n  if (array.length==0){return []};\r\n  for (let item of array){\r\n    if (!item[fieldname]){return [];}\r\n    else {\r\n    for (let fielditem of item[fieldname]){\r\n      let topush = new DataItem;\r\n      topush['level']=item['level'];\r\n      topush['levelid']=item['levelid'];\r\n      topush['Jahr']=item['Jahr'];\r\n      topush['Monat']=item['Monat'];\r\n      topush['KM6Versicherte']=item['KM6Versicherte'];\r\n      topush['BEVSTAND']=item['BEVSTAND'];\r\n      topush['KW']=fielditem['KW'];\r\n      topush['Datum']=fielditem['Datum']\r\n      delete fielditem['KW'];\r\n      topush['data']=fielditem;\r\n      topush['Indicator']=fieldname;\r\n      topush['timeframe']=item['timeframe'];\r\n      dbarray.push(topush);\r\n    }\r\n  };\r\n  }\r\n  //if (fieldname==\"stats\"){console.log(\"newcombine res\",fieldname,dbarray);};\r\n  await this.db.adddatabulk(dbarray);\r\n}\r\n\r\nquerysmedts(groupvars=[],outcome=\"\",levelsettings,sort=false,topx:any=false,filtervar=\"\",filtervalues=[],topxvar=\"\"){\r\n  if (levelsettings[\"zeitraum\"]!==\"Gesamt\") {\r\n  let query = {\r\n    \"startdate\": levelsettings['start'].toISOString().slice(0,10),\r\n    \"stopdate\": levelsettings['end'].toISOString().slice(0,10),\r\n    \"subgroups\": groupvars    ,\r\n    \"filterlist\": []\r\n  }\r\n  query[\"filterlist\"].push({\"level\":levelsettings['level']});\r\n  if (levelsettings[\"levelvalues\"]!==\"Gesamt\"){\r\n    query[\"filterlist\"].push({\"levelid\":levelsettings[\"levelvalues\"]});\r\n  }\r\n  if (outcome!=\"\"){\r\n    query[\"outcome\"]=outcome;\r\n  }\r\n  let tofilter = false;\r\n  if (filtervar!==\"\" && filtervalues.length>0){tofilter=true};\r\n  return this.api.postTypeRequest('analytics/timeseries/', query).subscribe(\r\n    data => {\r\n      let res = data[\"result\"];\r\n      if (sort){\r\n        res = this.api.sortArray(res,\"count\",\"descending\");\r\n      }\r\n      if (topx && topxvar==''){\r\n        res = res.slice(0,topx);\r\n      }\r\n      if (tofilter){\r\n        res = this.api.filterArraybyList(res,filtervar,filtervalues);\r\n      }\r\n      if (topx && topxvar!==''){\r\n        let keycounts = {};\r\n        for (let item of res){\r\n          if (keycounts[item[topxvar]] && Math.round(item['count'])){\r\n            keycounts[item[topxvar]]=keycounts[item[topxvar]]+item['count'];\r\n          }\r\n          if (!keycounts[item[topxvar]] && Math.round(item['count'])) {\r\n            keycounts[item[topxvar]]=item['count'];\r\n          }\r\n        }\r\n        let keycountsarray= [];\r\n        for (let key of Object.keys(keycounts)){\r\n          keycountsarray.push({\"name\":key,\"count\":keycounts[key]})\r\n        }\r\n        let filterlist = this.api.getValues(this.api.sortArray(keycountsarray,'count',\"descending\").slice(0,topx),\"name\");\r\n        res= this.api.filterArraybyList(res,topxvar,filterlist);\r\n      }\r\n      return res;\r\n\r\n    },\r\n    error => {return [];});\r\n  }\r\n  else {\r\n    return [];\r\n  };\r\n}\r\n\r\n// Aggregation Functions\r\n\r\n\r\nadddate(Array,yearvar,isoweekvar){\r\n  for (const item of Array){\r\n    item[\"Datum\"]=this.getDateOfISOWeek(item[isoweekvar],item[yearvar]);\r\n  }\r\n  return Array;\r\n}\r\n\r\nadddatemonth(Array,yearvar,monthvar){\r\n  for (const item of Array){\r\n    item[\"Datum\"]=new Date(item[yearvar]+\"-\"+item[monthvar]+\"-01\");\r\n  }\r\n  return Array;\r\n}\r\n\r\ngetDateOfISOWeek(w, y) {\r\n  let millisperday = 1000*60*60*24;\r\n  let yearstart = new Date(y+\"-01-01\");\r\n  yearstart=new Date(yearstart.getTime()-(yearstart.getDay()-1)*millisperday)\r\n  let ISOweekStart = new Date(yearstart.getTime()+millisperday*7*(w+1));\r\n  return ISOweekStart;\r\n}\r\n\r\naggsymptoms(symptomsobject){\r\n  let inputarray = [];\r\n  let output = {};\r\n  let res = [];\r\n  for (let item of symptomsobject){\r\n    inputarray=inputarray.concat(item[\"Symptome\"])\r\n  }\r\n\r\n  for (let item of inputarray){\r\n    if (output[item.name]!==undefined){\r\n      output[item.name]=output[item.name]+item[\"n\"];\r\n    }\r\n    else {\r\n      output[item.name]=item[\"n\"];\r\n    }\r\n  }\r\n  output[\"Keine Angabe\"]=output[\"\"];\r\n  delete output[\"\"];\r\n  for (let thekey in Object.keys(output)){\r\n    res.push({\"name\":Object.keys(output)[thekey],\"n\":Object.values(output)[thekey]});\r\n  }\r\n\r\n  return this.api.sortArray(res,\"n\",\"descending\");\r\n\r\n\r\n}\r\n\r\nupdatestartstop(levelsettings){\r\n  // Appply date filters\r\n  let tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n  let today = new Date();\r\n  let startdate = \"2019-04-01\";\r\n  let enddate = today.getFullYear()+\"-12-31\";\r\n  if (levelsettings[\"zeitraum\"]==\"Letzte 12 Monate\"){\r\n    startdate = new Date(today.getFullYear()-1+today.toISOString().slice(4,8)+\"01\").toISOString().slice(0,10);\r\n    enddate = today.toISOString().slice(0,10)\r\n  };\r\n  if (levelsettings[\"zeitraum\"]==\"Aktuelles Jahr\"){\r\n    startdate = new Date(today.getFullYear()+\"-01-01\").toISOString().slice(0,10);\r\n    enddate = new Date(today.getFullYear()+\"-12-31\").toISOString().slice(0,10)\r\n    };\r\n    if (levelsettings[\"zeitraum\"]==\"Letztes Jahr\"){\r\n      startdate = new Date(today.getFullYear()-1+\"-01-01\").toISOString().slice(0,10);\r\n      enddate = new Date(today.getFullYear()-1+\"-12-31\").toISOString().slice(0,10);\r\n    };\r\n    let millisperday = 1000*60*60*24;\r\n    if (levelsettings[\"zeitraum\"]==\"Letzte 4 Wochen\"){\r\n      enddate = new Date(today.getTime() - today.getDay()*millisperday).toISOString().slice(0,10);\r\n      startdate = new Date(today.getTime()-((4*7)-1)*millisperday).toISOString().slice(0,10);\r\n    };\r\n    if (levelsettings[\"zeitraum\"]==\"Letzte Woche\"){\r\n      enddate = new Date(today.getTime() - today.getDay()*millisperday).toISOString().slice(0,10);\r\n      startdate = new Date(today.getTime()-((6))*millisperday).toISOString().slice(0,10);\r\n    };\r\n    if (levelsettings[\"zeitraum\"]==\"Detailliert\"){\r\n      let newstart= (new Date(levelsettings['start_picker'] - tzoffset)).toISOString().slice(0,10);\r\n      let newstop = (new Date(levelsettings['stop_picker'] - tzoffset)).toISOString().slice(0,10);\r\n      //console.log(\"Detailliert\",levelsettings['start_picker'],newstart,levelsettings['stop_picker'],newstop);\r\n      levelsettings[\"start\"]=newstart;\r\n      levelsettings[\"stop\"]=newstop;\r\n    }\r\n    if (levelsettings[\"zeitraum\"]!=\"Detailliert\"){\r\n      levelsettings[\"start\"]=startdate;\r\n      levelsettings[\"stop\"]=enddate;\r\n    }\r\n    else {\r\n\r\n\r\n    };\r\n    return levelsettings;\r\n}\r\n\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatSliderModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    MatBadgeModule,\r\n    MatStepperModule,\r\n    MatProgressBarModule,\r\n    MatExpansionModule\r\n\r\n\r\n  ],\r\n  exports: [\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    FormsModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    MatBadgeModule,\r\n    MatStepperModule,\r\n    MatProgressBarModule,\r\n    MatExpansionModule\r\n\r\n\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n\r\n"],"names":["BrowserModule","MaterialModule","AppRoutingModule","AppComponent","BrowserAnimationsModule","StartComponent","PlotlyJS","PlotlyModule","DeLocale","FlexLayoutModule","MapComponent","PlotComponent","TableComponent","BoxComponent","registerLocaleData","locales","LoginComponent","ProfileComponent","FormsModule","ReactiveFormsModule","HttpClientModule","HTTP_INTERCEPTORS","InterceptorService","PrivateComponent","AdminComponent","ReplacePipe","AddUserDialog","UpdateUserDialog","DeleteUserDialog","plotlyjs","AppModule","constructor","plotlyService","setupPlotly","plotly","getPlotly","register","setPlotConfig","locale","i0","bootstrap","provide","useClass","multi","imports","declarations","Renderer2","EventEmitter","L","icon","Marker","chroma","http","renderer","api","ngOnInit","debug","console","log","id","getValues","basemap","data","sortArray","Outcome","resetprops","clickedvalue","binmethod","ngAfterViewInit","initMap","containername","ngOnChanges","changes","selectmap","checkallok","ngOnDestroy","map","Math","round","random","toString","Zoom","center","getcenter","opacity","customlabels","res","length","features","preparedom","divid","document","getElementById","remove","mapcontainer","createElement","setProperty","addClass","appendChild","mymap","mapok","colors","colorscale","cutoffs","cutofflist","thedata","Object","assign","propname","feature","theid","theopacity","basestyle","weight","dashArray","firstload","removed","zoom","e","iconRetinaUrl","iconUrl","shadowUrl","iconDefault","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","prototype","options","theprovider","useprovider","tiles","tileLayer","providers","maxZoom","attribution","attributions","addTo","attributionControl","setPrefix","getContainer","className","geojsonFeature","percent","item","value","filterArray","properties","makecutoffs","bins","makescale","myStyle","thevalue","i","result","thecolor","colorcode","info","control","layers","onAdd","_div","DomUtil","create","update","props","innerHTML","toLocaleString","removeClass","featLayer","geoJSON","style","onEachFeature","layer","on","mouseover","highlightFeature","mouseout","resetFeature","click","zoomToFeature","resetStyle","labels","legend","position","legendtitle","stringwrap","_ldiv","selectarea","target","setStyle","fillOpacity","array","method","minv","min","maxv","max","steps","push","sortedarray","filterNA","sort","a","b","parseFloat","arraylength","groupsize","floor","thebin","Array","apply","Number","call","newclick","fitBounds","getBounds","clicked","emit","scale","primarycolor","set","coords","area","geometry","coordinates","subarea","reduce","pv","cv","donothing","selectors","inputs","nacolor","outputs","decls","vars","consts","template","Validators","UntypedFormGroup","UntypedFormControl","dialogRef","fb","name","buildForm","getUserGroups","addUser","userDataAdd","myRegform","postTypeRequest","subscribe","metaData","getmetadata","getLevelId","filter","varname","levelRights","levelrights","getCustomerLevels","keys","key","includes","cur","levelKeys","level","usergroupoptions","anrede","disabled","required","firstname","lastname","email","roles","dataLevel","password","minLength","patchValue","randomPassword","slice","onNoClick","close","ctx","MAT_DIALOG_DATA","ctx_r13","right_r11","ctx_r17","dataLevel_r15","selected","userGroupOptions","rights","role","userRights","is_admin","group","usergroups","smed_reporting","group_","updateUserRole","type","user","updateuser","updateUserDataLevel","add","validators","pattern","strongPasswordRegx","togglePasswordChange","isPasswordChange","changePassword","changeuserpwd","item_r23","ctx_r29","item_r27","_r20","_r18","item_r31","ctx_r34","ctx_r57","ctx_r65","ctx_r74","$event","ctx_r84","ctx_r93","ctx_r101","ctx_r109","ctx_r117","ctx_r126","ctx_r135","ctx_r144","ctx_r153","db","csv","auth","smed","router","levelsettings","summaryinfo","colorsscheme","mapdatafor","mapdata","updatestartstop","currentUser","currentuser","isRKIUser","isRKIKVUser","isExtern","buildLevelValuesForCustomers","externLevelValues","absoluteNumbers","updatemetadata","window","scroll","setlevel","setTimeout","stats_ts","timetogo","check_portal_online","setInterval","navigate","levelvalues","utiltimes","decisions_ttt","decisions_poc","decisions_pocvsttt","timetotreat","NaN","qmCases","metadata","progress","querydatasmed","dometasettings","undefined","sortdata","metadataok","handleklick","plot","event","levelid","subgroups","concat","thefield","now","Date","oldstand","dataage","query","REST_API_SERVER_CLIENTID","parseInt","allpublicfields","dbdaterange","querydatadates","then","getTime","makesmeditems","fielditem","mainsymptoms_ts","deletewhere","updatedb","storestand","toISOString","error","newcombine","exportascsv","exportToCsv","startdate","enddate","statswdate","listdata","sumArray","sorteddates","pop","symptoms_list","symptoms_list_export","groupbysum","anzahl_symptome","dbutiltimes","ntotal","getweekdayname","makeheatmapdata","standardSort","TTTsmed_text","Anzahl","Anteil","total","createStandardSort","_item","reverse","decisions","replacemissing","text","inPercent","x","y","date1","replace","date2","timediff","counterstring","Tage","Stunden","Minuten","Sekunden","HttpClient","retry","ApiService","httpClient","getTypeRequest","url","get","REST_API_SERVER","pipe","payload","post","getTypeRequestnotimeout","postTypeRequestnotimeout","setting","deleteuser","newpwd","oldpwd","countView","withCredentials","values","getKeys","objectkeystocolumns","targetData","obj","getOptions","index","self","indexOf","isArray","filterNAArray","isNaN","filterArraybyList","list","JSON","parse","localStorage","getItem","order","getuniqueValues","items","Set","key1","key2","outcome","valueskey1","valueskey2","keyvalues","topush","k2value","dayofweek","mongo","days","splitarraybykey","splitkey","splitvalues","string","maxlength","newstring","wordsarray","split","fulllength","linelength","word","wordlen","xname","yname","valuename","xlabel","ylabel","yitem","xitem","xlab","ylab","replacement","arrayintersect","setA","setB","intersection","has","from","factory","providedIn","DBService","Indicator","Stand","mindate","maxdate","resolution","standdb","where","equals","delete","put","getstand","first","start","stop","expand","timeframe","tosearch","lastYear","datadb","toArray","between","adddatabulk","bulkPut","adddata","Jahr","Monat","KW","Datum","KM6Versicherte","BEVSTAND","clean","open","DataItem","SmedAggregationService","fieldname","dbarray","querysmedts","groupvars","topx","filtervar","filtervalues","topxvar","tofilter","keycounts","keycountsarray","filterlist","adddate","yearvar","isoweekvar","getDateOfISOWeek","adddatemonth","monthvar","w","millisperday","yearstart","getDay","ISOweekStart","aggsymptoms","symptomsobject","inputarray","output","thekey","tzoffset","getTimezoneOffset","today","getFullYear","newstart","newstop"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}