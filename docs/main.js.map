{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/infobox/box/box.component.ts","./src/app/components/infobox/box/box.component.html","./src/app/components/leafletmap/map/map.component.ts","./src/app/components/leafletmap/map/map.component.html","./src/app/components/plotly/plot/plot.component.ts","./src/app/components/plotly/plot/plot.component.html","./src/app/components/table/table/table.component.ts","./src/app/components/table/table/table.component.html","./src/app/pages/admin/admin.component.ts","./src/app/pages/admin/admin.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/private/private.component.ts","./src/app/pages/private/private.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/start/start.component.ts","./src/app/pages/start/start.component.html","./src/app/services/api.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/csvexport.service.ts","./src/app/services/db.ts","./src/app/services/dbservice.service.ts","./src/app/services/interceptor-service.service.ts","./src/app/services/replace_pipe.ts","./src/app/services/smed-aggregation.service.ts","./src/environments/environment.ts","./src/main.ts","./src/material/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { StartComponent } from './pages/start/start.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport {PrivateComponent} from './pages/private/private.component'\nimport { AdminComponent } from './pages/admin/admin.component';\n\nconst routes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'profile', component: ProfileComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'private', component: PrivateComponent,\n    canActivate: [AuthGuardService]\n  }, \n  {\n    path: 'admin', component: AdminComponent,\n    canActivate: [AuthGuardService]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpParams } from '@angular/common/http';\nimport { Component , OnInit} from '@angular/core';\nimport { Router,RouterEvent } from '@angular/router';\nimport { ApiService } from './services/api.service';\nimport { AuthService } from './services/auth.service';\nimport { DBService } from './services/dbservice.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Test Dashboard';\n  public currentuser : any;\n  public currentroute:string;\n  loginoption = true;\n  public loginstatus:boolean;\n  public adminstatus:boolean;\n  currentdate:any;\n  \n\n  constructor(\n    private _auth : AuthService,\n    private _api : ApiService    ,\n    private router: Router,\n    private db : DBService\n  ) { \n\n    router.events.subscribe((event:RouterEvent) => {\n      if (event.url !== this.currentroute && event.url) {\n        this.currentroute = event.url;\n        this._api.countView(event.url);        \n      };\n    });  \n\n  }\n\n  ngOnInit() {\n    this.currentdate = new Date();\n    this._auth.currentUser.subscribe(data => {\n      if (data){\n        this.currentuser = data;\n        this.loginstatus = true;\n        this.adminstatus = this.currentuser[\"is_admin\"] || this.currentuser[\"is_superadmin\"];      \n        setTimeout(()=>{this.autorefreshdata();},1000);    \n        setInterval(()=>{this._auth.refreshToken();},1000*60*10);\n      }\n      else {\n        this.loginstatus = false;\n        this.adminstatus = false;\n        setTimeout(()=>{this.autorefreshdata();},0);\n      };         \n      }\n      );         \n  }\n\n   \n\n  public autorefreshdata(){    \n    this.updatemetadata().subscribe(\n      data => {\n        this.setmetadata(\"metadata\",data[\"data\"]);\n      });\n    // this.getsortdata().subscribe(data => {\n    //     this.setmetadata(\"sortdata\",data[\"datalevels\"]);  \n    //     if (data[\"geodata\"]){\n    //       this.setmetadata(\"geodata\",this._api.getValues(data[\"geodata\"],'_id'));        \n    //     }\n    //     else {\n    //       this.setmetadata(\"geodata\",[]); \n    //     }\n        \n    //   });\n  }\n\n  logout(){\n    this._auth.logout();\n    this.db.clean();\n    localStorage.clear();    \n    this.autorefreshdata();\n    this.loginstatus = false;\n    this.adminstatus = false;   \n    setTimeout(()=> {this.router.navigate(['/'])},1500)\n      };\n    \n    \n\n  \n\n  getsortdata(){\n    return this._api.getTypeRequest(\"get_sortlevels/\"+this._api.REST_API_SERVER_CLIENTID);        \n  }\n\n  updatemetadata(){\n    let client = this._api.REST_API_SERVER_CLIENTID\n    return this._api.getTypeRequest(\"get_metadata/\"+client);          \n  }\n  \n\n\n  setmetadata(name,data){\n   localStorage.setItem(name,JSON.stringify(data));\n  }\n\n  \n\n}\n","<mat-sidenav-container autosize=\"true\" scrollable=\"false\">\n  <mat-sidenav-content>\n    <mat-toolbar color=\"transparent\">\n      <button (click)=\"drawer.toggle()\" mat-icon-button class=\"example-icon\"\n        aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <!-- <span>{{this.title}}</span> -->\n      <span class=\"example-spacer\"></span>\n      <div fxShow=\"true\" fxHide.lt-sm=\"true\">  \n       <img src=\"./assets/branding/logo_project.png\"\n      class=\"brandinglogo\" >\n      <a href=\"https://www.zi.de\">\n        <img src=\"https://ziwebstorage.blob.core.windows.net/appradar/assets/logo_zi_small_transparent.png\"\n          class=\"brandinglogo\">       \n      </a>\n      </div>\n      <div fxShow=\"false\" fxShow.lt-sm=\"true\">  \n<!--          <img  src=\"./assets/branding/logo_project.png\"\n        class=\"brandinglogotiny\" >  -->\n        <a href=\"https://www.zi.de\">\n          <img src=\"https://ziwebstorage.blob.core.windows.net/appradar/assets/logo_zi_small_transparent.png\"\n            class=\"brandinglogotiny\">       \n        </a>\n        </div>\n    </mat-toolbar>\n    <main>\n      <section class=\"mat-typography\">\n        <mat-drawer-container autosize>\n          <mat-drawer #drawer mode=\"push\" position=\"start\" autoFocus=\"false\">\n            <div class=\"menucontainer\">\n\n              <ng-container>\n                <p class=\"primarycolor\"><strong>Navigation</strong></p>\n              </ng-container>\n\n\n\n              <div>\n\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/\">\n                  <mat-icon class=\"icon\">home</mat-icon>\n                  <span>Startseite</span>\n                </a>\n\n              </div>\n              <div *ngIf=\"this.loginoption && !this.loginstatus\" >\n\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/login\">\n                  <mat-icon class=\"icon\">login</mat-icon>\n                  <span>Anmelden</span>\n                </a>\n\n              </div>\n<!--               <div *ngIf=\"this.loginstatus\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/private\">\n                  <mat-icon class=\"icon\">lock_open</mat-icon>\n                  <span>Interne Tools</span>\n                </a>\n\n              </div> -->\n              <div *ngIf=\"this.loginstatus\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/profile\">\n                  <mat-icon class=\"icon\">account_box</mat-icon>\n                  <span>Benutzerprofil</span>\n                </a>\n\n              </div>\n              <div *ngIf=\"this.currentuser\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/private\">\n                  <mat-icon class=\"icon\">dashboard</mat-icon>\n                  <span>Erweiterte Analysen</span>\n                </a>\n\n              </div>\n              <div *ngIf=\"this.adminstatus\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/admin\">\n                  <mat-icon class=\"icon\">admin_panel_settings</mat-icon>\n                  <span>Administration</span>\n                </a>\n\n              </div>\n              \n              <div *ngIf=\"this.loginstatus\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();logout();\" href=\"./\">\n                  <mat-icon class=\"icon\">logout</mat-icon>\n                  <span>Ausloggen</span>\n                </a>\n\n              </div>\n\n\n            </div>\n          </mat-drawer>\n          <mat-drawer-content>\n            <!-- Offline message-->\n            <div class=\"offlinemsg\" *ngIf=\"false\"><strong>Keine Internetverbindung</strong><br>Dieses Portal benötigt\n              eine aktive Internetverbindung.</div>\n            <router-outlet></router-outlet>\n          </mat-drawer-content>\n        </mat-drawer-container>\n      </section>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n\n<!-- Footer nur für Desktop Screen -->\n<footer >\n  <div class=\"footerstyle\">\n    <div fxLayout=\"column\" fxLayoutGap=\"0.5rem\">\n\n      <div fxLayout=\"column wrap\" fxLayoutAlign=\"space-around start\">\n        <div fxflex=28 fxHide.xs>\n          <p>\n            <mat-list style=\"color:white;\">\n              <mat-list-item>\n                <p style=\"color:white;\"><strong>Navigation</strong></p>\n              </mat-list-item>\n              <mat-list-item><a style=\"color:white;\" href=\"https://www.zi.de/meta/impressum\">Impressum</a>\n              </mat-list-item>\n              <mat-list-item><a style=\"color:white;\"\n                  href=\"https://www.zi.de/footer/datenschutzhinweis\">Datenschutzhinweise</a></mat-list-item>\n            </mat-list>\n\n          </p>\n\n        </div>\n\n        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-between end\">\n          <div fxFlex>\n            <br>\n          </div>\n          <div style=\"padding:0.5rem;text-align: center;\">\n            <p>© {{this.currentdate | date:'Y'}} Zentralinstitut für die kassenärztliche Versorgung in der Bundesrepublik\n              Deutschland</p>\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule} from './../material/material.module'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartComponent } from './pages/start/start.component';\nimport * as PlotlyJS from 'plotly.js/dist/plotly.js';\nimport { PlotlyModule ,PlotlyService} from 'angular-plotly.js';\nimport * as SVLocale from 'plotly.js/lib/locales/de.js';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MapComponent } from './components/leafletmap/map/map.component';\nimport { PlotComponent } from './components/plotly/plot/plot.component';\nimport { TableComponent } from './components/table/table/table.component';\nimport { BoxComponent } from './components/infobox/box/box.component';\nimport { registerLocaleData } from '@angular/common';\nimport locales from '@angular/common/locales/de';\nimport { LOCALE_ID } from '@angular/core';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \nimport { InterceptorService } from './services/interceptor-service.service';\nimport { PrivateComponent } from './pages/private/private.component';\nimport { AdminComponent } from './pages/admin/admin.component' \nimport { ReplacePipe } from './services/replace_pipe';\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\nregisterLocaleData(locales, 'de');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    MapComponent,\n    PlotComponent,\n    TableComponent,\n    BoxComponent,\n    LoginComponent,\n    ProfileComponent,\n    PrivateComponent,\n    AdminComponent,\n    ReplacePipe\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    PlotlyModule,\n    FlexLayoutModule  ,\n    ReactiveFormsModule, \n    FormsModule, \n    HttpClientModule \n\n    \n  ],\n  providers: [{provide: LOCALE_ID, useValue: 'de-DE' },PlotlyService,\n\n  // This needs to be uncommented to provide  auth\n  { provide: HTTP_INTERCEPTORS, \n  useClass: InterceptorService, \n  multi: true } \n],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { \n  constructor(private plotlyService: PlotlyService) {\n    this.plotlyService.getPlotly();//.register(SVLocale);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SelectControlValueAccessor } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-box',\n  templateUrl: './box.component.html',\n  styleUrls: ['./box.component.scss']\n})\nexport class BoxComponent implements OnInit {\n  @Input() value: number;\n  @Input() title: string;\n  @Input() description: string;\n  @Input() colors: string[];\n  @Input() cutoffs: string[];\n  @Input() maincolor: string;\n  @Input() numberformat: string;\n  @Input() maticon: string;\n  @Input() textbehind: boolean;\n  itemcolor:string;\n\n  constructor(private api:ApiService) { }\n\n\n  ngOnInit() {\n    this.value = Number(this.value);\n    if (!this.numberformat) { this.numberformat = '1.1-1'; }\n    if (!this.maincolor) { this.maincolor = this.api.primarycolor; }\n    if (!this.cutoffs) { this.cutoffs = []; }\n    this.setcolor();\n  };\n\n  setcolor() {\n    let color = this.maincolor;\n    this.itemcolor = this.maincolor;\n    \n    if (this.cutoffs.length > 0 && this.cutoffs.length == this.colors.length) {\n      let i = 0;\n      for (let cutvalue of this.cutoffs) {\n        if (Number(cutvalue) <= this.value) {\n          color = this.colors[i];\n        }\n        i = i + 1;\n      }\n\n    }\n    this.itemcolor = color;\n\n  }\n\n\n}\n\n\n","<mat-card [style.background-color]=\"this.itemcolor\" style=\"min-height: 125px;\">\n    <div fxLayout=\"row\">\n    <div fxFlex>\n    <h1 *ngIf=\"!this.textbehind\">{{this.title}}{{this.value |  number: this.numberformat}}</h1>\n    <h1 *ngIf=\"this.textbehind\">{{this.value |  number: this.numberformat}} {{this.title}}</h1>\n    <p><span>{{this.description}}</span> </p>\n    </div>\n    <div fxFlex *ngIf=\"this.maticon\">\n        <span class=\"mat-headline\"><mat-icon inline=true >{{this.maticon}}</mat-icon></span>\n    </div>\n    </div>\n</mat-card>","import { Component, OnInit, Input, Output, Renderer2, EventEmitter } from '@angular/core';\nimport * as L from 'leaflet';\nimport { icon, Marker } from 'leaflet';\nimport { HttpClient } from '@angular/common/http';\nimport { FeatureCollection } from 'geojson';\nimport { ApiService } from 'src/app/services/api.service';\nimport * as chroma from \"chroma-js\";\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n\n})\nexport class MapComponent implements OnInit {\n  @Input() data = [];\n  @Input() nacolor = \"white\";\n  @Input() debug :boolean = false;\n  @Input() Outcome: String;\n  @Input() Zoom: number;\n  @Input() basemap: any; // geojson\n  @Input() center: any;\n  @Input() opacity: number;\n  @Input() feature: string; // name of outcome\n  @Input() colorscale: any;\n  @Input() cutofflist: any;\n  @Input() customlabels: any;\n  @Input() binmethod: string;\n  @Input() selectmap: boolean;\n  @Input() bins: number;\n  @Input() id: string; // feature id\n  @Input() percent: boolean;\n  @Input() containername: string;\n  @Output() clicked = new EventEmitter<string>();\n  mapok:boolean;\n  clickedvalue: string;\n  legend: any;\n  map: any;\n  useprovider = 0;\n  firstload = true;\n  providers = ['https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png']\n  attributions = ['Kartenmaterial &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    '©OpenStreetMap, ©CartoDB'];\n  constructor(private http: HttpClient, private renderer: Renderer2, private api: ApiService) { }\n  \n  \n  ngOnInit(): void {\n    // Debug\n    if (this.debug){\n      console.log(\"ID:\",this.id);\n      console.log(\"Map:\",this.api.getValues(this.basemap['features'],'properties'));  \n    }\n\n    // Sort data\n    this.data = this.api.sortArray(this.data,this.Outcome);\n    \n    // Init vars\n    this.resetprops();\n    this.clickedvalue = \"\";\n    if (!this.binmethod){\n      this.binmethod='equalint';\n    };\n  }\n  ngAfterViewInit(): void {\n    // Import Map data\n    this.initMap(this.containername);\n  }\n\n  \n\n  ngOnChanges(changes: any) {\n    // On any change replace the map-container\n    if (!this.selectmap) {\n      if ((changes.data || changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n    else {\n      if ((changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n\n\n  }\n\n  ngOnDestroy(){\n    this.map = null;\n    this.data = null;\n    }\n\n\n  resetprops() {\n    if (!this.containername) { this.containername = \"mapdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); };\n    if (!this.Zoom) { this.Zoom = 4; };\n    if (!this.center) { this.center = this.getcenter(); };//  DOES NOT WORK FOR TYPE MULTIPOLYGON!\n    if (!this.opacity) { this.opacity = .1; };\n    if (!this.customlabels) { this.customlabels = []; };\n    if (!this.binmethod) { this.binmethod = \"equalint\" };\n  }\n\n  checkallok() {\n    let res;\n    if (!this.selectmap) {\n      res = this.data && this.basemap;\n      if (res) {\n        res = this.data.length > 0 && this.basemap.features;\n      }\n\n    }\n    else {\n      res = this.basemap;\n      if (res) {\n        res = this.basemap.features;\n      }\n\n    }\n\n    return res;\n  }\n  preparedom(divid) {\n    if (document.getElementById(divid)) { document.getElementById(divid).remove();};\n    let mapcontainer = this.renderer.createElement(\"div\");\n    this.renderer.setProperty(mapcontainer, 'id', divid);\n    this.renderer.addClass(mapcontainer, \"mapdiv\");    \n    if (document.getElementById(\"map-frame\")!==null){\n      this.renderer.appendChild(document.getElementById(\"map-frame\"), mapcontainer);}\n    return true;\n  }\n\n  async initMap(divid) {\n    // Init\n    let mymap;\n    this.mapok = false;\n    let colors = this.colorscale;\n    let cutoffs = this.cutofflist;\n    let thedata;\n    if (this.data) {\n      thedata = Object.assign(this.data);\n    }\n    let propname = this.feature;\n    let theid = this.id;\n    let theopacity = this.opacity;\n    let basestyle = {\n      weight: 1,\n      dashArray: '',\n      \"color\": \"grey\",\n      \"fillOpacity\": theopacity,\n      \"Opacity\": theopacity\n    };\n\n    // If to many regions set weight to 0\n    if (thedata.length > 30 ){\n      basestyle.weight=0;\n    };\n\n    // Prepare dom\n    this.firstload= false;\n    let removed = false;\n    await this.preparedom(divid);\n    // Load Map\n\n    if (this.debug){\n      console.log('center: ',this.center );\n    }\n    try {\n    mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\n    }\n    catch(e){\n      document.getElementById(divid).remove();\n      await this.preparedom(divid);\n      mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\n    };\n    if (this.debug){\n      console.log('Map created');\n    }\n\n    // Fix Icons see https://stackoverflow.com/questions/41144319/leaflet-marker-not-found-production-env\n    const iconRetinaUrl = 'assets/marker-icon-2x.png';\n    const iconUrl = 'assets/marker-icon.png';\n    const shadowUrl = 'assets/marker-shadow.png';\n    const iconDefault = icon({\n      iconRetinaUrl,\n      iconUrl,\n      shadowUrl,\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      tooltipAnchor: [16, -28],\n      shadowSize: [41, 41]\n    });\n    Marker.prototype.options.icon = iconDefault;\n\n    // Load Tiles\n    let theprovider = this.useprovider;\n    const tiles = L.tileLayer(this.providers[theprovider],\n      {\n        maxZoom: 19, opacity: 1,\n        attribution: this.attributions[theprovider]\n      });\n    tiles.addTo(mymap);\n    mymap.attributionControl.setPrefix('<a href=\"https://www.zidatasciencelab.de\"><strong>Zi</strong> Data Science Lab</a>');\n    tiles.getContainer().className += ' custombgmap';\n\n    // Chloropleth Map\n    if (!this.selectmap) {\n\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      if (this.percent) {\n        for (let item of thedata) {\n          if (item[this.feature]){\n            item['___thevalue'] = Math.round(item[this.feature] * 10000) / 100;\n          }\n          else {\n            item['___thevalue']=null;\n          }\n        }\n      }\n      else {\n        for (let item of thedata) {         \n          if (item[this.feature]){\n            item['___thevalue'] = item[this.feature];\n          }\n          else {\n            item['___thevalue']=null;\n          }\n        }\n      }\n      for (let item of geojsonFeature.features) {\n        let value = this.api.filterArray(thedata, this.id, item.properties[this.id]);\n        if (value.length > 0) {\n          item['properties'][propname] = value[0]['___thevalue'];\n        }\n        else {\n          item['properties'][propname] = null;\n        }\n      }\n      if (this.debug){\n        console.log('Map Features',geojsonFeature.features);\n        console.log(\"Data:\",this.data);\n      }\n      \n\n\n      if (!cutoffs) {\n        cutoffs = this.makecutoffs(this.api.getValues(thedata, '___thevalue'), this.binmethod, this.bins);\n      };\n      if (colors.length < cutoffs.length) {\n        colors = this.makescale(cutoffs.length)\n      }\n\n      let myStyle = function (feature) {\n        let thevalue = feature.properties[propname];\n        let i = 0;\n        let result = basestyle;\n        let thecolor = colors[0];\n        for (let colorcode of colors) {\n          if (thevalue > cutoffs[i]) {\n            thecolor = colorcode;\n          };\n          i = i + 1;\n        }\n        if (thevalue != null) { result['color'] = thecolor; } \n        else {\n          result['color'] = 'grey';\n        };\n        return result\n      };\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\") + (props && props[propname] ? '<br><strong>Wert: </strong>' + props[propname].toLocaleString() : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n      // Add Features/Polygons to Map\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.zoomToFeature(mymap, e))\n            })\n          )\n        });\n      featLayer.resetStyle();\n      featLayer.addTo(mymap);\n\n      // Add Legend to Map\n      let labels\n      if (this.customlabels) { labels = this.customlabels; };\n\n      let legend;\n      legend = L.control.layers({}, {}, { position: 'topright' });\n      let legendtitle = this.api.stringwrap(propname);\n\n      legend.onAdd = function (map) {\n\n        this._ldiv = L.DomUtil.create('div', 'customlegend');\n        this._ldiv.innerHTML = '<p><strong>' + legendtitle + '</strong></p>';\n        if (this.percent == true) {\n          this._ldiv.innerHTML += '<p><em>Anteil in %</em></p>';\n        }\n        if (cutoffs) {\n          for (var i = 0; i < cutoffs.length; i++) {\n            if (labels.length == cutoffs.length) {\n              this._ldiv.innerHTML +=\n                '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                labels[i];\n            }\n            else {\n              if (cutoffs.length > 4) {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i> ' +\n                  cutoffs[i].toLocaleString() + (cutoffs[i + 1] ? ' bis unter ' + cutoffs[i + 1].toLocaleString() + '<br>' : '+');\n              }\n              else {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                  (cutoffs[i + 1] ? 'bis ' + cutoffs[i + 1].toLocaleString() + \"&nbsp;\" : cutoffs[i].toLocaleString() + '+');\n              }\n            }\n          }\n        }\n\n        return this._ldiv;\n      };\n\n      legend.addTo(mymap);\n    }\n    else {\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      colors = this.makescale(2);\n      let myStyle = function (feature) {\n        let res = basestyle;\n        let thecolor= \"grey\";\n        if (feature.properties['___clicked']) {\n          thecolor = colors[1];\n        }\n        res['color']=thecolor;\n        return res;\n      }\n\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.selectarea(mymap, e))\n            })\n          )\n        });\n      featLayer.addTo(mymap);\n\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n    }\n    this.mapok=true;\n\n  };\n\n  highlightFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity * 1.1\n    });\n    info.update(layer.feature.properties);\n  }\n\n  resetFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity,\n    });\n    info.update();\n  }\n\n  makecutoffs(array, method = \"equalint\", bins) { \n    let result = [];\n    let minv = Math.min(...array);\n    let maxv = Math.max(...array);\n\n    // equalint    \n    if (method=='equalint'){\n    let steps = Math.round((maxv - minv) / bins);\n    let i = 0;\n    while (i < bins) {\n      result.push((i + 1) * steps + minv);\n      i = i + 1;\n    };\n    if (this.debug){\n      console.log(\"CUTOFF RESULT\",result,\"\\ninputarray\",array);\n    }\n    };\n\n   // equal group size \n   if (method=='equalgroupsize'){    \n    let sortedarray = this.api.filterNA(array.sort((a,b)=>parseFloat(a)-parseFloat(b)));\n    let arraylength = sortedarray.length;\n    let groupsize= Math.floor(arraylength/bins);    \n    for (let thebin of Array.apply(null, {length: bins}).map(Number.call, Number)){\n      if (thebin==0){\n        result.push(sortedarray[0])\n      }\n      else {\n        result.push(sortedarray[groupsize*thebin]);\n      }\n    }\n    if (this.debug){\n      console.log(\"CUTOFF RESULT\",result.sort(),\"\\ninputarray\",sortedarray,\"Group Size\",groupsize);\n    }     \n    };\n   \n    return result;\n\n  };\n\n\n  newclick(e){\n    let res = [];\n    for (let item of this.basemap.features){\n      if (item.properties[this.id]==e){\n        item.properties['___clicked']=true;\n      }\n      else {\n        item.properties['___clicked']=false;\n      }\n      res.push(item);\n    }\n    this.basemap['features']=res;\n    this.initMap(this.containername);\n  }\n\n  zoomToFeature(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n  }\n\n  selectarea(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n    this.newclick(e.target.feature.properties[this.id]);\n  }\n\n  makescale(bins = 5) {\n    return chroma.scale([chroma(this.api.primarycolor).set('hsl.h', -120), this.api.primarycolor]).colors(bins);\n  }\n\n  getcenter() {\n    let features = this.basemap.features;\n    let coords = { 'a': [], 'b': [] };\n    for (let item of features) {\n      for (let area of item.geometry.coordinates) {\n        for (let subarea of area) {          \n          coords['a'].push(subarea[0])\n          coords['b'].push(subarea[1])\n          \n        }\n      }\n    }\n    if (this.debug){\n      console.log(\"CENTER FEATURES:\",this.basemap.features);\n      console.log(\"CENTER COORDS:\",coords);\n    }\n    let a = coords['a'].reduce((pv, cv) => pv + cv, 0) / coords['a'].length;\n    let b = coords['b'].reduce((pv, cv) => pv + cv, 0) / coords['b'].length;\n\n    return [b, a]\n  }\n\ndonothing(e){\n  return null;\n};\n}\n\n","<ng-container *ngIf=\"!(this.basemap)\">\n  <mat-spinner color=\"primary\"></mat-spinner>\n</ng-container>\n\n<ng-container *ngIf=\"(this.basemap)\">\n<div  class=\"map-container\">\n    <div id=\"map-frame\" class=\"map-frame\">\n      \n    </div>    \n    <mat-spinner *ngIf=\"!this.mapok\" color=\"primary\"></mat-spinner>\n  </div>\n</ng-container>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-plot',\n  templateUrl: './plot.component.html',\n  styleUrls: ['./plot.component.scss']\n})\nexport class PlotComponent implements OnInit {\n  @Input() data: any;\n  @Input() xvalue: string;\n  @Input() colorby: string;\n  @Input() outcomes: any;\n  @Input() outcomelabels = [];\n  @Input() plottype: String;\n  @Input() customdata: any;\n  @Input() customconfig: any;\n  @Input() customlayout: any;\n  @Input() custommargins: any;\n  @Input() linewidth: number;\n  @Input() showlegend: boolean;\n  @Input() sort: boolean;\n  @Input() sortx: boolean;\n  @Input() percent: boolean;\n  @Input() percentx: boolean;\n  @Input() basecolor = \"\";\n  @Input() colorscheme = [];\n  @Input() annotations = [];\n  @Input() hovertemplate = \"\";\n  @Input() plottitle = \"\";\n  @Input() plotsubtitle = \"\";\n  @Input() plotcaption = \"\";\n  @Input() n_yticks = 8;\n  @Input() xtickformat = \"\";\n  @Input() xtitle = \"\";\n  @Input() ytitle = \"\";\n  @Input() id = \"\";\n  @Input() divid = \"\";\n  @Input() fontfamily = \"Lato, sans-serif\";\n  @Input() fontsize = \".85rem\";\n  @Input() fontcolor= \"black\";\n  @Input() legendbg='ffffff20'; \n  @Input() legendposx='right'; \n  @Input() legendposy=1; \n  @Output() clicked = new EventEmitter<string>();\n\n  constructor(private api:ApiService) { }\n  plotlayout: any;\n  plotdata: any;\n  mainconfig: any;\n  plotlytype: string;\n  clickedvalue:any;\n\n  ngOnInit(): void {\n    if (this.divid==\"\"){this.divid= \"plotdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString();}\n    if (!this.linewidth) { this.linewidth = 2 };\n    if (this.basecolor==\"\") { this.basecolor=this.api.primarycolor};   \n    if (this.colorscheme.length==0){this.colorscheme=[this.basecolor];}\n    this.make_plot();\n  }\n\n  \n\n  ngOnChanges(changes: any) {\n    setTimeout(()=>{this.make_plot()},0);\n  }\n\n  reportclick(input){\n    this.clicked.emit(input);\n    this.clickedvalue = input;    \n  }\n\n\n  make_plot() {\n    this.mainconfig = {\n      displayModeBar: false,\n      scrollZoom: false,\n      autosizable: true,\n      locale: 'de',\n      doubleClick: 'reset',\n      showAxisDragHandles: false,\n      showAxisRangeEntryBoxes: false,\n      showTips: true\n    };\n    if (this.plottype == \"bar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: {\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\n          gridcolor: \"lightgrey\",\n          gridpattern: \"dot\",\n          gridwidth: 1,\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          annotations: this.annotations,\n          ticksuffix:\" \",\n          nticks:this.n_yticks },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"heatmap\") {\n      this.plotlytype = 'heatmap';\n      this.plotlayout = {\n        xaxis: {   side: 'top'},        \n        yaxis: {          autosize: true        },\n        autosize: false, padding: 0,\n        //legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 50, r: 50, b: 0, t: 50 }, \n        paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        //annotations: this.annotations\n      };\n      let plotdata = this.data;\n      plotdata['type']=\"heatmap\";\n      let colors = this.api.makescale(2);\n      plotdata['colorscale']= [\n        [0,colors[1].concat('CC')],\n        [1, colors[0].concat('CC')]\n      ];\n      plotdata['showscale']=false;\n      this.plotdata=[plotdata];      \n    }\n\n    if (this.plottype == \"violin\") {\n      this.plotlytype = \"violin\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: {  zeroline: false , automargin: true, rangemode: 'tozero',ticksuffix:\" \" },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"stackedbar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        barmode: \"stack\",\n        xaxis: { fixedrange: false, showgrid: false, type: 'category', automargin: false},\n        yaxis: { fixedrange: true, title: '',  autosize: true, automargin: true, \n        rangemode: 'tozero',ticksuffix:\" \" , \n        zerolinecolor: this.fontcolor,\n        zerolinewidth: 2,\n        nticks:this.n_yticks},\n        padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n    \n    }\n\n    if (this.plottype == \"tsline\" || this.plottype == \"lines\" || this.plottype == \"area\" || \n    this.plottype == \"stackedarea\" || this.plottype == 'scatter' ) {\n      this.plotlytype = \"lines\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, showgrid: false, automargin: false ,zeroline: false},\n        yaxis: {\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\n          gridcolor: \"lightgrey\",\n          gridpattern: \"dot\",\n          gridwidth: 1,\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          annotations: this.annotations,\n          ticksuffix:\" \",\n          nticks:this.n_yticks          \n        },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 20, b: 50, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\"\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n      if (this.percentx){\n        this.plotlayout.xaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"hbar\") {\n      this.plotlytype = \"hbar\";\n      this.plotlayout = {\n        xaxis: { fixedrange: true, showgrid: true, title: '',       \n          automargin: true, nticks:this.n_yticks },\n        yaxis: { fixedrange: false, type: 'category', automargin: true, \n        rangemode: 'tozero' ,ticksuffix:\" \",\n        zerolinecolor: this.fontcolor,\n        zerolinewidth: 2},\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 200, r: 0, b: 20, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n\n      };\n    }\n\n   \n\n    if (this.custommargins) {\n      this.plotlayout['margin'] = this.custommargins;\n    }\n    if (this.showlegend) {\n      this.plotlayout['showlegend'] = true;\n    }\n\n    if (this.xtickformat!=''){\n      this.plotlayout['xaxis']['tickformat']=this.xtickformat;\n    }\n\n    this.plotlayout['font']= {\n      family: this.fontfamily,\n      size: this.fontsize,\n      color: this.fontcolor\n    };\n    \n    if (this.xtitle!==\"\"){\n      this.plotlayout['xaxis']['title']=this.xtitle;\n      this.plotlayout['xaxis']['titlefont']=\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n\n    }\n    if (this.ytitle!==\"\"){\n      this.plotlayout['yaxis']['title']=this.ytitle;\n      this.plotlayout['yaxis']['titlefont']=\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n\n    }\n    if (this.plottype!=\"heatmap\"){\n    let plotdata = []\n    \n      \n    for (let item of this.data){\n      plotdata.push(item);\n    }\n    if (this.sort){\n      plotdata=this.api.sortArray(plotdata,this.outcomes[0]);\n    }\n    if (this.sortx){\n      plotdata=this.api.sortArray(plotdata,this.xvalue);\n    }\n    \n    let outcomes = this.outcomes;\n    if (this.colorby) {\n      outcomes = this.api.getuniqueValues(plotdata, this.colorby);\n      if (outcomes.length>1){\n        this.colorscheme=this.api.makescale(outcomes.length);\n      }      \n      plotdata = this.make_colorbyvalues();\n    }\n  \n   this.plotdata = this.make_plotdata(plotdata, this.xvalue, outcomes, this.plotlytype);  \n   \n   // DEBUG\n   // console.log(\"Make Plotdata:\",\"\\ndf:\",plotdata,\"\\nx:\", this.xvalue,\"\\nout:\", outcomes,\"\\ntype:\", this.plotlytype)\n  };\n\n   \n  }\n\n  make_colorbyvalues() {\n    let newdata = [];\n    let inputdata = this.data;\n    let thecolorvalues = this.api.getuniqueValues(inputdata, this.colorby).sort();\n    let thexvalues = this.api.getuniqueValues(inputdata, this.xvalue);\n    let theoutcome = this.outcomes[0];\n    for (let xvalue of thexvalues) {\n      let topush = {};\n      topush[this.xvalue] = xvalue;\n      for (let tocolor of thecolorvalues) {\n        let datapoint = this.api.filterArray(this.api.filterArray(inputdata, this.colorby, tocolor), this.xvalue, xvalue)[0];\n        if (datapoint) {\n          topush[tocolor] = datapoint[theoutcome];\n        }\n      }\n      newdata.push(topush);\n    }\n    // console.log(\"DEBUG make_colorbyvalues:\",'df',inputdata,\"colorvals\",thecolorvalues,\"xvals\",thexvalues,\"outcome\",theoutcome,\"newdf\",newdata);\n    return newdata;\n\n  }\n\n\n\n  make_trace(xdata, ydata = [], name: string, type = \"\") {\n    let trace = {\n      x: xdata,\n      y: ydata,\n      name: name,\n      type: type\n    }\n    if (this.plottype == \"stackedarea\") {\n      trace['stackgroup'] = \"one\";\n    }\n    if (this.hovertemplate != \"\") {\n      trace['hovertemplate'] = this.hovertemplate;\n    }\n    return trace;\n  }\n\n  make_plotdata(source = [], xaxis = \"\", ylist = [], type = \"bar\", colors = this.colorscheme) {\n    let xdata = this.api.getValues(source, xaxis)\n    let list = []\n    let i = 0\n    for (let name in ylist) {\n      let theydata = this.api.getValues(source, ylist[i]);\n      let tracename = ylist[i];\n      if (this.outcomelabels.length == ylist.length){\n        tracename = this.outcomelabels[i];\n      }\n      let trace = this.make_trace(xdata, theydata  ,tracename, type = type);\n      if (type == \"hbar\") {\n        trace = this.make_trace(this.api.getValues(source, ylist[i]), xdata, ylist[i], type = \"bar\")\n        trace[\"orientation\"] = \"h\"\n      }\n      if (type == \"bar\" || type == \"bar\" || type == \"scatter\") {\n        trace[\"marker\"] = {\n          color: colors[i]\n        }     }\n       \n        \n      \n      if (type == \"lines\") {\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth*2          \n        }\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth*5\n        }\n      }\n      if (this.plottype == \"area\") {\n        trace[\"fill\"] = \"tozeroy\";\n      }\n      if (this.plottype == \"violin\") {\n        trace = this.make_trace(name, theydata  , ylist[i], type = type);\n        trace['x']=name;\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth\n        }\n      }\n      if (this.plottype == \"scatter\") {\n        trace['mode']='markers';\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth*5\n        }\n        if (this.id!=\"\"){\n          trace[\"text\"] =  this.api.getValues(source, this.id);   \n          trace[\"textfont\"]={family: this.fontfamily}; \n          if (trace['x'].length<50){\n            trace['mode']='markers+text';    \n            trace['textposition']= 'bottom center';\n          }  \n          else {\n            trace['mode']='markers';    \n          }\n\n\n          \n        }\n        \n        }\n\n      list.push(trace)\n      i = i + 1\n    }\n    return list\n  } \n \n \n}\n","\n<ng-container *ngIf=\"!(this.plotdata && this.mainconfig && this.plotlayout)\">\n    <mat-spinner color=\"primary\"></mat-spinner>\n</ng-container>\n<ng-container *ngIf=\"this.plotdata && this.mainconfig && this.plotlayout\">\n    \n<plotly-plot class=\"plotlydiv\"\n[data]=\"this.plotdata\" [divId]=\"this.divid\" [debug]=\"true\"\n[layout]=\"this.plotlayout\" [config]=\"this.mainconfig\" (plotlyClick)=\"this.reportclick($event);\"\n[useResizeHandler]=\"true\" [style]=\"{position: 'relative', width: '100%', height: '100%'}\"\n></plotly-plot>  \n\n</ng-container>\n\n","import { AfterViewInit, Component, OnInit, Input ,ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n  @Input() data:any;\n  @Input() columns:any;\n  @Input() outcomes_numeric:any;\n  @Input() outcomes_rate:any;\n  @Input() newlabels:any;\n  @Input() pagesizes:any;\n  @Input() addfilter:boolean;\n  @Input() addrank:boolean;\n\n  datasource:any;\n  displayedColumns:String[];\n\n  \n  constructor() { }\n\n\n  ngOnInit(){\n  if (!this.outcomes_numeric){this.outcomes_numeric=[]};\n  if (!this.outcomes_rate){this.outcomes_rate=[]};\n  if (!this.pagesizes){this.pagesizes=[10, 50,100]};\n  this.displayedColumns =  this.columns;\n  this.datasource = new MatTableDataSource(this.data); \n  if (this.addrank){\n\n  }\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;    \n  }\n\n  ngOnChanges(changes: any) {\n    this.displayedColumns =  this.columns;\n    this.datasource = new MatTableDataSource(this.data); \n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;   \n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.datasource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","<ng-container *ngIf=\"this.addfilter\">\n  <mat-form-field appearance=\"outline\" >\n    <mat-label>Suche</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Suche...\" #input>\n  </mat-form-field>\n</ng-container>\n\n<mat-table [(dataSource)]=\"this.datasource\" matSort class=\"mat-elevation-z0\">\n\n <ng-container *ngFor=\"let thecol of displayedColumns\">\n  <ng-container [matColumnDef]=\"thecol\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{thecol}} </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> \n      <span *ngIf=\"this.outcomes_rate.indexOf(thecol)>=0\">{{element[thecol] | percent }}</span>\n      <span *ngIf=\"this.outcomes_numeric.indexOf(thecol)>=0\">{{element[thecol] | number }}</span>\n      <span *ngIf=\"(this.outcomes_rate.indexOf(thecol)<0) && (this.outcomes_numeric.indexOf(thecol)<0)\">{{element[thecol]}}</span>\n    </mat-cell >\n  </ng-container>\n</ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n<mat-paginator [pageSizeOptions]=\"this.pagesizes\" showFirstLastButtons></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthService,\n    private fb: FormBuilder) { }\n\n  users: any;\n  myRegform: any;\n  myDataUploadform: any;\n  adduser: boolean;\n  newuser: any;\n  adddata: boolean;\n  uploaderror: any;\n  datafile: any;\n  metadatafile: any;\n  metadone: boolean;\n  replacedata = true;\n  geojsonfile: any;\n  geouploadinfo: any;\n  areafeatures: any;\n  uploadres: string;\n  dataintend: string;\n  datacheck = [];\n  areavalues: any;\n  currentuser: any;\n  allmetadata: any;\n  datafilearray:any;\n  backenddoc:any;\n  uploadarea: string;\n  uploadareaid: string;\n  topicoptions = ['ordering', 'subgroups', 'demography', 'outcomes']\n  typeoptions = ['level', 'levelid', 'group', 'rate', 'number']\n  appversion:string = 'none';\n  ngOnInit(): void {\n    this.currentuser = this.auth.getUserDetails();\n    this.updateuserlist();\n    this.resetall();\n    this.buildForm();\n    this.allmetadata = this.api.getmetadata(\"metadata\");\n    let currentmetadata = this.api.filterArray(this.allmetadata, 'type', 'level')[0];\n    this.api.getTypeRequest('openapi.json').subscribe(\n      data=>{this.backenddoc=data;});\n    \n  }\n\n  ngOnDestroy(){\n    this.datafile = [];\n    this.metadatafile = [];\n    this.datafilearray = [];\n    \n    }\n\n  //File upload function\n  changeListener(event) {\n    let files = event.target.files;\n    let file = files[0];\n    let reader: FileReader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = (e) => {\n      this.datafile = reader.result;\n      let datalines = this.datafile.split('\\n');\n      let varnames = this.datafile.split('\\n').map(data => data.split(','))[0];\n      let newvarnames = [];\n      for (let thevar of varnames){\n        let topush = thevar.replace('.',\"_\");\n        newvarnames.push(topush);\n      }\n      datalines.shift();\n      this.datafile = [newvarnames.join(',')].concat(datalines).join('\\n');\n      varnames = newvarnames;\n      this.datafilearray = this.csvToDataArray(this.datafile);\n      let newmetadata = [];\n      let index = 0;\n      for (let varname of varnames) {\n        index = index + 1;\n        let topush = { 'varname': varname.replace(/(\\r\\n|\\n|\\r)/gm, \"\"), 'topic': \"\", 'description': \"\", \"allforlevel\": '',  \"publiclevels\": [] , \"public\" : false }\n        if (index == 1) {\n          topush[\"topic\"] = \"ordering\";\n          topush[\"type\"] = \"level\";         \n        }\n        if (index == 2) {\n          topush[\"topic\"] = \"ordering\";\n          topush[\"type\"] = \"levelid\";\n        }\n        if (index > 2) {\n          topush[\"type\"] = \"rate\";\n          topush[\"topic\"] = \"outcomes\";\n        }\n\n\n        newmetadata.push(topush);\n\n      }\n      this.metadone = false;\n      setTimeout(() => {\n        this.metadatafile = newmetadata;\n        this.checkmetadata();\n      }, 0); // fixes https://blog.angular-university.io/angular-debugging/\n\n    };\n\n\n  }\n\n  changeListenerGEOJSON(event) {\n    let files = event.target.files;\n    let file = files[0];\n    let reader: FileReader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = (e) => {\n      setTimeout(() => {\n        this.geojsonfile = JSON.parse(reader.result.toString());\n        setTimeout(() => {\n          this.areafeatures = Object.keys(this.geojsonfile['features'][0]['properties']);\n        }, 0);\n      }, 0); // fixes https://blog.angular-university.io/angular-debugging/\n\n    };\n\n\n  }\n\n\n  csvToArray(text) {\n    let p = '', row = [''], ret = [row], i = 0, r = 0, s = !0, l;\n    for (l of text) {\n      if ('\"' === l) {\n        if (s && l === p) row[i] += l;\n        s = !s;\n      } else if (',' === l && s) l = row[++i] = '';\n      else if ('\\n' === l && s) {\n        if ('\\r' === p) row[i] = row[i].slice(0, -1);\n        row = ret[++r] = [l = '']; i = 0;\n      } else row[i] += l;\n      p = l;\n    }\n    return ret;\n  };\n\n\n  getrefvalues(value) {\n    let data = this.datafile.split(/\\r|\\n|\\r/);\n    let dataarray = [];\n    let index = this.api.getValues(this.metadatafile, \"varname\").indexOf(value);\n    let i = 0;\n    for (let row of data) {\n      let topush = this.csvToArray(row)[0][index]\n      if (i > 0 && dataarray.indexOf(topush) < 0) { dataarray.push(topush) }\n      i = i + 1;\n    }\n\n    return dataarray;\n  }\n\n  updateuser(user, key, value) {\n    this.api.updateuser(user, key, value).subscribe(\n      data => { this.updateuserlist() });\n  }\n\n  deletuser(user) {\n    this.api.deleteuser(user).subscribe(\n      data => { this.updateuserlist() });\n  }\n\n  updateuserlist() {\n    this.api.getTypeRequest('users').subscribe(data => { this.users = data; })\n  }\n\n  buildForm() {\n\n    this.myRegform = this.fb.group(\n      {\n        anrede: [\"\", [\n          Validators.required,\n          Validators.minLength(1)]],\n        password: [\"\", [Validators.minLength(12)]],\n        firstname: [\"\", [\n          Validators.required,\n          Validators.minLength(2)]],\n        lastname: [\"\", [\n          Validators.required,\n          Validators.minLength(2)]],\n        email: [\"\", [Validators.required, Validators.email]]\n      }\n    );\n    this.myRegform.patchValue({ \"password\": this.rndpwd() });\n\n  };\n\n  buildDataUploadForm() {\n\n    \n    if (this.dataintend == 'geodataupload') {\n      this.myDataUploadform = new FormData();\n      this.geouploadinfo = {\n        'client_id': this.api.REST_API_SERVER_CLIENTID,\n        'levelnamevar': this.api.filterArray(this.allmetadata, \"type\", \"level\")[0]['varname'],\n        'levelname': this.uploadarea,\n        'levelidvar': this.api.filterArray(this.allmetadata, \"type\", \"levelid\")[0]['varname'],\n        'levelidname': this.uploadareaid\n      }\n      this.myDataUploadform.append('geodata', new Blob([JSON.stringify(this.geojsonfile)], { type: 'application/geo+json' }));\n      this.myDataUploadform.append('geodatainfo', JSON.stringify(this.geouploadinfo));      \n    }\n\n    if (this.dataintend == 'dataupload') {\n      this.myDataUploadform = new FormData();\n      this.myDataUploadform.append('data', new Blob([this.datafile], { type: 'text/csv' }));\n      this.myDataUploadform.append('metadata', this.arrayToCsv(this.metadatafile));\n    }\n  }\n\n\n  uploadnewdata() {\n    this.buildDataUploadForm();\n    this.uploadres = \"pending\";\n    this.uploaderror = null;\n    if (this.dataintend == 'dataupload') {\n      this.api.postTypeRequestnotimeout('upload_data/?replacedata=' + this.replacedata, this.myDataUploadform).subscribe(data => {\n        this.uploadres = \"success\";\n        setTimeout(() => {\n          this.resetall();\n        }, 1500);\n      },\n        error => {\n          this.uploadres = \"error\";\n          this.uploaderror = error.error;\n        })\n    }\n    if (this.dataintend == 'geodataupload') {\n      this.api.postTypeRequestnotimeout('upload_geodata/', this.myDataUploadform).subscribe(data => {\n        this.uploadres = \"success\";\n        setTimeout(() => {\n          this.resetall();\n        }, 1500);\n      },\n        error => {\n          this.uploadres = \"error\";\n          this.uploaderror = error.error.detail;\n        })\n      \n    }\n\n  }\n\n  checkmetadata() {\n    let err = []\n    let test1counter = 0;\n    let test2 = true;\n    let test3 = true;\n    let test4 = true;\n    let test5 = true;\n    let test6 = true;\n    for (let item of this.metadatafile) {\n\n      if (item.topic == \"ordering\" && ['levelid', 'level'].indexOf(item.type) >= 0) { test1counter = test1counter + 1; }\n      if (item.topic == \"subgroups\" && item.type !== 'group') { item.type = 'group'; }\n      if (item.topic == \"outcomes\" && ['rate', 'number'].indexOf(item.type) < 0) { test3 = false; }\n      if (item.topic == \"demography\" && ['rate', 'number'].indexOf(item.type) < 0) { test4 = false; }\n    }\n    if (test1counter !== 2) {\n      err.push(\"Level, and levelid missing or not labelled as topic.\")\n    }\n    if (!test2) {\n      err.push(\"Subgroups not typed correctly\")\n    }\n    if (!test3) {\n      err.push(\"Outcomes not typed correctly\")\n    }\n    if (!test4) {\n      err.push(\"Demography not typed correctly\")\n    }\n    let test5data = this.api.filterArray(this.metadatafile, 'topic', 'ordering').concat(this.api.filterArray(this.metadatafile, 'topic', 'subgroups'))\n    test5 = this.api.getValues(this.api.filterArray(test5data, 'allforlevel', ''), 'allforlevel').length == 0;\n\n    if (!test5) {\n      err.push(\"Reference Levels not specified\")\n    }\n\n    let test6data = this.api.filterArray(this.metadatafile, 'type', 'level')[0];\n    test6 = ((test6data['publiclevels'].length == 0) || !test6data['public']) || ((test6data['publiclevels'].length >0) && test6data['public'])\n    if (!test6) {\n      err.push(\"No public levels not for public level var specified\")\n    }\n\n    let test7 = this.metadatafile.length == this.api.getValues(this.metadatafile,\"varname\").length\n    if (!test7) {\n      err.push(\"Lengths not matching, data cols:\"+this.api.getValues(this.metadatafile,\"varname\").length+\", meta vars:\"+this.metadatafile.length)\n    }\n\n    // Check if no null values in topics==ordering or topics==subgroups\n    let test8tocheck = this.api.getValues(this.api.filterArray(this.metadatafile,\"topic\",\"ordering\"),\"varname\").concat(\n      this.api.getValues(this.api.filterArray(this.metadatafile,\"topic\",\"subgroups\"),\"varname\"));\n    let test8datalen = this.datafilearray.length;\n    let test8 = true\n    let test8problems = [];\n    for (let tocheckvar of test8tocheck){\n      let newlength = this.api.getValues(this.datafilearray,tocheckvar).filter(x => x!=null).filter(x => x!=\"\").length+1\n      test8 = test8 && (newlength==test8datalen)\n      if (newlength!==test8datalen){\n        test8problems.push(\" \"+tocheckvar+\" (n=\"+Math.abs( newlength-test8datalen)+\")\");\n      }\n    }\n    if (!test8) {\n      err.push(\"Missings in Ordering or Subgroup vars: \"+test8problems.toString())\n    }\n    this.datacheck = err;   \n  }\n\n  addusernow() {\n    let toadd = this.myRegform.value;\n    this.api.postTypeRequest(\"newuser\", toadd).subscribe(\n      data => {\n        this.adduser = false;\n        this.updateuserlist();\n      }\n    );\n\n\n  }\n\n  chpwd(user, pwd) {\n    this.api.changeuserpwd(user, pwd).subscribe(data => { this.updateuserlist() })\n  }\n\n  rndpwd() {\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\n  }\n\n  copy(item) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', (item));\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n    document.execCommand('copy');\n  }\n\n  resetall() {\n    this.adddata = !this.adddata;\n    this.datafile = null;\n    this.metadone = null;\n    this.metadatafile = null;\n    this.uploadres = null;\n    this.datacheck = [];\n    this.adduser = false;\n    this.adddata = false;\n    this.datafile = null;\n    this.metadatafile = null;\n    this.geojsonfile = null;\n    this.uploadarea = null;\n    this.geouploadinfo = null;\n    this.uploadareaid = null;\n\n  }\n\n  arrayToCsv(rows: object[]) {\n    if (!rows) {\n      return;\n    }\n    if (rows && !rows.length) {\n      rows = [rows];\n    }\n    const separator = ',';\n    const keys = Object.keys(rows[0]);\n    const csvContent =\n      keys.join(separator) +\n      '\\n' +\n      rows.map(row => {\n        return keys.map(k => {\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\n          cell = cell instanceof Date\n            ? cell.toLocaleString()\n            : cell.toString().replace(/\"/g, '\"\"');\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\n            cell = `\"${cell}\"`;\n          }\n          return cell;\n        }).join(separator);\n      }).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    return blob;\n  }\n\n  csvToDataArray(str, delimiter = \",\") {\n    const headers = str.slice(0, str.indexOf(\"\\n\")).split(delimiter);\n    const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\");\n    const arr = rows.map(function (row) {\n      const values = row.split(delimiter);\n      const el = headers.reduce(function (object, header, index) {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return el;\n    });\n    return arr;\n  }\n\n \n\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <h1 ngClass.lt-sm=\"mobileheading\">Administration</h1>\n    <p *ngIf=\"this.backenddoc && this.appversion\" class=\"mat-caption greycolor\"> Frontend Version: {{this.appversion}}, Backend Version: {{this.backenddoc['info']['version']}}</p>\n    <div *ngIf=\"!this.adduser && !this.adddata\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\"\n        fxLayoutAlign=\"start space-between\">\n        <div fxFlex=100>\n            <h2>Administrationsaufgaben</h2>\n            <p class=\"mat-caption greycolor\">In diesem Bereich können Dashboard Administratoren (\"Admin\") und \n                Zi-Administratoren (\"Superadmin\") Daten oder Nutzer*innen hinzufügen.</p>\n        </div>\n        <div>\n            <button mat-raised-button (click)=\"this.adduser=!this.adduser\" color=\"primary\">Nutzer hinzufügen</button>\n        </div>\n        <div fxShow.lt-md=false>\n            <button mat-raised-button (click)=\"this.adddata=!this.adddata\" color=\"primary\">Daten</button>\n        </div>\n\n    </div>\n    <div fxShow=false fxShow.lt-md=true>\n        <h4>Hinweis:</h4>\n        <p>Daten und Metadaten können nur auf großen Bildschirmen bearbeitet werden.</p>\n    </div>\n\n    <div *ngIf=\"!this.adduser && !this.adddata\">\n        <h2>Nutzerliste</h2>\n        <p class=\"mat-caption greycolor\">In diesem Bereich können Nutzerberechtigungen geändert werden.</p>\n        <mat-list>\n            <ng-container *ngFor=\"let user of this.users\">\n                <mat-list-item>\n                    <mat-icon color=\"primary\" fxHide.lt-md=true *ngIf=\"user['roles'].indexOf('superadmin')>=0\"\n                        mat-list-icon>admin_panel_settings\n                    </mat-icon>\n                    <mat-icon fxHide.lt-md=true *ngIf=\"user['roles'].indexOf('superadmin')<0\" mat-list-icon>\n                        account_circle</mat-icon>\n                    <div mat-line><strong>{{!user.lastname? 'k.A.': user.anrede+\" \"+user.lastname }} </strong>\n                        ({{user.email\n                        }})\n                        <a *ngIf=\"this.currentuser['is_superadmin']\" (click)=\"user.stammdaten=!user.stammdaten\"> ></a>\n                    </div>\n                    <div mat-line>\n                        <mat-chip-list *ngIf=\"!user.stammdaten\">\n                            <mat-chip color=\"primary\" (click)=\"this.updateuser(user.email,'user',!user['is_user'])\"\n                                [selected]=\"user['is_user']\">User</mat-chip>\n                            <mat-chip color=\"primary\" (click)=\"this.updateuser(user.email,'admin',!user['is_admin'])\"\n                                [selected]=\"user['is_admin']\">Admin</mat-chip>\n                            <mat-chip color=\"primary\"\n                                (click)=\"this.updateuser(user.email,'superadmin',!user['is_superadmin'])\"\n                                [selected]=\"user['is_superadmin']\">Superadmin</mat-chip>\n                        </mat-chip-list>\n                        <div *ngIf=\"user.stammdaten\" mat-line>\n                            <span style=\"color: lightgray;\">Nur für Admins</span>\n                            <mat-chip-list class=\"add-margin\" *ngIf=\"user.stammdaten\">\n                                <mat-chip *ngIf=\"!user.chpwd\" color=\"primary\" (click)=\"this.deletuser(user.email)\"\n                                    selected>löschen</mat-chip>\n                                <mat-chip *ngIf=\"!user.chpwd\" color=\"accent\"\n                                    (click)=\"user.chpwd=!user.chpwd;user.rndpwd=this.rndpwd();\" selected>password\n                                    zurücksetzen</mat-chip>\n                                <div class=\"add-margin\" *ngIf=\"user.chpwd\">\n                                    <p>Neues Password:</p>\n                                    <p><strong>{{user.rndpwd}}</strong> <a class=\"add-margin\"\n                                            (click)=\"this.copy(user.rndpwd)\">\n                                            <mat-icon>content_copy</mat-icon>\n                                        </a></p>\n                                    <p>\n                                        <mat-chip color=\"accent\" (click)=\"user.chpwd=!user.chpwd;\" selected>abbrechen\n                                        </mat-chip>&nbsp;&nbsp;<mat-chip color=\"primary\"\n                                            (click)=\"chpwd(user.email,user.rndpwd)\" selected>passwort setzen</mat-chip>\n                                    </p>\n                                </div>\n                            </mat-chip-list>\n                        </div>\n                        <div mat-line></div>\n                        <div fxHide.gt-sm=true mat-line></div>\n                    </div>\n                </mat-list-item>\n            </ng-container>\n        </mat-list>\n    </div>\n\n    <div fxLayout=\"row wrap\" *ngIf=\"this.adduser\">\n\n\n        <div fxFlex=100>\n            <h2><strong>Nutzer hinzufügen</strong></h2>\n            <mat-card>\n                <form autocomplete=\"on\" [formGroup]=\"myRegform\">\n                    <h2><strong>Informationen</strong></h2>\n                    <h4><strong>Name</strong>:</h4>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\">\n                        <mat-label>Anrede</mat-label>\n                        <mat-select name=\"anredefeld\" formControlName=\"anrede\" required>\n                            <mat-option value=\"Herr\">Herr</mat-option><br>\n                            <mat-option value=\"Frau\">Frau</mat-option><br>\n                            <mat-option value=\"Frau Dr.\">Frau Dr.</mat-option><br>\n                            <mat-option value=\"Herr Dr.\">Herr Dr.</mat-option><br>\n                            <mat-option value=\"Dr.\">Dr.</mat-option><br>\n                            <mat-option value=\" \">Kein Anrede</mat-option><br>\n                        </mat-select>\n                        <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n                        <mat-label>Vorname</mat-label>\n                        <input matInput placeholder=\"First name\" name=\"fname\" formControlName=\"firstname\">\n                        <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n                        <mat-label>Nachname</mat-label>\n                        <input matInput placeholder=\"Last Name\" name=\"lname\" formControlName=\"lastname\">\n                        <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\n                    </mat-form-field>\n                    <h4>Initiales <strong>Passwort</strong>:</h4>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\">\n                        <mat-label>Passwort</mat-label>\n                        <mat-error>Passwort zu kurz</mat-error>\n                        <input matInput type=\"string\" formControlName=\"password\" required>\n                        <mat-hint>Bitte kopieren Sie das Passwort</mat-hint>\n                        <mat-hint *ngIf=\"this.myRegform.value.password.length<12\">Ihr Passwort (mindestens 12 Zeichen).\n                        </mat-hint>\n                    </mat-form-field>\n                    <br><br><br>\n                    <h4><strong>E-Mail</strong> des neuen Nutzers</h4>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\">\n                        <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n                        <mat-icon matSuffix>email</mat-icon>\n                        <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\n                    </mat-form-field>\n                </form>\n            </mat-card>\n\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n            <div fxFlex=20><button [disabled]=\"this.myRegform.value.password.length<12\" mat-raised-button\n                    (click)=\"this.addusernow();\" color=\"accent\">Hinzufügen</button></div>\n            <div fxFlex=20><button mat-raised-button (click)=\"this.adduser=!this.adduser;\"\n                    color=\"primary\">Abbrechen</button></div>\n        </div>\n\n    </div>\n    <div *ngIf=\"this.adddata\" fxLayout=\"column\" fxLayoutGap=\"10px\" fxShow.lt-md=false>\n        <h2><strong>Daten hinzufügen</strong></h2>\n        <p>Mehr Informationen <a href=\"./assets/docs/Upload_Dateien.html\">hier</a></p>\n        <mat-card>\n            <div>\n                <h3><strong>Was soll hochgeladen werden?</strong></h3>\n                <mat-radio-group [(ngModel)]=\"this.dataintend\">\n                    <mat-radio-button value=\"dataupload\">Daten hinzufügen&nbsp;&nbsp;</mat-radio-button>\n                    <mat-radio-button *ngIf=\"this.areavalues\" value=\"geodataupload\">Geodaten hinzufügen&nbsp;\n                    </mat-radio-button>\n                </mat-radio-group>\n                <br><br>\n            </div>\n            <div *ngIf=\"this.dataintend=='geodataupload'\" fxLayout=\"column\">\n                <div fxFlex=100>\n                    <h3><strong>1. GEOJSON Datei hochladen</strong> <span *ngIf=\"this.geojsonfile\">\n                            <mat-icon color=\"primary\">check_circle</mat-icon>\n                        </span></h3>\n                </div>\n                <div *ngIf=\"!this.geojsonfile\" fxFlex.lt-md=100 fxFlex=50 fxLayout=\"column\">\n                    <div fxFlex=100>\n                        <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                            <mat-label>Gebiet für Geodatendatei festlegen</mat-label>\n                            <mat-select [(value)]=\"this.uploadarea\">\n                                <mat-option *ngFor=\"let option of this.areavalues\" [value]=\"option\">{{option}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                    </div>\n                    <div fxFlex=100>\n                        <input type=\"file\" accept='.geojson' style=\"display: none\"\n                            (change)=\"this.changeListenerGEOJSON($event);\" #dataInput>\n                        <br><br>\n                        <button [disabled]=\"!this.uploadarea\" mat-raised-button color=\"primary\"\n                            (click)=\"dataInput.click()\">Daten\n                            Auswählen</button>\n                    </div>\n                   \n                </div>\n                <div *ngIf=\"this.geojsonfile\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <div fxFlex=100>\n                        <h3><strong>2. GEOJSON beschreiben</strong> <span *ngIf=\"this.geodatafile\">\n                                <mat-icon color=\"primary\">check_circle</mat-icon>\n                            </span></h3>                            \n                    </div>\n                    <div fxFlex=100>\n                        <p>Die Datei hat {{this.geojsonfile['features'].length | number}} Regionen.</p>\n                        <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                            <mat-label>Wie lautet die Bezeichnung Regionen im geojson?</mat-label>\n                            <mat-select [(value)]=\"this.uploadareaid\">\n                                <mat-option *ngFor=\"let option of this.areafeatures\" [value]=\"option\">{{option}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n\n                </div>\n            </div>\n\n            <div *ngIf=\"this.dataintend=='dataupload'\">\n\n                <h3><strong>1. CSV Datei hochladen</strong> <span *ngIf=\"this.datafile\">\n                        <mat-icon color=\"primary\">check_circle</mat-icon>\n                    </span></h3>\n\n                <div *ngIf=\"!this.datafile\" fxFlex.lt-md=100 fxFlex=50>\n\n                    <input type=\"file\" accept='.csv' style=\"display: none\"\n                        (change)=\"this.datafile=this.changeListener($event);\" #dataInput>\n                    <br><br>\n                    <button mat-raised-button color=\"primary\" (click)=\"dataInput.click()\">Daten\n                        Auswählen</button>\n                </div>\n            </div>\n        </mat-card>\n        <mat-card *ngIf=\"this.metadatafile && this.dataintend=='dataupload'\">\n            <div>\n\n                <h3><strong>2. Daten beschreiben</strong><span *ngIf=\"this.metadone\">\n                        <mat-icon color=\"primary\">check_circle</mat-icon>\n                    </span></h3>\n                <p>Bitte prüfen Sie die initinale Zuordnung sorgfältig. Jeder Upload muss mindestens zwei Variablen vom\n                    Bereich \"ordering\" enthalten\n                    (Typen: level,levelid). Ebenso sollten alle Subgruppenvariablen vom Typ Gruppe sein. Jede Variable\n                    aus den Bereichen \"ordering\" oder \"sungroups\" muss Angaben zur Referenzkategorie machen.\n                    Zellen für diese Kategorie müssen auch in der Tabelle zu finden sein. Die Variablen aus den\n                    Bereichen Outcomes oder\n                    Demography sollten vom Typ 'rate' oder 'number' sein. Das Hinzufügen einer Indikatorenbeschreibung\n                    ist optional.</p>\n            </div>\n            <div *ngIf=\"(this.datacheck.length>0)\">\n                <mat-list>\n                    <h3 matSubheader><strong>Gefundene Fehler:</strong></h3>\n                    <mat-list-item *ngFor=\"let hinweis of this.datacheck\">\n                        <mat-icon color=\"primary\" mat-list-icon>error</mat-icon>\n                        <div mat-line><span class=\"primarycolor\">{{hinweis}}</span></div>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n            <div class=\"smalltab\" *ngIf=\"this.metadatafile && !this.metadone\" fxflex=100>\n\n                <div class=\"tabheader\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n                    <div fxFlex=15>Name</div>\n                    <div fxFlex=20>Thema</div>\n                    <div fxFlex=20>Typ</div>\n                    <div fxFlex>Referenzkategorie</div>\n                    <div fxFlex=15></div>\n\n                </div>\n\n                <div class=\"tabvalues primarycolor\" *ngFor=\"let row of this.metadatafile\" fxLayout=\"row wrap\"\n                    fxLayoutGap=\"10px\">\n                    <div fxFlex=15><br>{{row.varname}}</div>\n                    <div fxFlex=20>\n                        <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                            <mat-label>Bereich</mat-label>\n                            <mat-select [(value)]=\"row.topic\" (selectionChange)=\"this.checkmetadata()\">\n                                <mat-option *ngFor=\"let option of this.topicoptions\" [value]=\"option\">{{option}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div fxFlex=20>\n                        <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                            <mat-label>Art</mat-label>\n                            <mat-select [(value)]=\"row.type\" (selectionChange)=\"this.checkmetadata()\">\n                                <mat-option *ngFor=\"let option of this.typeoptions\" [value]=\"option\">{{option}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div fxFlex>\n                        <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)>=0\">\n                            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                                <mat-label>Referenzkategorie</mat-label>\n                                <mat-select [(value)]=\"row.allforlevel\" (selectionChange)=\"this.checkmetadata()\">\n                                    <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\n                                        {{option}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"outline\" *ngIf=\"row.type=='level'\">\n                                <mat-label>Öffentliche Raumebenen</mat-label>\n                                <mat-select [(value)]=\"row.publiclevels\" (selectionChange)=\"this.checkmetadata()\" multiple>\n                                    <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\n                                        {{option}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </ng-container>\n                        <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)<0\">\n\n                        </ng-container>\n\n                    </div>\n                    <div fxFlex=15>\n                        <mat-chip-list>\n                            <mat-chip color=\"primary\" (change)=\"this.checkmetadata()\" [selected]=\"row.public\"\n                                (click)=\"row.public=!row.public\">\n                                <span *ngIf=\"row.public\">Öffentlich</span>\n                                <span *ngIf=\"!row.public\">Privat</span>\n                            </mat-chip>\n                            <mat-chip color=\"primary\" [selected]=\"row.adddescr\" (click)=\"row.adddescr=!row.adddescr\">\n                                Beschreibung\n                            </mat-chip>\n                        </mat-chip-list>\n                    </div>\n                    <div *ngIf=\"row.adddescr\" fxFlex=100>\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Indikatorenbeschreibung</mat-label>\n                            <textarea style=\"color:black\" [(ngModel)]=\"row.description\" matInput rows=\"10\"\n                                cols=\"40\"></textarea>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n                <div>\n                    <div><button mat-raised-button [disabled]=\"!(this.datacheck.length==0)\" (click)=\"this.metadone=true\"\n                            color=\"accent\">Beschreibung\n                            Fertig</button></div>\n\n                </div>\n\n            </div>\n        </mat-card>\n\n        <div *ngIf=\"this.metadone\">\n            <mat-card>\n                <h3><strong>3. Sollen die aktuellen Daten überschrieben werden?</strong></h3>\n                <p>\n                    <mat-slide-toggle [(ngModel)]=\"this.replacedata\"></mat-slide-toggle>\n                    <span style=\"color:crimson;\" *ngIf=\"this.replacedata\">überschreiben</span>\n                    <span *ngIf=\"!this.replacedata\">nicht überschreiben.</span>\n\n                </p>\n                <p *ngIf=\"!this.replacedata\"><em>Achtung: Das Ergänzen der Daten ist aufwändig und erfordert ggf. viel\n                        Zeit. Bitte ergänzen Sie nur kleine Datenkörper!</em></p>\n            </mat-card>\n        </div>\n\n\n\n        <div class=\"add-margin\" fxLayoutAlign=\"space-between\" \n        *ngIf=\"(!this.uploadres || this.uploadres=='error')\">\n            <div><button mat-raised-button (click)=\"uploadnewdata()\" [disabled]=\"(!this.metadone) && (!this.uploadareaid)\"\n                    color=\"accent\">Hinzufügen\n\n                </button></div>\n            <div><button mat-raised-button (click)=\"this.resetall();\" color=\"primary\">Abbrechen</button></div>\n        </div>\n        <div *ngIf=\"this.uploadres\">\n            <mat-card>\n                <h1>Datenupload</h1>\n                <mat-spinner *ngIf=\"this.uploadres=='pending'\" [diameter]=\"50\"></mat-spinner>\n                <p *ngIf=\"this.uploadres=='pending'\">Hinweis: Bitte haben Sie Geduld: Es kann etwas dauern wenn viele\n                    Daten aktualisiert oder gelöscht werden müssen.</p>\n                <p *ngIf=\"this.uploadres=='success'\">\n                    <strong>Upload erfolgreich!</strong>\n                </p>\n                <p *ngIf=\"this.uploadres=='error'\">\n                    <strong>Fehler beim Upload</strong> Fehlermeldung: <span\n                        class=\"primarycolor\">{{this.uploaderror}}</span>\n                </p>\n            </mat-card>\n        </div>\n    </div>\n   \n</div>","import { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \nimport {HttpParams} from '@angular/common/http';  \nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n \n@Component({ \n  selector: 'app-login', \n  templateUrl: './login.component.html', \n  styleUrls: ['./login.component.scss'] \n}) \nexport class LoginComponent implements OnInit { \n  form: FormGroup \n  constructor( \n    private _api : ApiService, \n    private _auth: AuthService, \n    private router: Router, \n    public fb: FormBuilder \n    \n    \n  ) { }\n  loggedin:boolean; \n  login_pending:boolean;\n  loginerror:boolean;\n\n\n \n  ngOnInit(): void { \n    this.login_pending = false;\n    this.form = this.fb.group({ \n      username: ['', Validators.required], \n      password:['', Validators.required] \n    }); \n    if(this._auth.getToken()){this.loggedin=true;}\n  } \n \n  login(){\n    this.login_pending = true;\n    this._auth.login(this.form.value).subscribe(data => {\n      setTimeout(()=>{\n        this.loggedin=true; \n        this.router.navigate(['/']);\n      },750);    \n      \n    },error => {\n      this.loginerror = true;\n    });\n    this.login_pending = false;\n  }\n  \n  logout(){\n    this._auth.logout();    \n    this.router.navigate(['/']);\n  }\n \n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div fxFlex=100 style=\"max-width: 500px;\" *ngIf=\"!this.loggedin\">\n        <mat-card>\n            <form  [formGroup]='form' (ngSubmit)='login()'>\n                <h1>Login</h1>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>E-Mail</mat-label>\n                    <input matInput type=\"email\" placeholder=\"Email\" name=\"email\" formControlName='username' autocomplete=\"false\" required>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>Kennwort</mat-label>\n                    <input matInput type=\"password\" name=\"current-password\" formControlName='password' required autocomplete=\"false\">\n                </mat-form-field>\n                <div *ngIf=\"!this.login_pending\" fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n                    <div>\n                        <button mat-raised-button color=\"primary\" type='submit' [disabled]='!this.form.valid' >\n                            Login\n                        </button>\n                    </div>\n                    <div>\n                        <button mat-raised-button color=\"accent\" (click)=\"logout()\">\n                            Abbrechen\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"this.login_pending\">\n                    ... in Bearbeitung ... \n                </div>\n                <div *ngIf=\"this.loginerror\">\n                    <p style=\"color:crimson;\">Falscher Benutzername/Falsches Kennwort</p>\n                </div>\n            </form>\n        </mat-card>\n    </div>\n\n    <div *ngIf=\"this.loggedin\">\n        You're in!\n        <button mat-raised-button color=\"accent\" (click)=\"logout()\">\n            Ausloggen\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CsvexportService } from 'src/app/services/csvexport.service';\n\n@Component({\n  selector: 'app-private',\n  templateUrl: './private.component.html',\n  styleUrls: ['./private.component.scss']\n})\nexport class PrivateComponent implements OnInit {\n\n\n  constructor(private api: ApiService, private auth: AuthService, private csv:CsvexportService) { }\n  tsquery={};\n  tsqueryresult={};\n  bevrefdata={};\n  colorsscheme ;\n  restablecols=[]; \n  settings: any;\n  duration:number;\n  levelvalues = [\n    'Gesamt',\n    'Baden-Württemberg',\n    'Bayern',\n    'Berlin',\n    'Brandenburg',\n    'Bremen',\n    'Hamburg',\n    'Hessen',\n    'Mecklenburg-Vorpommern',\n    'Niedersachsen',\n    'Nordrhein-Westfalen',\n    'Rheinland-Pfalz',\n    'Saarland',\n    'Sachsen',\n    'Sachsen-Anhalt',\n    'Schleswig-Holstein',\n    'Thüringen'];\n  outcomes = [\n    'Anteil Assessments', \n    'Anzahl Assessments',\n    //'Anzahl Assessments je 100 Tsd. Einw.', ## Not possible due to missing reference data\n    'Anzahl Beschwerden pro Assessment',\n    'Anzahl Fragen je Assessment',\n    'Mittlere Dauer je Assessment',\n    'Mittlere Dauer Disposition',\n    //'Anteil Assessment an Disposition',\n    //'Häufigste Beschwerden',\n    //'Häufigste Hauptbeschwerden'\n  ]\n\n  diffmerkmale = [\n    'KV', \n    'Alter', \n    'Geschlecht', \n    'Wochentag', \n    'Empfehlung Dringlichkeit', \n    'Empfehlung Ort', \n    'Entscheidung Dringlichkeit', \n    'Entscheidung Ort',\n    'Hauptbeschwerde',\n    'Beschwerde'\n];\n\ndiffvars = {\n  'KV':'levelid', \n  'Alter':['ALTER_id','ALTER_text'], \n  'Geschlecht':['Geschlecht'], \n  'Wochentag':[], \n  'Empfehlung Dringlichkeit':['TTTsmed_id','TTTsmed_text'], \n  'Empfehlung Ort':['POCsmed_id','POCsmed_text'], \n  'Entscheidung Dringlichkeit':['TTTdispo_id','TTTdispo_text'], \n  'Entscheidung Ort':['POCdispo_id','POCdispo_text'], \n  'Hauptbeschwerde':['Hauptbeschwerde'],\n  'Beschwerde':['Beschwerden_gesamt']\n}\n\n  ngOnInit(): void {\n    this.colorsscheme = this.api.makescale(5);\n    //console.log('colors',this.colorsscheme);\n    this.settings = { 'analyzeall': true, 'level': 'KV', 'levelid': 'Gesamt', 'diffmerkmale': [] };\n    //testesttings\n    this.settings = { \"analyzeall\": true, \"level\": \"KV\", \"levelid\": \"Bremen\", \"diffmerkmale\": [ \"Geschlecht\" ], \"start\": new Date(\"2021-09-30\"), \"end\": new Date(\"2021-10-30\"), \"outcome\": \"Anzahl Assessments\" };\n    this.timeseriesquery();\n    \n  }\n\n\n\n  updatequery(key, value) {\n    //console.log(\"Settings changed\");\n    if (key != \"__change\" && key != \"diffmerkmale\") { this.settings[key] = value };\n    if (key == \"levelid\" && value == \"Gesamt\") { this.settings['analyzeall'] = true; };\n    if (key=='outcome' && value=='Anzahl Assessments je 100 Tsd. Einw.'){\n      this.settings['diffmerkmale']=[];\n    }\n    if (key == 'diffmerkmale') {\n      if (this.settings['diffmerkmale'].includes(value)) {\n        this.settings['diffmerkmale'] = this.settings['diffmerkmale'].filter(function (item) { return item !== value });\n      }\n      else {\n      if (!this.settings['diffmerkmale'].includes(value) && this.settings['diffmerkmale'].length < 2) {\n        if (!((this.settings['outcome']=='Anzahl Assessments je 100 Tsd. Einw.') && ['Alter','Geschlecht'].includes(value)))\n        this.settings['diffmerkmale'].push(value);\n      };  \n    };    \n    }\n  if (this.checkparams()){\n    this.timeseriesquery();\n  }  \n  }\n\n  checkparams(){\n    let res = true;    \n    this.duration = 0;\n    if (this.settings['start'] && this.settings['end']){\n      this.duration=(this.settings['end']-this.settings['start'])/1000/60/60/24;\n    };\n    if (this.duration==0 || this.duration>90){\n      res = false;\n    };  \n    if (!this.settings['outcome']){\n      res = false;\n    }\n    return res;\n  }\n\n  timeseriesquery(){\n    this.tsqueryresult = [];\n    let tzoffset = (new Date()).getTimezoneOffset() * 60000;\n    let start =\"\";\n    if (this.settings['start']){start= (new Date(this.settings['start'] - tzoffset)).toISOString();};\n    let end = \"\";\n    if (this.settings['end']){end= (new Date(this.settings['end'] - tzoffset)).toISOString();};\n    this.tsqueryresult={};\n    this.bevrefdata={};\n    this.tsquery= {\n        \"startdate\": start.slice(0,10),\n        \"stopdate\": end.slice(0,10),\n        \"timeframe\": \"none\",\n        \"outcome\": NaN,\n        \"filterlist\": [\n          {'level':'KV'}                      \n        ],\n        \"subgroups\": [] ,\n        \"client_id\":this.api.REST_API_SERVER_CLIENTID    \n    };   \n    if (this.settings['levelid']!=\"Gesamt\"){this.tsquery['filterlist'].push({'levelid':this.settings['levelid']})};    \n    for (let item of this.settings['diffmerkmale']){\n      this.tsquery['subgroups']=this.tsquery['subgroups'].concat(this.diffvars[item]);\n    };\n    if (this.settings['diffmerkmale'].includes('Wochentag')){\n      this.tsquery['timeframe']='weekday';\n    };\n    if ('Anzahl Beschwerden pro Assessment'==this.settings['outcome']){\n      this.tsquery['outcome']=\"Anzahl_Beschwerden\";\n    };\n    if ('Anzahl Fragen je Assessment'==this.settings['outcome']){\n      this.tsquery['outcome']=\"Anzahl_Fragen\";\n    };\n    if ('Mittlere Dauer je Assessment'==this.settings['outcome']){\n      this.tsquery['outcome']=\"DAUERsmed\";\n    };\n    if ('Mittlere Dauer Disposition'==this.settings['outcome']){\n      this.tsquery['outcome']=\"DAUERdispo\";\n    };\n    if ('Anteil Assessment an Disposition'==this.settings['outcome']){\n      // later 2 Queries need to be done, one for DAUERsmed and one DAUERdispo\n      // console.log(\"Not implemented yet!\");\n    };\n    if ('Häufigste Beschwerden'==this.settings['outcome']){\n      this.tsquery['outcome']=\"Beschwerden_gesamt\";\n    };\n    if ('Häufigste Hauptbeschwerden'==this.settings['outcome']){\n      this.tsquery['outcome']=\"Hauptbeschwerde\";\n    };  \n    this.restablecols = this.settings['diffmerkmale'].concat([this.tsquery['outcome'],'Anzahl','Anteil']);\n    if (!this.tsquery['outcome']){\n      this.restablecols = this.settings['diffmerkmale'].concat(['Anzahl','Anteil']);\n    }\n    this.api.postTypeRequest('get_data/', { \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n    \"groupinfo\": {\n      \"level\":\"KV\",\"levelid\":this.settings['levelid'],\n      \"Jahr\":parseInt(this.tsquery['stopdate'].slice(0,4)),\n      \"Monat\":parseInt(this.tsquery['stopdate'].slice(5,7))},\n    \"showfields\": ['level','levelid','Jahr','Monat','KM6Versicherte', 'BEVSTAND']\n    }).subscribe(data=>{this.bevrefdata = data['data'][0];\n    this.api.postTypeRequest('analytics/timeseries/',this.tsquery).subscribe(data => {this.tsqueryresult=this.preparedata(data);});\n  });    \n  }\n\n  preparedata(input){\n    let output = [];\n    if (input.length>0){\n      let allitems = this.api.sumArray(this.api.getValues(input,'count'));\n      for (let item of input){\n        //item['Bev']=this.bevrefdata['BEVSTAND'];        \n        if (parseFloat(item['count'])>0){\n          item['Anzahl']=item['count'];\n          item['Anteil']=Math.round(1000*item['count']/allitems)/1000;\n        }        \n        //item['Je100Tsd']=Math.round(1e6*item['count']/item['Bev'])/10;\n        item['Alter']=item['ALTER_text'];\n        item['Wochentag']=this.api.getweekdayname(item['timeframe'],true);\n        item['KV']=item['levelid'];\n        if ( item['POCsmed_text']){\n          item['Empfehlung Ort']=item['POCsmed_text'];\n        };\n        if ( item['TTTsmed_text']){\n          item['Empfehlung Dringlichkeit']=item['TTTsmed_text'];\n        };\n        if ( item['POCdispo_text']){\n          item['Entscheidung Ort']=item['POCdispo_text'];\n        };\n        if ( item['TTTdispo_text']){\n          item['Entscheidung Dringlichkeit']=item['TTTdispo_text'];\n        };\n        if ( item['Beschwerden_gesamt']){\n          item['Beschwerde']=item['Beschwerden_gesamt'];\n          delete item['Beschwerden_gesamt'];\n        };\n        \n        if ( item['Anzahl']){\n          output.push(item);\n        };\n      } \n\n    }\n    \n\n    return output;\n  }\n\n  exportascsv(name, data) {\n    this.csv.exportToCsv(name, data);\n    this.csv.exportToCsv(name + \"_settings.csv\", [this.settings]);\n  }\n\n\n}\n\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"30px\">\n    <div>\n        <h1 ngClass.lt-sm=\"mobileheading\">Tool für erweiterte Analysen</h1>\n        <p class=\"grey\">In diesem Bereich ist ein Zugriff auf faktisch anonymisierte Individualdatensätze möglich</p>\n    </div>\n    <div *ngIf=\"true\">\n<!--         <mat-slide-toggle color=\"primary\" labelPosition='after' *ngIf=\"this.settings['analyzeall']\"\n        (toggleChange)=\"this.updatequery('analyzeall',!this.settings['analyzeall']);\"\n        [checked]=\"this.settings['analyzeall']\"\n        >Bundesweite Analyse</mat-slide-toggle> -->\n        <div>\n            <p >\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Analysezeitraum</mat-label>\n                    <mat-date-range-input [rangePicker]=\"picker\">\n                        <input matStartDate placeholder=\"Beginn\" \n                        (dateChange)=\"this.updatequery('__change',true)\"\n                        [(ngModel)]=\"this.settings['start']\">\n                        <input matEndDate placeholder=\"Ende\" \n                        (dateChange)=\"this.updatequery('__change',true)\"\n                        [(ngModel)]=\"this.settings['end']\">\n                    </mat-date-range-input>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-date-range-picker #picker></mat-date-range-picker>\n                </mat-form-field>\n            </p>\n            <p *ngIf=\"this.duration>64\" class=\"accentcolor\">\n                Die maximale Länge des Analysezeitraums beträgt 64 Tage. Ihre Anfrage kann nicht ausgeführt werden.\n            </p>\n            <p *ngIf=\"(this.duration>7 && this.duration<=64) && (this.settings['levelid']=='Gesamt')\" class=\"mat-caption greycolor\">\n                Bitte beachten Sie, aufgrund der großen Zahl betroffener Datensätze kann es zu einer verzögerten Auswertung kommen.\n            </p>\n        </div>\n        <div >        \n        <h3>Region</h3>\n        <p>\n            <mat-chip-list>\n                <mat-chip (click)=\"this.updatequery('levelid',item);\" *ngFor=\"let item of this.levelvalues\"\n                    [selected]=\"(this.settings['levelid']==item)\" color=\"primary\">\n                    {{item}}\n                </mat-chip>\n            </mat-chip-list>\n        </p>\n        </div>\n        <div>\n        <h3>Outcome</h3>\n        <p>\n            <mat-chip-list>\n                <mat-chip (click)=\"this.updatequery('outcome',item);\" *ngFor=\"let item of this.outcomes\"\n                    [selected]=\"(this.settings['outcome']==item)\" color=\"primary\">\n                    {{item}}\n                </mat-chip>\n            </mat-chip-list>\n        </p>\n        <p class=\"mat-caption accentcolor\" *ngIf=\"this.settings['outcome']=='Anzahl Assessments je 100 Tsd. Einw.'\">\n            Hinweis:\n            Es können aktuell nur Raten für die Gesamtbevölkerung berichtet werden. Eine Differenzierung nach Alter und Geschlecht ist nicht möglich.\n        </p>\n        </div>\n        <div *ngIf=\"this.settings['outcome']\">\n            <h3>Differenzierungsmerkmale</h3>\n            <p>\n                <mat-chip-list multiple>\n                    <mat-chip (click)=\"this.updatequery('diffmerkmale',item);\" *ngFor=\"let item of this.diffmerkmale\"\n                        [selected]=\"(this.settings['diffmerkmale'].includes(item))\" color=\"primary\">\n                        {{item}}\n                    </mat-chip>\n                </mat-chip-list>\n            </p>\n            </div>\n            <!-- Auskommentieren fürs Testen-->\n            <!-- \n            <div>\n                \n                <p><strong>Settings</strong></p>\n                <p>{{this.settings | json}}</p>\n        \n            </div>\n            <div>\n                <p><strong>Query</strong></p>\n                <p>{{this.tsquery | json}}</p>\n        \n            </div>  -->\n            <div *ngIf=\"this.tsqueryresult.length==0\">\n                <p>Keine Ergebnisse zur Anzeige</p>\n            </div>\n            <div *ngIf=\"this.settings['diffmerkmale'].length==0 && this.tsqueryresult.length>0\">\n                \n                \n                <div>\n                <app-box [value]=\"this.tsqueryresult[0]['count']\" [numberformat]=\"'1.0-0'\"\n                            [maincolor]=\"this.colorsscheme[4].concat('80')\"\n                            [description]=\"'Assessments in '.concat(this.settings['levelid'])\"></app-box>\n                </div>\n                <div *ngIf=\"this.tsqueryresult[0]['DAUERsmed']\">\n                    <app-box [value]=\"this.tsqueryresult[0]['DAUERsmed']\" [numberformat]=\"'1.0-0'\"\n                                [maincolor]=\"this.colorsscheme[2].concat('80')\"\n                                [description]=\"'Mittlere Dauer SmED'\"></app-box>\n                </div>\n                <div *ngIf=\"this.tsqueryresult[0]['DAUERdispo']\">\n                    <app-box [value]=\"this.tsqueryresult[0]['DAUERdispo']\" [numberformat]=\"'1.0-0'\"\n                                [maincolor]=\"this.colorsscheme[2].concat('80')\"\n                                [description]=\"'Mittlere Dauer Disposition'\"></app-box>\n                </div>\n                <div *ngIf=\"this.tsqueryresult[0]['Anzahl_Fragen']\">\n                    <app-box [value]=\"this.tsqueryresult[0]['Anzahl_Fragen']\" [numberformat]=\"'1.0-0'\"\n                                [maincolor]=\"this.colorsscheme[1].concat('80')\"\n                                [description]=\"'Mittlere Anzahl Fragen SmED'\"></app-box>\n                </div>\n                \n    \n \n        \n            </div>\n            <div *ngIf=\"this.settings['diffmerkmale'].length==1 && this.tsqueryresult.length>0\"\n                fxLayout=\"row wrap\">\n                <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n                    <mat-card>\n                        <h3>Anzahl Assessments</h3>\n                        <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" \n                            [fontcolor]=\"'white'\"                            \n                            [outcomes]=\"['count']\"\n                            plottype=\"bar\"></app-plot>\n                        <div>\n                            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                                (closed)=\"panelOpenState = false\">\n                                <mat-expansion-panel-header>\n                                    <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                                </mat-expansion-panel-header>\n                                <mat-panel-description>\n                                <div class=\"mat-caption\">\n                                    <p >\n                                        <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                                            <mat-icon inline=true>file_download</mat-icon>\n                                            Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                        </a>\n                                    </p>\n                                    <h3> Weitere Informationen zum Indikator</h3>\n                                    <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                                </div>\n                                </mat-panel-description>\n                            </mat-expansion-panel>\n                        </div>\n                    </mat-card>\n                </div>\n                <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n                    <mat-card>\n                        <h3>Anteil Assessments</h3>\n                        <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" \n                            [fontcolor]=\"'white'\"   [colorscheme]=\"['#d0f321']\"                          \n                            [outcomes]=\"['Anteil']\" [percent]=\"true\"\n                            plottype=\"bar\"></app-plot>\n                        <div>\n                            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                                (closed)=\"panelOpenState = false\">\n                                <mat-expansion-panel-header>\n                                    <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                                </mat-expansion-panel-header>\n                                <mat-panel-description>\n                                <div class=\"mat-caption\">\n                                    <p >\n                                        <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                                            <mat-icon inline=true>file_download</mat-icon>\n                                            Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                        </a>\n                                    </p>\n                                    <h3> Weitere Informationen zum Indikator</h3>\n                                    <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                                </div>\n                                </mat-panel-description>\n                            </mat-expansion-panel>\n                        </div>\n                    </mat-card>\n                </div>\n                <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"(this.tsqueryresult.length>0) && \n                    (this.tsquery['outcome']) || (this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                    || (this.settings['diffmerkmale'].includes('Beschwerde'))\n                    \">\n                    <mat-card>\n                        <h3>{{this.settings['outcome']}}</h3>\n                        <ng-container *ngIf=\"!(this.settings['diffmerkmale'].includes('Hauptbeschwerde')) &&\n                        !(this.settings['diffmerkmale'].includes('Beschwerde'))\">\n                        <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" \n                            [fontcolor]=\"'white'\"   [colorscheme]=\"['orange']\"                          \n                            [outcomes]=\"[this.tsquery['outcome']]\" \n                            plottype=\"bar\"></app-plot>\n                        </ng-container>\n                        <p>{{this.restablecols | json}}</p>\n                        <ng-container *ngIf=\"(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                        || (this.settings['diffmerkmale'].includes('Beschwerde'))\">                            \n                                <app-table [(data)]=\"this.tsqueryresult\" [outcomes_rate]=\"['Anteil']\"\n                                [columns]=\"this.restablecols\"></app-table>        \n                            </ng-container>\n                            \n                        <div>\n                            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                                (closed)=\"panelOpenState = false\">\n                                <mat-expansion-panel-header>\n                                    <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                                </mat-expansion-panel-header>\n                                <mat-panel-description>\n                                <div class=\"mat-caption\">\n                                    <p >\n                                        <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                                            <mat-icon inline=true>file_download</mat-icon>\n                                            Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                        </a>\n                                    </p>\n                                    <h3> Weitere Informationen zum Indikator</h3>\n                                    <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                                </div>\n                                </mat-panel-description>\n                            </mat-expansion-panel>\n                        </div>\n                    </mat-card>\n                </div>\n                \n            \n             \n        \n            </div>\n            <div *ngIf=\"this.settings['diffmerkmale'].length==2 && this.tsqueryresult.length>0\"\n                fxLayout=\"row wrap\">\n                <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n                    <mat-card>\n                        <h3>Anzahl Assessments</h3>\n                        <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" \n                            [fontcolor]=\"'white'\"                            \n                            [outcomes]=\"['count']\"\n                            [colorby]=\"this.settings['diffmerkmale'][1]\"\n                            plottype=\"bar\"></app-plot>\n                        <div>\n                            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                                (closed)=\"panelOpenState = false\">\n                                <mat-expansion-panel-header>\n                                    <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                                </mat-expansion-panel-header>\n                                <mat-panel-description>\n                                <div class=\"mat-caption\">\n                                    <p >\n                                        <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                                            <mat-icon inline=true>file_download</mat-icon>\n                                            Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                        </a>\n                                    </p>\n                                    <h3> Weitere Informationen zum Indikator</h3>\n                                    <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                                </div>\n                                </mat-panel-description>\n                            </mat-expansion-panel>\n                        </div>\n                    </mat-card>\n                </div>\n                <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n                    <mat-card>\n                        <h3>Anteil Assessments</h3>\n                        <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" \n                            [fontcolor]=\"'white'\"   [colorscheme]=\"['#d0f321']\"  \n                            [colorby]=\"this.settings['diffmerkmale'][1]\"\n                            [outcomes]=\"['Anteil']\" [percent]=\"true\"\n                            plottype=\"bar\"></app-plot>\n                        <div>\n                            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                                (closed)=\"panelOpenState = false\">\n                                <mat-expansion-panel-header>\n                                    <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                                </mat-expansion-panel-header>\n                                <mat-panel-description>\n                                <div class=\"mat-caption\">\n                                    <p >\n                                        <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                                            <mat-icon inline=true>file_download</mat-icon>\n                                            Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                        </a>\n                                    </p>\n                                    <h3> Weitere Informationen zum Indikator</h3>\n                                    <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                                </div>\n                                </mat-panel-description>\n                            </mat-expansion-panel>\n                        </div>\n                    </mat-card>\n                </div>\n                <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"(this.tsqueryresult.length>0) && (this.tsquery['outcome']\n                    || ((this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                    || (this.settings['diffmerkmale'].includes('Beschwerde')))\n                    )\">\n                    <mat-card>\n                        <h3>{{this.settings['outcome']}}</h3>\n                        <ng-container *ngIf=\"!(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                        && !(this.settings['diffmerkmale'].includes('Beschwerde'))\">\n                            <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" \n                                [colorby]=\"this.settings['diffmerkmale'][1]\"\n                                [fontcolor]=\"'white'\"   [colorscheme]=\"['orange']\"                          \n                                [outcomes]=\"[this.tsquery['outcome']]\" \n                                plottype=\"bar\"></app-plot>\n                            </ng-container>\n                            <ng-container *ngIf=\"(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                            || (this.settings['diffmerkmale'].includes('Beschwerde'))\">                            \n                                    <app-table [(data)]=\"this.tsqueryresult\" [outcomes_rate]=\"['Anteil']\"\n                                    [columns]=\"this.restablecols\"></app-table>        \n                                </ng-container>\n                            \n                        <div>\n                            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                                (closed)=\"panelOpenState = false\">\n                                <mat-expansion-panel-header>\n                                    <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                                </mat-expansion-panel-header>\n                                <mat-panel-description>\n                                <div class=\"mat-caption\">\n                                    <p >\n                                        <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                                            <mat-icon inline=true>file_download</mat-icon>\n                                            Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                        </a>\n                                    </p>\n                                    <h3> Weitere Informationen zum Indikator</h3>\n                                    <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                                </div>\n                                </mat-panel-description>\n                            </mat-expansion-panel>\n                        </div>\n                    </mat-card>\n                </div>\n                \n            \n             \n        \n            </div>\n    </div>\n    \n\n</div>","import { Component, OnInit } from '@angular/core'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \n \n@Component({ \n  selector: 'app-profile', \n  templateUrl: './profile.component.html', \n  styleUrls: ['./profile.component.scss'] \n}) \nexport class ProfileComponent implements OnInit { \n \n  constructor( \n    private api : ApiService, \n    private _auth: AuthService, \n    private router:Router\n  ) { } \n \n  userdetails:any;\n  pwdchange:any;\n  action:string;\n  pwdrequest:any;\n  deleterequest:any;\n  deleteresult:string;\n\n  ngOnInit(): void { \n    this.pwdrequest={'oldpwd':'','newpwd':''}\n    this.deleterequest={'pwd':''}\n    this.pwdchange= {'progress':false,'ok':false};\n    this.userdetails = this._auth.getUserDetails();\n    \n  } \n\n  chpwd(){\n    this.pwdchange['progress'] = true;\n    this.api.changeuserpwd(this.userdetails.email,this.pwdrequest.newpwd,this.pwdrequest.oldpwd).subscribe(data=>{\n    this.pwdchange['ok'] = true;\n    this.pwdchange['progress'] = false;\n    this.pwdchange['done'] = true;\n    setTimeout(()=>{\n      this.pwdchange= {'progress':false,'ok':false};this.action=''},1500);\n      this.pwdrequest={'oldpwd':'','newpwd':''};    \n  },\n  error => {\n    this.pwdchange['done'] = true;\n    this.pwdchange['progress'] = false;})\n  }\n\n  deleteaccount(){\n    this.api.deleteuser(this.userdetails.email,this.deleterequest.pwd).subscribe(\n      data => {\n        //this.deleteresult=\"success\";\n        //localStorage.clear();\n        //setTimeout(()=>{this.router.navigate(['/'])},3000);        \n      },\n      error => {this.deleteresult=\"error\";}\n    )\n  }\n}\n","<div class=\"container\" fxLayout=\"row\" fxLayoutGap=\"1rem\"  fxLayoutAlign=\"space-around\"\n*ngIf=\"!(this.deleteresult=='success')\" >\n    <div class=\"small\">\n    <h1>Ihre Nutzerdaten</h1>    \n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Name:</div>\n                <div fxFlex><strong>{{this.userdetails.anrede+' '+this.userdetails.firstname+' '+this.userdetails.lastname}}</strong></div>\n            </div>\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>E-Mail:</div>\n                <div fxFlex><strong>{{this.userdetails.email}}</strong></div>\n            </div>\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Rolle:</div>\n                <div fxFlex><strong>{{this.userdetails.roles}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.dashboards.length>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\" >\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboards:</div>\n                <div fxFlex><strong>{{this.userdetails.dashboards}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.dashboard_admin.length>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboard Admin:</div>\n                <div fxFlex><strong>{{this.userdetails.dashboard_admin}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.wrong_logins>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Fehlerhafte Loginversuche seit der letzten Anmeldung:</div>\n                <div fxFlex><strong>{{this.userdetails.wrong_logins}}</strong></div>\n            </div>\n            <div class=\"add-margin\" style=\"max-width:400px;\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-around\" fxLayoutGap=\"1rem\">\n                <div class=\"add-margin\"><button mat-raised-button (click)=\"this.action='chpwd'\" color=\"primary\">Passwort ändern</button></div>\n                <div class=\"add-margin\"><button mat-raised-button (click)=\"this.action='deleteaccount'\" color=\"accent\">Account löschen</button></div>\n            </div>\n            <div fxLayout=\"column\" *ngIf=\"this.action=='chpwd'\" style=\"max-width: 450px;\">\n                <div ><h1>Passwort ändern</h1></div>\n                <div *ngIf=\"!this.pwdchange.ok\">\n                    \n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                          <mat-label>Aktuelles Passwort</mat-label>\n                          <input  type=\"password\"  [disabled]=\"this.pwdchange.progress\"  matInput value=\"\" [(ngModel)]=\"this.pwdrequest.oldpwd\">                          \n                        </mat-form-field>\n                      \n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                          <mat-label>Neues Passwort</mat-label>\n                          <input type=\"password\" [disabled]=\"this.pwdchange.progress\" matInput value=\"\" [(ngModel)]=\"this.pwdrequest.newpwd\">\n                          <mat-hint>Mindestlänge 10 Zeichen</mat-hint>\n                        </mat-form-field>\n                </div>\n                <div>\n                    <mat-hint *ngIf=\"this.pwdchange.progress\">ändere das Passwort...</mat-hint>\n                    <p  *ngIf=\"(this.pwdchange.done && !this.pwdchange.ok)\"><mat-icon style=\"color:red\">error</mat-icon> Fehler: Bitte prüfen Sie das aktuelle Passwort!</p>\n                                            <p *ngIf=\"(this.pwdchange.done && this.pwdchange.ok)\"><mat-icon style=\"color:green\">check_circle</mat-icon>Änderung erfolgreich, Sie bleiben eingeloggt.</p>\n                </div>\n                <div *ngIf=\"!this.pwdchange.ok\" class=\"add-margin\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div><button  mat-raised-button (click)=\"this.action=''\" color=\"primary\">Abbrechen</button></div>\n                    <div><button mat-raised-button [disabled]=\"this.pwdrequest.newpwd.length<10\" (click)=\"this.chpwd()\" color=\"accent\">Ändern</button></div>\n                </div>\n            </div>\n            <div *ngIf=\"this.action=='deleteaccount'\"  style=\"max-width: 450px;\">\n                <h1>Account löschen</h1>\n                <div>\n                    <p>Warnung: Diese Aktion kann nicht rückgängig gemacht werden</p>\n                    <p>Bitte geben Sie Ihr aktuelles Passwort zur Sicherheit ein:</p>\n                    <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                        <mat-label>Aktuelles Passwort</mat-label>\n                        <input  type=\"password\"  matInput value=\"\" [(ngModel)]=\"this.deleterequest.pwd\">                          \n                      </mat-form-field>\n                </div>\n                <div class=\"add-margin\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div><button mat-raised-button (click)=\"this.action=''\" color=\"primary\">Abbrechen</button></div>\n                    <div><button mat-raised-button (click)=\"this.deleteaccount()\" [disabled]=\"this.deleterequest.pwd.length<10\" color=\"primary\">Jetzt löschen</button></div>\n                </div>\n                <div *ngIf=\"this.deleteresult=='error'\">\n                    <p style=\"color:crimson\">Es ist ein Fehler aufgetreten, bitte prüfen Sie Ihr Passwort.</p>\n                </div>\n            </div>\n        </div>\n\n\n        \n    \n</div>\n<div class=\"container\" *ngIf=\"this.deleteresult=='success'\">\n    <h1>Ihr Account wurde gelöscht</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SmedAggregationService } from 'src/app/services/smed-aggregation.service';\nimport { CsvexportService } from 'src/app/services/csvexport.service';\nimport { DBService } from 'src/app/services/dbservice.service';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n\n\n  constructor(private db: DBService, private csv: CsvexportService, private api: ApiService, private auth: AuthService, private smed: SmedAggregationService) { }\n  metadata = [];\n  progress: boolean;\n  metadataok: boolean;\n  mapdata: any;\n  mapdatafor: string;\n  sortdata = [];\n  level: any;\n  levelvalues: any;\n  subgroups: any;\n  outcomes: any;\n  determinants: any;\n  levelsettings = {};\n  data: any;\n  datakeys: any;\n  currentuser: any;\n  data_rate: any;\n  data_number: any;\n  geojson_available: any;\n  colorsscheme: any;\n  levelid: string;\n  datakeystable: any;\n  debug=false;\n  // SMED\n  stats_ts: any = [];\n  symptoms_list: any;\n  symptoms_list_export: any;\n  summaryinfo = {};\n  smedrange = {};\n  zeitaumoptions = [\"Aktuelles Jahr\", \"Letztes Jahr\", \"Gesamt\", \"Detailliert\"];\n  ts_results = {};\n  utiltimes = {};\n  timetotreat :any;\n  decisions_ttt :any;\n  decisions_poc :any;\n  decisions_pocvsttt :any;\n\n  ngOnInit(): void {    \n    //console.log(\"USER\", this.auth.currentUserValue);\n    // uncomment for db debug\n    this.db.clean();\n    this.levelsettings = { \"level\": \"KV\", \"levelvalues\": \"Gesamt\", \"zeitraum\": \"Letztes Jahr\",'resolution':'weeks' };\n    this.summaryinfo[\"done\"] = false;\n    this.colorsscheme = this.api.makescale(5);\n    //console.log(\"Colors\",this.colorsscheme);\n    this.mapdatafor = \"\";\n    this.mapdata = [];\n    this.levelsettings = this.smed.updatestartstop(this.levelsettings);    \n    this.auth.currentUser.subscribe(data => { this.currentuser = data; });\n    window.scroll(0,0);\n    this.setlevel(\"__init\",\"\");\n    setTimeout(() => {\n      this.updatemetadata();\n    }, 1500);     \n    window.scroll(0,0);\n  }\n\n  ngOnDestroy() {\n    this.mapdata = [];\n\n  }\n\n\n  async setlevel(level, value) {    \n    if (level!==\"__init\"){\n      this.levelsettings[level] = value;\n      this.levelsettings = this.smed.updatestartstop(this.levelsettings);\n    };    \n    this.summaryinfo=[];\n    this.stats_ts=[];\n    this.utiltimes = {};\n    this.decisions_ttt = [];\n    this.decisions_poc  = [];\n    this.decisions_pocvsttt  = [];\n\n    this.timetotreat=NaN;\n    if (this.levelsettings['start'] && this.levelsettings['stop']){\n    this.progress = true;\n    // Initial Loading\n    //console.log(\"Init\");\n    await this.makesmeditems('stats'); \n    //console.log(\"update...\");\n    await this.querydatasmed('stats');    \n    //console.log(\"make...\");\n    await this.makesmeditems('mainsymptoms_ts');\n    //console.log(\"make...\");\n    await this.makesmeditems('timetotreat');\n    //console.log(\"make...\");\n    await this.makesmeditems('timestats');\n    //console.log(\"make...\");\n    await this.makesmeditems('decisions');\n    //console.log(\"make...\");\n    this.progress = false;\n    // Update (implement if-needed tbd.)\n    await this.querydatasmed('mainsymptoms_ts');\n    //console.log(\"update...\");\n    await this.querydatasmed('timetotreat');  \n    //console.log(\"update...\");\n    await this.querydatasmed('timestats');\n    //console.log(\"update...\");\n    await this.querydatasmed('decisions');     \n    //console.log(\"update...\");\n    }\n    // Show loading is over\n    this.progress = false;\n  }\n\n\n  updatemetadata() {\n    if (this.api.getmetadata(\"metadata\")) {\n      this.metadata = this.api.getmetadata(\"metadata\");\n      // Performance optimization - use only if needed\n      // this.sortdata = this.api.getmetadata(\"sortdata\");\n      // this.geojson_available = this.api.getmetadata(\"geodata\");\n    }\n    if (this.metadata) {\n      if (this.metadata.length > 0) {\n        this.dometasettings();\n        this.setlevel(\"__init\",\"\");\n      }\n    }\n    else {\n    setTimeout(() => {\n      if ((this.metadata !== undefined) && (this.sortdata !== undefined)) {\n        if (this.metadata.length > 0) {\n          this.dometasettings();\n          this.setlevel(\"__init\",\"\");\n        }\n      }\n      else {\n        this.metadataok = false;\n        this.progress = false;\n      }\n\n    }, 1500);};    \n    }\n\n  handleklick(plot, event) {\n  }\n\n  dometasettings() {\n    this.level = this.api.filterArray(this.metadata, \"type\", \"level\")[0][\"varname\"];\n    this.levelid = this.api.filterArray(this.metadata, \"type\", \"levelid\")[0]['varname'];\n    this.levelvalues = [\n      'Gesamt',\n      'Baden-Württemberg',\n      'Bayern',\n      'Berlin',\n      'Brandenburg',\n      'Bremen',\n      'Hamburg',\n      'Hessen',\n      'Mecklenburg-Vorpommern',\n      'Niedersachsen',\n      'Nordrhein-Westfalen',\n      'Rheinland-Pfalz',\n      'Saarland',\n      'Sachsen',\n      'Sachsen-Anhalt',\n      'Schleswig-Holstein',\n      'Thüringen'];\n    this.subgroups = [\"Keine\"].concat(this.api.getValues(this.api.filterArray(this.metadata, \"type\", \"group\"), \"varname\"));\n    //if (this.subgroups) { this.levelsettings[\"subgroups\"] = this.subgroups[0]; }\n    //this.outcomes = this.api.getValues(this.api.sortArray(this.api.filterArray(this.metadata, \"topic\", \"outcomes\"), \"varname\"), \"varname\");\n    //this.determinants = this.api.getValues(this.api.sortArray(this.api.filterArray(this.metadata, \"topic\", \"demography\"), \"varname\"), \"varname\");\n    //if (this.outcomes) { this.levelsettings[\"outcomes\"] = this.outcomes[0]; }\n    this.metadataok = true;    \n  }\n\n  async querydatasmed(thefield) {\n    let now:Date = new Date();    \n    // implement check for local data status here if ok -> do nothing \n    let stand = await this.db.getstand(thefield,\"KV\",this.levelsettings[\"levelvalues\"]);\n    //console.log(\"Stand testen:\",thefield,stand,this.levelsettings[\"start\"],this.levelsettings[\"stop\"]);\n    if (stand){\n    if (stand['startdate']<=this.levelsettings[\"start\"] && \n    stand['stopdate']>=this.levelsettings[\"stop\"]){\n      let oldstand:Date = new Date(stand['Stand']);\n      let dataage = Math.round((now.getTime()-oldstand.getTime())/(100*60*60))/10;\n      // console.log('data already in DB',dataage,\"hours old\");\n      if (dataage<=24){return [];};\n    };\n  };\n    // Proceed if data is not available or too old    \n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {}\n    };\n    query[\"groupinfo\"][\"level\"] = \"KV\"\n    query[\"groupinfo\"][\"levelid\"] = this.levelsettings[\"levelvalues\"];\n    query[\"groupinfo\"][\"Jahr\"] = {\n      \"$gte\": parseInt(this.levelsettings[\"start\"].slice(0, 4)),\n      \"$lte\": parseInt(this.levelsettings[\"stop\"].slice(0, 4))\n    };\n    query[\"showfields\"] = [thefield, 'KM6Versicherte', 'BEVSTAND'];\n        let dbdaterange;\n    this.db.querydatadates(thefield, 'KV',\n      this.levelsettings[\"levelvalues\"], this.levelsettings[\"start\"],\n      this.levelsettings[\"stop\"]).then(data => { dbdaterange = data });\n    if (dbdaterange) {\n      if ((dbdaterange['min'] > this.levelsettings[\"start\"] ||\n        dbdaterange['max'] < this.levelsettings[\"stop\"]) ||\n        isNaN(dbdaterange['max']) || isNaN(dbdaterange['min'])) {\n        this.api.postTypeRequestnotimeout('get_data/', query).subscribe(\n          data => {            \n            let res = data[\"data\"];\n            this.db.deletewhere(thefield, 'KV', this.levelsettings[\"levelvalues\"],\n            this.levelsettings[\"start\"].slice(0, 4), this.levelsettings[\"stop\"].slice(0, 4)).then(() => {\n              this.updatedb(res, thefield);\n              this.db.storestand(thefield,'KV', this.levelsettings[\"levelvalues\"],now.toISOString(),this.levelsettings[\"start\"],this.levelsettings[\"stop\"]);\n            });\n          },\n          error => {  });\n      }\n    }\n    else {\n      this.api.postTypeRequest('get_data/', query).subscribe(\n        data => {\n          let res = data[\"data\"];          \n          this.db.deletewhere(thefield, 'KV', this.levelsettings[\"levelvalues\"],\n            this.levelsettings[\"start\"].slice(0, 4), this.levelsettings[\"stop\"].slice(0, 4)).then(() => { \n              this.updatedb(res, thefield) });\n              this.db.storestand(thefield,'KV', this.levelsettings[\"levelvalues\"],now.toISOString(),this.levelsettings[\"start\"],this.levelsettings[\"stop\"]);\n        },\n        error => { this.progress = false; });\n    };\n    \n\n  }\n\n  async updatedb(data, thefield) {\n    await this.smed.newcombine(data, thefield); \n    this.makesmeditems(thefield);\n  }\n\n\n\n  exportascsv(name, data) {\n    this.csv.exportToCsv(name, data);\n    this.csv.exportToCsv(name + \"_settings.csv\", [this.levelsettings]);\n  }\n\n\n  async makesmeditems(thefield) { \n    //console.log(\"Start\",thefield,new Date());\n    this.levelsettings = this.smed.updatestartstop(this.levelsettings);\n    let startdate = this.levelsettings['startdate'];\n    let enddate = this.levelsettings['enddate'];\n\n    if (thefield == \"stats\") {      \n      this.stats_ts = [];\n      this.summaryinfo = [];\n      let statswdate = await this.db.listdata('stats', \"KV\", this.levelsettings['levelvalues'],this.levelsettings['start'],this.levelsettings['stop']);\n      if (statswdate.length>0){\n\n      for (let item of statswdate) {\n        item[\"Mittlere Dauer (Sek.)\"] = (item[\"DAUERsmed\"] / item[\"DAUERsmedFaelle\"]);\n        if (item[\"Dauer_sek\"] == 0) {\n          item[\"Mittlere Dauer (Sek.)\"] = null;\n        }\n        item[\"Mittlere Anzahl Beschwerden\"] = item[\"Anzahl_Beschwerden\"] / item[\"Assessments\"];\n        item[\"Mittlere Anzahl Fragen\"] = item[\"Anzahl_Fragen\"] / item[\"Assessments\"];        \n        if (item[\"Anzahl_Beschwerden\"] == 0) {\n          item[\"Mittlere Anzahl Beschwerden\"] = null;\n        }\n        item[\"Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments\"] / (item[\"BEVSTAND\"] / 1e5);\n        // item[\"ARE Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE\"] / (item[\"BEVSTAND\"] / 1e5);\n        // item[\"ARE Assessments (v2) pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE_v2\"] / (item[\"BEVSTAND\"] / 1e5);\n        item[\"ARE Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE_v3\"] / (item[\"BEVSTAND\"] / 1e5);\n      };\n      //console.log(\"Sample Stat Entry:\",statswdate[0]);\n      this.stats_ts = statswdate;\n      let theid = this.stats_ts[0]['levelid'];\n      if (theid != \"Gesamt\") { this.summaryinfo[\"levelid\"] = \" in \".concat(theid); }\n      else { this.summaryinfo[\"levelid\"] = \" in Deutschland\"; };\n      this.summaryinfo[\"Assessments Gesamt\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Assessments\"));\n      this.summaryinfo[\"Assessments pro Woche\"] = this.summaryinfo[\"Assessments Gesamt\"] / this.api.getValues(this.stats_ts, \"Assessments\").length;\n      this.summaryinfo[\"Mittlere Dauer\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"DAUERsmed\")) / this.api.sumArray(this.api.getValues(this.stats_ts, \"DAUERsmedFaelle\"));\n      this.summaryinfo[\"Anzahl Beschwerden\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Anzahl_Beschwerden\")) / this.summaryinfo[\"Assessments Gesamt\"];\n      this.summaryinfo[\"Anzahl Fragen\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Anzahl_Fragen\")) / this.summaryinfo[\"Assessments Gesamt\"];\n      let sorteddates = this.api.getValues(this.stats_ts, \"Datum\").sort();\n      this.summaryinfo[\"Beginn\"] =new Date(sorteddates[0]);\n      this.summaryinfo[\"Ende\"] = new Date(sorteddates.pop());\n      this.summaryinfo[\"done\"] = true;\n    }\n\n    };\n    \n\n    if (thefield == \"mainsymptoms_ts\") {\n      let symptoms_list = [];\n      symptoms_list = await this.db.listdata('mainsymptoms_ts', \"KV\", this.levelsettings['levelvalues'],this.levelsettings['start'],this.levelsettings['stop']);\n      //console.log(\"SYMPTOMS\",symptoms_list);\n      symptoms_list = this.api.getValues(symptoms_list,'data');      \n      this.symptoms_list_export = this.api.sortArray(this.api.groupbysum(symptoms_list,'Sympt','','n'),'n',\"descending\");\n      for (let item of this.symptoms_list_export) {\n        let anzahl_symptome = this.api.sumArray(this.api.getValues(this.symptoms_list_export, \"n\"));\n        item[\"Anteil\"] = Math.round(1000 * item['n'] / anzahl_symptome) / 10;\n      }\n      this.symptoms_list = this.symptoms_list_export.slice(0, 15);\n      \n    };\n\n    if (thefield == \"timestats\") {\n      let utiltimes = [];\n      let dbutiltimes = await this.db.listdata('timestats', \"KV\", this.levelsettings['levelvalues'],this.levelsettings['start'],this.levelsettings['stop'],false);\n      dbutiltimes = this.api.getValues(dbutiltimes,'data');\n      utiltimes = this.api.groupbysum(dbutiltimes, \"wt\", \"h\", \"n\");\n      let ntotal = this.api.sumArray(this.api.getValues(utiltimes,'n'));\n      dbutiltimes = [];\n      for (let item of utiltimes) {\n        item[\"Wochentag\"] = this.api.getweekdayname(item[\"wt\"]);\n        item['Anzahl']=item['n'];\n        item['Anteil']=0.1*Math.round(1000*item['n']/ntotal);\n        item['TimeLabel']=item['h']+\"-\"+(item['h']+2)+'h';\n        delete item['n'];\n      }\n      this.utiltimes = this.api.makeheatmapdata(utiltimes,\"wt\",\"h\",'Anteil','Wochentag','TimeLabel');\n      //console.log(\"Utiltimes:\",this.utiltimes)      \n    };\n\n    if (thefield == \"timetotreat\") {\n      let ttt = [];     \n      ttt = await this.db.listdata('timetotreat', \"KV\", this.levelsettings['levelvalues'],this.levelsettings['start'],this.levelsettings['stop']);\n      ttt = this.api.groupbysum(ttt,'TTTsmed_text','','Anzahl');\n      let total = this.api.sumArray(this.api.getValues(ttt,'Anzahl'));\n      for (let item of ttt){\n        item['Anteil']=Math.round(1000*item['Anzahl']/total)/10;        \n      }\n      this.timetotreat = ttt;  \n      //console.log(\"TTT\",ttt);\n                \n    }\n\n    if (thefield == \"decisions\") {\n      let decisions = [];     \n      decisions = await this.db.listdata('decisions', \"KV\", this.levelsettings['levelvalues'],this.levelsettings['start'],this.levelsettings['stop']);\n      //console.log(\"decicions\",decisions.slice(0,20));\n      let total = this.api.sumArray(this.api.getValues(decisions,'Anzahl'));\n      this.decisions_ttt=this.api.replacemissing(this.api.groupbysum(decisions,'TTTsmed_text',\"TTTdispo_text\",'Anzahl'),'TTTdispo_text',\"Keine Daten\");\n      this.decisions_poc=this.api.replacemissing(this.api.groupbysum(decisions,'POCsmed_text',\"POCdispo_text\",'Anzahl'),'POCdispo_text',\"Keine Daten\");;\n      this.decisions_pocvsttt=this.api.groupbysum(decisions,'TTTsmed_text',\"POCsmed_text\",'Anzahl');\n      //console.log(\"Decisions\",\"decisions_ttt\",this.decisions_ttt);\n      //console.log(\"Decisions\",\"decisions_poc\",this.decisions_poc);\n      //console.log(\"Decisions\",\"pocvsttt\",this.decisions_pocvsttt);\n                \n    }\n\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAllign=\"space-around\">\n    <div>\n        <p *ngIf=\"this.currentuser\" class=\"mat-caption right\">\n            Angemeldet als <span> {{this.currentuser.anrede?this.currentuser.anrede+\"\n                \"+this.currentuser.lastname:\"\" }}</span></p>\n        <div class=\"brandingpicture\" [ngClass]=\"{'smallheader': this.currentuser}\">\n            <h1>Ambulante Akut- und Notfälle in Deutschland</h1>\n            <p style=\"color:lightslategrey\" *ngIf=\"this.currentuser\">\n                Interner Testbetrieb<br>Informationen zu Problemen bitte per <strong><a style=\"color:white;\"href=\"mailto:smed@zi.de?subject=Zi SmED Dashboard\">E-Mail an smed@zi.de</a></strong>.\n            </p>\n        </div>\n        <p *ngIf=\"this.metadata.length==0 && !this.currentuser && !this.progress\">\n            Es sind aktuell keine öffentlichen Informationen auf diesem Portal verfügbar.\n        </p>\n    </div>\n\n    <div *ngIf=\"this.metadata.length>0 || this.currentuser\">\n        <ng-container *ngIf=\"(this.metadata.length>0) || this.summaryinfo\">\n            <h3 *ngIf=\"this.currentuser\">Bundesland</h3>\n            <p *ngIf=\"this.currentuser\">\n                <mat-chip-list *ngIf=\"this.currentuser\">\n                    <mat-chip (click)=\"this.setlevel('levelvalues',item);\" *ngFor=\"let item of this.levelvalues\"\n                        [selected]=\"(this.levelsettings['levelvalues']==item)\" color=\"primary\">\n                        {{item.replace('KV ','')}}\n                    </mat-chip>\n                </mat-chip-list>\n                <mat-chip-list *ngIf=\"!this.currentuser\">\n                    <mat-chip (click)=\"this.setlevel('levelvalues',item);\" *ngFor=\"let item of ['Gesamt']\"\n                        [selected]=\"(this.levelsettings['levelvalues']==item)\" color=\"primary\">\n                        {{item.replace('KV ','')}}\n                    </mat-chip>\n                </mat-chip-list>\n            </p>\n            <h3>Analysezeitraum</h3>\n            <p>\n                <mat-chip-list>\n                    <mat-chip (click)=\"this.setlevel('zeitraum',item);\" *ngFor=\"let item of this.zeitaumoptions\"\n                        [selected]=\"(this.levelsettings['zeitraum']==item)\" color=\"primary\">\n                        {{item}}\n                    </mat-chip>\n                </mat-chip-list>\n            </p>\n            <h3>Zeitliche Auflösung</h3>\n            <p>\n                <mat-chip-list>\n                    <mat-chip (click)=\"this.setlevel('resolution','weeks');\"\n                        [selected]=\"(this.levelsettings['resolution']=='weeks')\" color=\"primary\">\n                        Kalenderwochen\n                    </mat-chip>\n                    <mat-chip                     \n                     [disabled]=\"true\"\n                        [selected]=\"(this.levelsettings['resolution']=='months')\" color=\"primary\">\n                        Monate\n                    </mat-chip>\n                </mat-chip-list>\n            </p>\n            <p *ngIf=\"this.levelsettings['zeitraum']=='Detailliert'\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Analysezeitraum</mat-label>\n                    <mat-date-range-input [rangePicker]=\"picker\">\n                        <input matStartDate (dateChange)=\"this.setlevel('__init','');\"\n                        placeholder=\"Beginn\" [(ngModel)]=\"this.levelsettings['start_picker']\">\n                        <input matEndDate (dateChange)=\"this.setlevel('__init','');\"\n                        placeholder=\"Ende\" [(ngModel)]=\"this.levelsettings['stop_picker']\">\n                    </mat-date-range-input>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-date-range-picker #picker></mat-date-range-picker>\n                </mat-form-field>\n            </p>\n        </ng-container>\n    \n    <div *ngIf=\"this.progress &&  this.currentuser\">\n        <mat-spinner></mat-spinner>\n    </div>\n    <div *ngIf=\"!this.summaryinfo && !this.progress\">\n        <p>\n            Keine Daten verfügbar\n        </p>\n    </div>\n    <div *ngIf=\"this.summaryinfo['done']\" fxLayout=\"row wrap\">\n        <div class=\"lightgreycolor mat-caption\" fxFlex=100>\n\n            <p><strong>Ersteinschätzung am Telefon</strong></p>\n            <p> Auswertung der Ergebnisse der strukturierten Ersteinschätzung im Rahmen von Anrufen bei der 116 117. Die\n                Software SmED wird aktuell noch nicht in allen KVen eingesetzt. Dadurch liegen nicht für alle KVen\n                entsprechende Auswertungen vor. <span *ngIf=\"this.summaryinfo\">Die Daten für vollständige Kalenderwochen beginnend mit der Woche vom {{this.summaryinfo[\"Beginn\"] | date}} bis zur Woche beginnend am {{this.summaryinfo[\"Ende\"] | date}}.</span></p>\n\n        </div>\n        <div fxFlex=100 *ngIf=\"this.summaryinfo['Assessments Gesamt']\">\n            <mat-card>\n                <div fxLayout=\"row wrap\">\n                    <div fxFlex fxHide.lt-md=\"true\">\n                        <app-box [value]=\"this.summaryinfo['Assessments Gesamt']\" [numberformat]=\"'1.0-0'\"\n                            [maincolor]=\"this.colorsscheme[4].concat('80')\"\n                            [description]=\"'Assessments'.concat(this.summaryinfo['levelid'])\"></app-box>\n                    </div>\n                    <div fxFlex=50 fxHide=\"true\" fxShow.lt-md=\"true\">\n                        <app-box [value]=\"this.summaryinfo['Assessments Gesamt']/1000000\" \n                        [textbehind]=\"true\" title=\"Mio.\"\n                        [numberformat]=\"'1.2-2'\"\n                            [maincolor]=\"this.colorsscheme[4].concat('80')\"\n                            [description]=\"'Assessments'.concat(this.summaryinfo['levelid'])\"></app-box>\n                    </div>\n                    <div fxFlex fxFlex.lt-md=50>\n                        <app-box [textbehind]=\"true\" title=\"Sek.\" [numberformat]=\"'1.1-1'\"\n                            [maincolor]=\"this.colorsscheme[3].concat('80')\" [value]=\"this.summaryinfo['Mittlere Dauer']\"\n                            description=\"Dauer\"></app-box>\n                    </div>\n                    <div fxFlex>\n                        <app-box [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\n                            [maincolor]=\"this.colorsscheme[2].concat('80')\"\n                            [value]=\"this.summaryinfo['Anzahl Beschwerden']\" description=\"Beschwerden pro Assessment\">\n                        </app-box>\n                    </div>\n                    <div fxFlex fxFlex.lt-md=50 *ngIf=\"this.currentuser\">                        \n                        <app-box [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\n                            [maincolor]=\"this.colorsscheme[1].concat('80')\" [value]=\"this.summaryinfo['Anzahl Fragen']\"\n                            description=\"Fragen pro Assessment\">\n                        </app-box>\n                    </div>\n                </div>\n            </mat-card>\n\n        </div>\n        <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n            <mat-card>\n                <h3>Assessments pro 100.000 Einwohner</h3>\n                <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\"\n                    [outcomes]=\"['Assessments pro 100 Tsd. Einw.',\n                    'ARE Assessments pro 100 Tsd. Einw.'\n                    ]\" \n                    [sortx]=\"true\" [fontcolor]=\"'white'\" \n                    plottype=\"tsline\"></app-plot>\n                <div>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>ARE Assessments: Assessments mit typischen Symptomen von Akuten Respiratorischen Erkrankungen (ARE). \n                                Berücksichtigt wurden Atembeschwerden, Covid 19, Erkältung/Grippaler Infekt, Fieber, Hals-/Rachenschmerzen, Husten, \n                                Kopfschmerzen, Ohrenschmerzen und Schluckbeschwerden (Liste ist aktuell noch in Entwicklung, Änderungen sind möglich).</p>\n                        </div>\n                    </mat-expansion-panel>\n                </div>\n\n            </mat-card>\n        </div>\n        <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n            <mat-card>\n                <h3>Mittlere Dauer pro Assessment</h3>\n                <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n                    [colorscheme]=\"['rgb(183,205,0)']\" [sortx]=\"true\" [outcomes]=\"['Mittlere Dauer (Sek.)']\"\n                    plottype=\"tsline\"></app-plot>\n                <div>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                        <mat-panel-description>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                        </div>\n                        </mat-panel-description>\n                    </mat-expansion-panel>\n                </div>\n            </mat-card>\n        </div>\n        <div fxFlex fxFlex.lt-md=100 *ngIf=\"this.stats_ts && this.currentuser\">\n            <mat-card>\n                <h3>Anzahl Fragen pro Assessment <mat-icon class=\"backgroundicon\">lock_open</mat-icon> </h3>\n                <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n                    [colorscheme]=\"[this.colorsscheme[2]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Anzahl Fragen']\"\n                    plottype=\"tsline\"></app-plot>\n                <div>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                        <mat-panel-description>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                        </div>\n                    </mat-panel-description>\n                    </mat-expansion-panel>\n                </div>\n            </mat-card>\n        </div>\n        <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n            <mat-card>\n                <h3>Beschwerden pro Assessment</h3>\n                <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n                    [colorscheme]=\"['orange']\" [sortx]=\"true\" [outcomes]=\"['Mittlere Anzahl Beschwerden']\"\n                    plottype=\"tsline\"></app-plot>\n                <div>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                        <mat-panel-description>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                        </div>\n                        </mat-panel-description>\n                    </mat-expansion-panel>\n                </div>\n            </mat-card>\n        </div>\n        <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.utiltimes['z']\">\n            <ng-container *ngIf=\"this.utiltimes['z'].length>0\">\n                <mat-card>\n                    <h3>Aufkommen nach Tag und Uhrzeit in Prozent</h3>\n                    <app-plot [(data)]=\"this.utiltimes\" [fontcolor]=\"'white'\" \n                    plottype=\"heatmap\">\n                    </app-plot>\n                    <div>\n                        <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                            (closed)=\"panelOpenState = false\">\n                            <mat-expansion-panel-header>\n                                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                            </mat-expansion-panel-header>\n                            <mat-panel-description>\n                            <div class=\"mat-caption\">\n                                <p *ngIf=\"this.currentuser\">\n                                    <a (click)=\"this.exportascsv('zeiten.csv',this.utiltimes)\">\n                                        <mat-icon inline=true>file_download</mat-icon>\n                                        Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                    </a>\n                                </p>\n                                <h3> Weitere Informationen zum Indikator</h3>\n                                <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                            </div>\n                        </mat-panel-description>\n                        </mat-expansion-panel>\n                    </div>\n                </mat-card>\n            </ng-container>\n        </div>\n\n\n        <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.timetotreat\">\n            <mat-card *ngIf=\"this.timetotreat.length>0\">\n                <h3>Empfehlungen zur Dringlichkeit der Behandlung in Prozent</h3>\n                <app-plot [(data)]=\"this.timetotreat\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\"\n                    [showlegend]=\"false\" [outcomes]=\"['Anteil']\" [custommargins]=\"{ l: 50, r: 0, b: 0, t: 0 }\"\n                    plottype=\"hbar\" [colorscheme]=\"[this.colorsscheme[0]]\">\n                </app-plot>\n                <div>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                    <mat-panel-description>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('empfehlung.csv',this.timetotreat)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                        </div>\n                    </mat-panel-description>\n                    </mat-expansion-panel>\n                </div>\n            </mat-card>\n        </div>\n\n        <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.currentuser && this.decisions_pocvsttt\">\n            <mat-card  *ngIf=\"this.decisions_pocvsttt.length>0\">\n                <h3>Empfehlung Behandlungsort nach Dringlichkeit <mat-icon class=\"backgroundicon\">lock_open</mat-icon> </h3>\n                <div >\n                    <app-plot [(data)]=\"this.decisions_pocvsttt\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\"\n                    [showlegend]=\"false\" [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\"\n                    plottype=\"stackedbar\" [colorby]=\"'POCsmed_text'\">\n                </app-plot>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                    <mat-panel-description>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('timetotreat.csv',this.timetotreat)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                        </div>\n                    </mat-panel-description>\n                    </mat-expansion-panel>\n                </div>\n            </mat-card>\n        </div>\n\n        <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.currentuser && this.decisions_ttt\">\n            <mat-card  *ngIf=\"this.decisions_ttt.length>0\">\n                <h3>Abgleich Empfehlung vs. Entscheidung Dringlichkeit<mat-icon class=\"backgroundicon\">lock_open</mat-icon> </h3>\n                <div>\n                    <app-plot [(data)]=\"this.decisions_ttt\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\"\n                    [showlegend]=\"true\" [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\"\n                    plottype=\"stackedbar\" [colorby]=\"'TTTdispo_text'\"\n                    >\n                </app-plot>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                    <mat-panel-description>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('decisions_ttt.csv',this.decisions_ttt)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                        </div>\n                    </mat-panel-description>\n                    </mat-expansion-panel>\n                </div>\n            </mat-card>\n        </div>\n\n        <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.decisions_poc && this.currentuser\">\n            <mat-card  *ngIf=\"this.decisions_poc.length>0\">\n                <h3>Abgleich Empfehlung vs. Entscheidung Behandlungsort <mat-icon class=\"backgroundicon\">lock_open</mat-icon></h3>\n                <div>\n                    <app-plot [(data)]=\"this.decisions_poc\" [xvalue]=\"'POCsmed_text'\" [fontcolor]=\"'white'\"\n                    [showlegend]=\"true\" [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\"\n                    plottype=\"stackedbar\" [colorby]=\"'POCdispo_text'\"                    \n                    >\n                </app-plot>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                    <mat-panel-description>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('decisions_poc.csv',this.decisions_poc)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                        </div>\n                    </mat-panel-description>\n                    </mat-expansion-panel>\n                </div>\n            </mat-card>\n        </div>\n\n\n\n        <div fxFlex fxFlex.lt-md=100 *ngIf=\"this.symptoms_list\">\n            <mat-card *ngIf=\"this.symptoms_list.length>0\">\n                <h3>Häufigste Beschwerden nach Anteil</h3>\n                <app-plot [(data)]=\"this.symptoms_list\" [xvalue]=\"'Sympt'\" [percent]=\"true\" [fontcolor]=\"'white'\"\n                    (clicked)=\"handleklick('Beschwerden',$event);\" [outcomes]=\"['Anteil']\" [sort]=\"true\"\n                    plottype=\"hbar\" ></app-plot>\n                <div>\n                    <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                        (closed)=\"panelOpenState = false\">\n                        <mat-expansion-panel-header>\n                            <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                        </mat-expansion-panel-header>\n                    <mat-panel-description>\n                        <div class=\"mat-caption\">\n                            <p *ngIf=\"this.currentuser\">\n                                <a (click)=\"this.exportascsv('symptome.csv',this.symptoms_list_export)\">\n                                    <mat-icon inline=true>file_download</mat-icon>\n                                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                                </a>\n                            </p>\n                            <h3> Weitere Informationen zum Indikator</h3>\n                            <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                        </div>\n                    </mat-panel-description>\n                    </mat-expansion-panel>\n                </div>\n            </mat-card>\n        </div>       \n\n    </div>\n\n</div>\n</div>","import { Injectable } from '@angular/core'; \nimport { HttpClient, HttpHeaders , HttpParams } from '@angular/common/http'; \nimport { map } from 'rxjs/operators'; \nimport { retry,timeout } from 'rxjs/operators';\nimport * as chroma from \"chroma-js\";\n\n@Injectable({ \n  providedIn: 'root' \n}) \nexport class ApiService { \n \n \n  public REST_API_SERVER = \"https://dashboardapi.ziapp.de/\";//\"https://zidashboardapi.azurewebsites.net/\" ;//\"http://127.0.0.1:8000/\"; \"https://dashboardapi.ziapp.de/\";\n  public REST_API_SERVER_CLIENTID = \"smed_reporting\"; \n  public primarycolor = \"#2196f3\"; // \"#e91e63\";\n  public accentcolor = \"#e3714e1\";\n  public warncolor = \"#e1149b\";\n  \n  constructor(private httpClient: HttpClient) { } \n \n  public  getTypeRequest(url) { \n    return this.httpClient.get(this.REST_API_SERVER+url).pipe(map(res => { \n      return res; \n    })).pipe(timeout(3500),/*retry(5)*/); \n  } \n \n  public  postTypeRequest(url, payload) { \n    return this.httpClient.post(this.REST_API_SERVER+url, payload).pipe(map(res => { \n      return res; \n    })).pipe(/*timeout(15000),*/retry(1)); ; \n  } \n\n  public  getTypeRequestnotimeout(url) { \n    return this.httpClient.get(this.REST_API_SERVER+url).pipe(map(res => { \n      return res; \n    })).pipe(retry(1)); \n  } \n \n  public  postTypeRequestnotimeout(url, payload) { \n    return this.httpClient.post(this.REST_API_SERVER+url, payload).pipe(map(res => { \n      return res; \n    })).pipe(retry(1)); ; \n  } \n  \n  \n// Specific Requests\n\npublic updateuser(user,setting,value){\n  let payload = {'email' : user,'key':setting,'value':value};\n  return this.postTypeRequest('userstatus', payload);\n}\n\npublic deleteuser(user,password=\"\"){\n  let payload = {\"email\":user};\n  if (password!=\"\"){payload[\"password\"]=password};\n  return this.postTypeRequest('deleteuser', payload);\n}\n\npublic changeuserpwd(user,newpwd,oldpwd=\"\"){\n  let payload = {\"newpassword\":newpwd,email:user};\n  if (oldpwd!=\"\"){\n    payload[\"oldpassword\"]=oldpwd;\n  }\n  return this.postTypeRequest('changepwd', payload);\n}\n\ncountView(url){\n  // Privacy preserving Webcounter, see Documentation here https://github.com/zidatalab/ziwebcounter\n  this.httpClient.get('https://analytics.ziapp.de/view/ambulante_notfaelle/data?pageid='+url+'&cookiedissent='+true, {withCredentials:false}).subscribe();\n}\n\n// Data APIs\npublic getValues(array, key) {\n  let values = [];\n  for (let item of array){\n    values.push(item[key]);\n  }\n  return values;\n}\npublic  getKeys(array){\n return Object.keys(array[0]);\n}\n\nobjectkeystocolumns(array,objectname){\n  for (let item of array){\n    let theobject = item[objectname];\n    for (let key of Object.keys(theobject)){\n      item[key]=theobject[key];      \n    }\n    theobject[objectname]=NaN;\n    delete theobject[objectname];\n  }\n  return array;\n}\n\npublic  getOptions(array, key){\n return array.map(item => item[key])\n .filter((value, index, self) => self.indexOf(value) === index)\n}\n\npublic  filterArray(array,key,value){\n let i =0\n let result = []\n if (!Array.isArray(array)){\n   return result;\n }\n for (let item of array){\n   if (item[key]==value){result.push(item)};\n   i = i+1\n }\n return result\n}\n\npublic  filterNAArray(array,key){\n  let i =0\n  let result = []\n  for (let item of array){\n    if (item[key] && (item[key]!==null) && (!isNaN(item[key]))){\n      result.push(item)};\n    i = i+1\n  }\n  return result\n }\n \n public  filterNA(array){\n  let result = []\n  for (let item of array){\n    if (!isNaN(item)){\n      result.push(item)};  \n  }\n  return result\n }\n\npublic  filterArraybyList(array,key,list){\n  let i =0\n  let result = []\n  for (let item of array){\n    if (list.indexOf(item[key])>=0){result.push(item)};\n    i = i+1\n  }\n  return result\n }\n\npublic  getmetadata(name){\n  return JSON.parse(localStorage.getItem(name));\n}\n  \npublic sortArray(array, key, order = \"ascending\") {\n  let result = array;\n  if (order == \"ascending\") {\n    return result.sort((a, b) => (a[key] < b[key] ? -1 : 1));\n  }\n  else {\n    return result.sort((a, b) => (a[key] > b[key] ? -1 : 1));\n  }\n\n\n\n}\n\npublic sumArray(array) {\n  var total = 0;\n  for (var obj of array) {\n    if (parseFloat(obj)){total += +obj;}\n    };\n\n  return total;\n}\n\npublic getuniqueValues(array, key) {\n  let items = this.getValues(array, key);\n  return [...new Set(items)];\n}\n\n\npublic groupbysum(array,key1,key2=\"\",outcome){\n  let result = [];\n  let valueskey1= this.getuniqueValues(array,key1);\n  let valueskey2= [];\n  if (key2!=\"\"){\n    valueskey2= this.getuniqueValues(array,key2);\n  }\n\n  for (let value of valueskey1){\n    let keyvalues = this.filterArray(array,key1,value);\n\n    if (key2==\"\"){\n      let topush = {};\n      topush[key1]=value;      \n      topush[outcome]=this.sumArray(this.getValues(keyvalues,outcome));\n      result.push(topush);\n    }\n    if (key2!==\"\"){\n      for (let k2value of valueskey2){\n        let topush = {};\n        topush[key1]=value;      \n        topush[key2]=k2value;      \n        topush[outcome]=this.sumArray(this.getValues(this.filterArray(keyvalues,key2,k2value),outcome));\n        result.push(topush);\n      }\n      \n    };\n  }\n  return result;\n}\n\npublic getweekdayname(dayofweek,mongo=false){\n  let days = [\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\",\"Sonntag\"];\n  if (mongo){\n    days = [\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"];\n  }\n  return days[dayofweek-1];\n}\n\npublic splitarraybykey(array,splitkey){\n  let res = []\n  let splitvalues = this.getuniqueValues(array,splitkey);\n  for (let value of splitvalues){\n    res.push(this.filterArray(array,splitkey,value));\n  }\n  return res = [];\n}\n\npublic makescale(bins=5){\n  return chroma.scale([chroma(this.primarycolor).set('hsl.h', +70),this.primarycolor]).colors(bins); \n};\n\npublic stringwrap(string,maxlength=30){\n    let newstring = \"\";\n    let wordsarray = string.split(\" \");\n    let fulllength = string.length\n    let linelength = 0\n    for (let word of wordsarray){\n      let wordlen = word.length;\n      if ((linelength+wordlen)<maxlength){\n        newstring = newstring + \" \" + word;\n        linelength = linelength+wordlen;\n      }\n      else {\n        newstring = newstring + \"<br>\" + word;\n        linelength = wordlen;\n      };    \n    }\n    return newstring;\n};\n\npublic makeheatmapdata(array,xname,yname,valuename,xlabel=\"\",ylabel=\"\"){\n    let res = {};\n    res['x']=this.getuniqueValues(array,xname).sort(function(a, b){return a-b});\n    res['y']=this.getuniqueValues(array,yname).sort(function(a, b){return a-b});\n    res['z']=[];\n    for (let yitem of res['y']){\n      let topush=[];\n      for (let xitem of res['x']){\n        try {\n          topush.push(this.filterArray(this.filterArray(array,xname,xitem),yname,yitem)[0][valuename]);\n        }\n        catch {\n          topush.push(NaN);\n        };\n      }\n      res['z'].push(topush);    \n    }\n    if (xlabel!=\"\"){\n      let xlab=[];\n      for (let item of res['x']){\n        try {xlab.push(this.filterArray(array,xname,item)[0][xlabel])}\n        catch{xlab.push(\"\")};       \n      }\n      res['x']=xlab;\n    };\n    if (ylabel!=\"\"){\n      let ylab=[];\n      for (let item of res['y']){\n        try {ylab.push(this.filterArray(array,yname,item)[0][ylabel])}\n        catch{ylab.push(\"\")};       \n      }\n      res['y']=ylab;\n    };\n \n    return res;\n};\n\npublic replacemissing(array,key,replacement=\"Fehlend\"){\n  for (let item of array){\n    if (!item[key]){\n      item[key]=replacement;\n    }\n  }\n  return array;\n}\n\npublic arrayintersect(a, b) {\n  var setA = new Set(a);\n  var setB = new Set(b);\n  var intersection = new Set([...setA].filter(x => setB.has(x)));\n  return Array.from(intersection);\n}\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\nconstructor(\n    private _authService: AuthService,\n    private _router: Router\n  ) { }\n\n\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    if (userdata) {\n      result = true;\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n  canActivateAdmin(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    if (userdata){\n    if (userdata[\"is_admin\"] || userdata[\"is_superadmin\"]) {\n      result = true;\n    }\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n}","import { Injectable } from '@angular/core'; \nimport { ApiService } from './api.service';\nimport {HttpClient, HttpParams , HttpHeaders} from '@angular/common/http';  \nimport { Router } from '@angular/router'; \nimport { BehaviorSubject, Observable, Observer, fromEvent, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ \n    providedIn: 'root' \n}) \n\n  \nexport class AuthService { \n    private currentUserSubject: BehaviorSubject<any>;\n    public currentUser: Observable<any>;\n\n    constructor(\n        private http:HttpClient,\n        private _api:ApiService,\n        private router:Router) { \n            this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('userInfo')));\n            this.currentUser = this.currentUserSubject.asObservable();    \n    } \n\n    public get currentUserValue(): any {\n        return this.currentUserSubject.value;\n      }\n\n    OnlineStatus() {\n        return merge<boolean>(\n          fromEvent(window, 'offline').pipe(map(() => false)),\n          fromEvent(window, 'online').pipe(map(() => true)),\n          new Observable((sub: Observer<boolean>) => {\n            sub.next(navigator.onLine);\n            sub.complete();\n          }));\n      }\n    \n    login(formdata){ \n        let b = formdata;\n        const payload = new HttpParams()\n          .set('username', b.username)\n          .set('password', b.password)\n          .set('client_id', this._api.REST_API_SERVER_CLIENTID);\n          return this._api.postTypeRequestnotimeout('login', payload).pipe(map(user => {\n            return this.logintasks(user);\n                  }));\n      }\n \n    logintasks(user){\n        this.setDataInLocalStorage('refresh_token', user.refresh_token);\n        this.setDataInLocalStorage('access_token', user.access_token);\n        this.storeUserDetails(user.user);\n        this.currentUserSubject.next(user.user);\n        return user;\n    }\n    \n    adduser(data){\n        return this._api.postTypeRequest('newuser', data); \n    }\n    \n    refreshToken(){\n        return this.http.post(this._api.REST_API_SERVER+'login/refresh/',{refresh:true}).subscribe(\n            data=>{\n                let result :any = data;\n                this.setDataInLocalStorage('access_token',result.access_token);\n\n            },\n            error => {}\n        )\n    }\n\n    storeUserDetails(data) { \n        return localStorage.setItem('userInfo', JSON.stringify(data));\n    } \n\n    public getUserDetails() { \n        return localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : false; \n    } \n     \n    setDataInLocalStorage(variableName, data) { \n        localStorage.setItem(variableName, data); \n    } \n \n    public getToken() { \n        return localStorage.getItem('access_token'); \n    } \n\n    public getRefreshToken() { \n        return localStorage.getItem('refresh_token'); \n    } \n \n    public logout(){\n        localStorage.clear(); \n        this.currentUserSubject.next(null);        \n    } \n\n    public updateUserData(){\n        return this._api.getTypeRequest('users/profile/')\n    }\n    \n\n    public gettokeninfo() {\n        let token = this.getToken();\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    return JSON.parse(jsonPayload);\n    };\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvexportService {\n\n  public exportToCsv(filename: string, rows: object[]) {\n    if (!rows ) {\n      return;\n    }\n    if (rows && !rows.length ) {\n      rows=[rows];\n    }\n    const separator = ',';\n    const keys = Object.keys(rows[0]);\n    const csvContent =\n      keys.join(separator) +\n      '\\n' +\n      rows.map(row => {\n        return keys.map(k => {\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\n          cell = cell instanceof Date\n            ? cell.toLocaleString()\n            : cell.toString().replace(/\"/g, '\"\"');\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\n            cell = `\"${cell}\"`;\n          }\n          return cell;\n        }).join(separator);\n      }).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      if (link.download !== undefined) {\n        // Browsers that support HTML5 download attribute\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', filename);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      \n    }\n  }\n}","import Dexie, { Table } from 'dexie';\n\nexport class DataItem {\n  level: string;\n  levelid: string;\n  Jahr: number;\n  Monat: number;\n  KW: number;\n  Datum:string;\n  Indicator:string;\n  data:any;\n}\n\nexport class StandItem {\n  level: string;\n  levelid: string;\n  Stand:string;\n  Indicator:string;\n  startdate:string;\n  stopdate:string;\n}\n\nexport class AppDB extends Dexie {\n  public datadb: Table<DataItem, number>;\n  public standdb: Table<StandItem, number>;\n\n  constructor() { \n    super('smeddb');\n    var db = this;\n    db.on(\"versionchange\", function (event) {\n      db.delete();\n      db.open();\n    });\n    db.version(4).stores({\n      datadb: 'id++,[level+levelid+Indicator+Datum],[level+levelid+Indicator]',\n      standdb: 'id++,[level+levelid+Indicator]',\n    }); \n    db.datadb.mapToClass(DataItem); \n    db.standdb.mapToClass(StandItem); \n  }\n\n  \n\n\n}\n\nexport var db = new AppDB();","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport {db, StandItem} from './db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DBService {\n\n  constructor(private api:ApiService) { }\n\n  async storestand(Indicator,level,levelid,Stand,mindate,maxdate){\n    //console.log(\"Stand speichern!\");\n    await db.standdb\n          .where('[level+levelid+Indicator]')\n          .equals([level,levelid,Indicator])\n          .delete();\n    db.standdb.put({\n              'level':level,\n              'levelid':levelid,\n              'Stand':Stand,\n              'Indicator':Indicator,\n              'startdate':mindate,\n              'stopdate':maxdate\n            });    \n        };   \n\ngetstand(Indicator,level,levelid){\n    return db.standdb\n    .where('[level+levelid+Indicator]')\n    .equals([level,levelid,Indicator]).first();\n\n  }\n\n  \n\n\n  listdata(Indicator,level, levelid, start=\"\",stop=\"\",expand=true) {\n    let tosearch = {\n      Indicator: Indicator,\n      level: level,\n      levelid:levelid\n    }\n    // Can be implemented later to restrict results\n    if (start!==\"\" && stop!==\"\" && expand==true){\n      return db.datadb\n      .where('[level+levelid+Indicator+Datum]')\n      .between([level,levelid,Indicator,start],[level,levelid,Indicator,stop])\n      .toArray()\n      .then(data => this.api.objectkeystocolumns(data,'data'));\n    }\n    if (expand==true) {\n    return db.datadb\n      .where('[level+levelid+Indicator]').equals([level,levelid,Indicator]).toArray().then(data => this.api.objectkeystocolumns(data,'data'));\n    }\n    if (expand==false) {\n      return db.datadb\n        .where('[level+levelid+Indicator]').equals([level,levelid,Indicator]).toArray();\n      };\n  }\n\n  async querydatadates(Indicator,level, levelid, start=\"\",stop=\"\") {\n    let count = await db.datadb.where('[level+levelid+Indicator+Datum]')\n    .between([level,levelid,Indicator,start],[level,levelid,Indicator,stop]).count();\n    if (count>0){\n    let tosearch = {\n      Indicator: Indicator,\n      level: level,\n      levelid:levelid\n    }\n    let dbpointer=[];\n    let res = {};\n    if (start!==\"\" && stop!==\"\"){\n      db.datadb.where('[level+levelid+Indicator+Datum]')\n      .between([level,levelid,Indicator,start],[level,levelid,Indicator,stop])\n      .sortBy('Datum').then(data => {\n        dbpointer=data;\n        if (dbpointer && (dbpointer.length>1)){\n        return {'min':dbpointer[0],'max':dbpointer[dbpointer.length-1]['Datum']}}\n        else {\n          return {'min':NaN,'max':NaN}\n        };\n      });\n      } \n    else \n    { \n      db.datadb.where('[level+levelid+Indicator]')\n      .equals([level,levelid,Indicator])\n      .sortBy('Datum').then(data => {\n        dbpointer=data;\n        if (dbpointer.length>1){          \n          return {'min':dbpointer[0],'max':dbpointer[dbpointer.length-1]['Datum']}}\n          else {\n            return {'min':NaN,'max':NaN}\n          };\n      });\n    };}\n    else {\n      return {'min':NaN,'max':NaN};\n    }\n    \n  }\n\n  deletewhere(Indicator,level, levelid, startjahr=\"\",stopjahr=\"\") {\n    let tosearch = {\n      Indicator: Indicator,\n      level: level,\n      levelid:levelid\n    }\n    // Can be implemented later to restrict results\n    if (startjahr==\"\" && stopjahr!==\"\"){\n      db.datadb\n      .where('[level+levelid+Indicator+Jahr]').between([level,levelid,Indicator,startjahr],[level,levelid,Indicator,stopjahr]).delete();\n    };\n    return db.datadb\n      .where('[level+levelid+Indicator]').equals([level,levelid,Indicator]).delete();\n  }\n\n  adddatabulk(array) {\n    return db.datadb.bulkPut(array);\n  };\n\n  async adddata({level, levelid,Jahr,Monat,KW,Datum,Indicator,data,KM6Versicherte,BEVSTAND}) {\n    return await db.datadb\n      .put({\n        Indicator: Indicator,\n        level: level,\n        levelid:levelid,\n        Jahr:Jahr,\n        Monat:Monat,\n        KW:KW  ,\n        Datum:Datum,\n        data:data});\n  };\n\n  clean(){\n    db.delete();\n    db.open();\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { ApiService } from './api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService {\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(\n    private router: Router,\n    private _auth: AuthService,\n    private _api: ApiService\n  ) {\n  }\n  apiurl = this._api.REST_API_SERVER;\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (request.url.includes(this.apiurl) && !request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getToken()}`\n        }\n\n      });\n    }\n    if (request.url.includes(this.apiurl) && request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getRefreshToken()}`\n        }\n\n      });\n    }\n\n\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n\n        // Refresh if token has expired and Userdetails not null\n        if (request.url.includes(this.apiurl) && (this._auth.getUserDetails()[\"username\"].length>0) &&\n          error.status == 401) {\n          this._auth.refreshToken();\n        }\n\n        // Logout on Refresh error\n        if (request.url.includes(this.apiurl) &&  request.url.includes(\"login/refresh\") && error.status == 422) {\n          this.refreshTokenInProgress = false;\n          this._auth.logout();\n          this.router.navigate([\"/\"]);\n        }\n        else {\n          this.refreshTokenInProgress = false;\n        };\n\n        return throwError(error);\n      }\n\n      ))\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'replace'})\nexport class ReplacePipe implements PipeTransform {\n  transform(value: string, strToReplace: string, replacementStr: string): string {\n\n    if(!value || ! strToReplace || ! replacementStr)\n    {\n      return value;\n    }\n\n return value.replace(new RegExp(strToReplace, 'g'), replacementStr);\n  }\n}","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { DBService } from 'src/app/services/dbservice.service';\nimport { DataItem } from 'src/app/services/db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmedAggregationService {\n\n  constructor(private db: DBService, private api:ApiService) { }\n\n// Query Methods\n\n\n\nasync newcombine(array,fieldname){\n  let newarray = [];\n  let dbarray=[];\n  if (array.length==0){return []};\n  for (let item of array){\n    if (!item[fieldname]){return [];}\n    else {\n    for (let fielditem of item[fieldname]){\n      let topush = new DataItem;\n      topush['level']=item['level'];\n      topush['levelid']=item['levelid'];\n      topush['Jahr']=item['Jahr'];\n      topush['Monat']=item['Monat'];\n      topush['KM6Versicherte']=item['KM6Versicherte'];\n      topush['BEVSTAND']=item['KM6Versicherte'];\n      topush['KW']=fielditem['KW'];\n      if (topush['KW']>0 && topush['Jahr']>0){\n        topush['Datum']=this.getDateOfISOWeek(topush['KW'],topush['Jahr']).toISOString().slice(0,10);\n      }      \n      delete fielditem['KW'];\n      topush['data']=fielditem;\n      newarray.push(topush); \n      topush['Indicator']=fieldname;\n      dbarray.push(topush);    \n    }\n  };\n  }  \n  await this.db.adddatabulk(dbarray);    \n}\n\nquerysmedts(groupvars=[],outcome=\"\",levelsettings,sort=false,topx:any=false,filtervar=\"\",filtervalues=[],topxvar=\"\"){\n  if (levelsettings[\"zeitraum\"]!==\"Gesamt\") {    \n  let query = {\n    \"startdate\": levelsettings['start'].toISOString().slice(0,10),\n    \"stopdate\": levelsettings['end'].toISOString().slice(0,10),\n    \"subgroups\": groupvars    ,\n    \"filterlist\": []\n  }\n  query[\"filterlist\"].push({\"level\":\"KV\"});\n  if (levelsettings[\"levelvalues\"]!==\"Gesamt\"){\n    query[\"filterlist\"].push({\"levelid\":levelsettings[\"levelvalues\"]});\n  }\n  if (outcome!=\"\"){\n    query[\"outcome\"]=outcome;\n  }\n  let tofilter = false;\n  if (filtervar!==\"\" && filtervalues.length>0){tofilter=true};    \n  return this.api.postTypeRequest('analytics/timeseries/', query).subscribe(\n    data => {\n      let res = data[\"result\"];\n      if (sort){\n        res = this.api.sortArray(res,\"count\",\"descending\");\n      }\n      if (topx && topxvar==''){\n        res = res.slice(0,topx);\n      }\n      if (tofilter){\n        res = this.api.filterArraybyList(res,filtervar,filtervalues);\n      }\n      if (topx && topxvar!==''){\n        let keycounts = {};\n        for (let item of res){\n          if (keycounts[item[topxvar]] && Math.round(item['count'])){\n            keycounts[item[topxvar]]=keycounts[item[topxvar]]+item['count'];\n          }\n          if (!keycounts[item[topxvar]] && Math.round(item['count'])) {\n            keycounts[item[topxvar]]=item['count'];\n          }\n        }\n        let keycountsarray= [];\n        for (let key of Object.keys(keycounts)){\n          keycountsarray.push({\"name\":key,\"count\":keycounts[key]})\n        }\n        let filterlist = this.api.getValues(this.api.sortArray(keycountsarray,'count',\"descending\").slice(0,topx),\"name\");\n        res= this.api.filterArraybyList(res,topxvar,filterlist);\n      }\n      return res;\n      \n    },        \n    error => {return [];});\n  }\n  else {\n    return [];\n  };     \n}\n\n// Aggregation Functions\n\n\nadddate(Array,yearvar,isoweekvar){\n  for (const item of Array){\n    item[\"Datum\"]=this.getDateOfISOWeek(item[isoweekvar],item[yearvar]);\n  }\n  return Array;\n}\n\nadddatemonth(Array,yearvar,monthvar){\n  for (const item of Array){\n    item[\"Datum\"]=new Date(item[yearvar]+\"-\"+item[monthvar]+\"-01\");\n  }\n  return Array;\n}\n\ngetDateOfISOWeek(w, y) {\n  let millisperday = 1000*60*60*24;\n  let yearstart = new Date(y+\"-01-01\");\n  yearstart=new Date(yearstart.getTime()-(yearstart.getDay()-1)*millisperday)\n  let ISOweekStart = new Date(yearstart.getTime()+millisperday*7*(w+1));\n  return ISOweekStart;\n}\n\naggsymptoms(symptomsobject){\n  let inputarray = [];\n  let output = {};\n  let res = [];\n  for (let item of symptomsobject){\n    inputarray=inputarray.concat(item[\"Symptome\"])\n  }\n\n  for (let item of inputarray){\n    if (output[item.name]!==undefined){\n      output[item.name]=output[item.name]+item[\"n\"];\n    }\n    else {\n      output[item.name]=item[\"n\"];\n    }\n  }\n  output[\"Keine Angabe\"]=output[\"\"];\n  delete output[\"\"];\n  for (let thekey in Object.keys(output)){\n    res.push({\"name\":Object.keys(output)[thekey],\"n\":Object.values(output)[thekey]});\n  }\n\n  return this.api.sortArray(res,\"n\",\"descending\");\n\n\n}\n\nupdatestartstop(levelsettings){\n  // Appply date filters\n  let tzoffset = (new Date()).getTimezoneOffset() * 60000;\n  let today = new Date();\n  let startdate = \"2019-04-01\";\n  let enddate = today.getFullYear()+\"-12-31\";\n  if (levelsettings[\"zeitraum\"]==\"Aktuelles Jahr\"){\n      startdate = new Date(today.getFullYear()+\"-01-01\").toISOString().slice(0,10);\n      enddate = new Date(today.getFullYear()+\"-12-31\").toISOString().slice(0,10)\n    };\n    if (levelsettings[\"zeitraum\"]==\"Letztes Jahr\"){\n      startdate = new Date(today.getFullYear()-1+\"-01-01\").toISOString().slice(0,10);\n      enddate = new Date(today.getFullYear()-1+\"-12-31\").toISOString().slice(0,10);\n    };\n    let millisperday = 1000*60*60*24;\n    if (levelsettings[\"zeitraum\"]==\"Letzte 4 Wochen\"){\n      enddate = new Date(today.getTime() - today.getDay()*millisperday).toISOString().slice(0,10);\n      startdate = new Date(today.getTime()-((4*7)-1)*millisperday).toISOString().slice(0,10);        \n    };\n    if (levelsettings[\"zeitraum\"]==\"Letzte Woche\"){\n      enddate = new Date(today.getTime() - today.getDay()*millisperday).toISOString().slice(0,10);\n      startdate = new Date(today.getTime()-((6))*millisperday).toISOString().slice(0,10);        \n    };\n    if (levelsettings[\"zeitraum\"]==\"Detailliert\"){\n      let newstart= (new Date(levelsettings['start_picker'] - tzoffset)).toISOString().slice(0,10);\n      let newstop = (new Date(levelsettings['stop_picker'] - tzoffset)).toISOString().slice(0,10);\n      //console.log(\"Detailliert\",levelsettings['start_picker'],newstart,levelsettings['stop_picker'],newstop);\n      levelsettings[\"start\"]=newstart;\n      levelsettings[\"stop\"]=newstop;\n    } \n    if (levelsettings[\"zeitraum\"]!=\"Detailliert\"){\n      levelsettings[\"start\"]=startdate;\n      levelsettings[\"stop\"]=enddate;\n    }\n    else {\n     \n      \n    };\n    return levelsettings;\n}\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule}from '@angular/material/toolbar';\nimport { MatIconModule}from '@angular/material/icon';\nimport { MatListModule}from '@angular/material/list';\nimport { MatCardModule}from '@angular/material/card';\nimport { MatButtonModule}from '@angular/material/button';\nimport {MatTableModule}from '@angular/material/table';\nimport {   MatDialogModule}from '@angular/material/dialog';\nimport { MatInputModule  }from '@angular/material/input';\nimport { MatSelectModule  }from '@angular/material/select';\nimport { MatGridListModule  }from '@angular/material/grid-list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,  \n    FormsModule,\n    MatSliderModule,  \n    MatSidenavModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule,\n    MatExpansionModule\n\n    \n  ],\n  exports: [\n    MatSidenavModule,\n    MatSliderModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule,\n    MatExpansionModule\n  \n    \n  ]\n})\nexport class MaterialModule { }\n\n"],"names":[],"sourceRoot":"webpack:///"}