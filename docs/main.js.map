{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/infobox/box/box.component.ts","./src/app/components/infobox/box/box.component.html","./src/app/components/leafletmap/map/map.component.ts","./src/app/components/leafletmap/map/map.component.html","./src/app/components/plotly/plot/plot.component.ts","./src/app/components/plotly/plot/plot.component.html","./src/app/components/table/table/table.component.ts","./src/app/components/table/table/table.component.html","./src/app/pages/admin/admin.component.ts","./src/app/pages/admin/admin.component.html","./src/app/pages/admin/components/addUserDialog.ts","./src/app/pages/admin/components/addUserDialog.html","./src/app/pages/admin/components/deleteUserDialog.ts","./src/app/pages/admin/components/deleteUserDialog.html","./src/app/pages/admin/components/updateUserDialog.ts","./src/app/pages/admin/components/updateUserDialog.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/private/private.component.ts","./src/app/pages/private/private.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/start/start.component.ts","./src/app/pages/start/start.component.html","./src/app/services/api.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/csvexport.service.ts","./src/app/services/db.ts","./src/app/services/dbservice.service.ts","./src/app/services/interceptor-service.service.ts","./src/app/services/replace_pipe.ts","./src/app/services/smed-aggregation.service.ts","./src/environments/environment.ts","./src/main.ts","./src/material/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { StartComponent } from './pages/start/start.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport {PrivateComponent} from './pages/private/private.component'\nimport { AdminComponent } from './pages/admin/admin.component';\n\nconst routes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'profile', component: ProfileComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'private', component: PrivateComponent,\n    canActivate: [AuthGuardService]\n  }, \n  {\n    path: 'admin', component: AdminComponent,\n    canActivate: [AuthGuardService]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, RouterEvent } from '@angular/router';\nimport { ApiService } from './services/api.service';\nimport { AuthService } from './services/auth.service';\nimport { DBService } from './services/dbservice.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Test Dashboard';\n  public currentuser: any;\n  public currentroute: string;\n  loginoption = true;\n  public loginstatus: boolean;\n  public adminstatus: boolean;\n  currentdate: any;\n  public apiconnection: number = 0;\n  isExtern: boolean = false\n\n  constructor(\n    private _auth: AuthService,\n    private _api: ApiService,\n    private router: Router,\n    private db: DBService\n  ) {\n\n    router.events.subscribe((event: RouterEvent) => {\n      if (event.url !== this.currentroute && event.url) {\n        this.currentroute = event.url;\n        this._api.countView(event.url);\n      };\n    });\n  }\n\n  ngOnInit() {\n    this.db.clean();\n    this.checkapiconnection();\n    this.currentdate = new Date();\n    \n    this._auth.currentUser.subscribe(data => {\n      if (data) {\n        this.currentuser = data;\n        this.loginstatus = true;\n        this.adminstatus = this.currentuser[\"is_admin\"] || this.currentuser[\"is_superadmin\"];\n        this.isExtern = this._auth.isExtern()\n        setTimeout(() => { this.autorefreshdata(); }, 1000);\n        setInterval(() => { this._auth.refreshToken(); this.checkapiconnection(); }, 1000 * 60 * 10);\n      }\n      else {\n        this.loginstatus = false;\n        this.adminstatus = false;\n        setTimeout(() => { this.autorefreshdata(); }, 0);\n      };\n    });\n  }\n\n  public checkapiconnection() {\n    this._api.getTypeRequest('openapi.json').subscribe(data => { this.apiconnection = 1; }, error => { this.apiconnection = 2; })\n  }\n\n  public checkforopentabs() {\n    // Broadcast that you're opening a page.\n    localStorage.openpages = Date.now();\n    window.addEventListener('storage', function (e) {\n      if (e.key == \"openpages\") {\n        // Listen if anybody else is opening the same page!\n        localStorage.page_available = Date.now();\n      }\n      if (e.key == \"page_available\") {\n        alert(\"Eine andere Seite ist bereits offen. Bitte nutzen Sie diese Anwendung nur auf einem Tab, um Probleme zu vermeiden.\");\n\n      }\n    }, false);\n  }\n\n  public autorefreshdata() {\n    this.updatemetadata().subscribe(\n      data => {\n        this.setmetadata(\"metadata\", data[\"data\"]);\n      });\n    // this.getsortdata().subscribe(data => {\n    //     this.setmetadata(\"sortdata\",data[\"datalevels\"]);  \n    //     if (data[\"geodata\"]){\n    //       this.setmetadata(\"geodata\",this._api.getValues(data[\"geodata\"],'_id'));        \n    //     }\n    //     else {\n    //       this.setmetadata(\"geodata\",[]); \n    //     }\n\n    //   });\n  }\n\n  logout() {\n    this._auth.logout();\n    this.db.clean();\n    localStorage.clear();\n    this.autorefreshdata();\n    this.loginstatus = false;\n    this.adminstatus = false;\n    setTimeout(() => { this.router.navigate(['/']) }, 1500)\n  };\n\n  getsortdata() {\n    return this._api.getTypeRequest(\"get_sortlevels/\" + this._api.REST_API_SERVER_CLIENTID);\n  }\n\n  updatemetadata() {\n    let client = this._api.REST_API_SERVER_CLIENTID\n    return this._api.getTypeRequest(\"get_metadata/\" + client);\n  }\n\n  setmetadata(name, data) {\n    localStorage.setItem(name, JSON.stringify(data));\n  }\n}\n","<mat-sidenav-container autosize=\"true\" scrollable=\"false\">\n  <mat-sidenav-content>\n    <mat-toolbar color=\"transparent\">\n      <button (click)=\"drawer.toggle()\" mat-icon-button class=\"example-icon\"\n        aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <!-- <span>{{this.title}}</span> -->\n      <span class=\"example-spacer\"></span>\n      <div fxShow=\"true\" fxHide.lt-sm=\"true\">\n        <a href=\"https://www.zi.de/smed\">\n          <img src=\"./assets/branding/smed_logo.png\" class=\"brandinglogo\">\n        </a>\n        <a href=\"https://www.zi.de\">\n          <img src=\"./assets/branding/zi_Logo.png\"\n            class=\"brandinglogo\">\n        </a>\n      </div>\n      <div fxShow=\"false\" fxShow.lt-sm=\"true\">\n        <a href=\"https://www.zi.de\">\n          <img src=\"./assets/branding/zi_Logo.png\" class=\"brandinglogo\">\n        </a>\n      </div>\n    </mat-toolbar>\n    <main>\n      <section class=\"mat-typography\">\n        <mat-drawer-container autosize>\n          <mat-drawer #drawer mode=\"push\" position=\"start\" autoFocus=\"false\">\n            <div class=\"menucontainer\">\n              <ng-container>\n                <p class=\"primarycolor\"><strong>Navigation</strong></p>\n              </ng-container>\n              <div>\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/\">\n                  <mat-icon class=\"icon\">home</mat-icon>\n                  <span>Startseite</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.loginoption && !this.loginstatus\">\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/login\">\n                  <mat-icon class=\"icon\">login</mat-icon>\n                  <span>Anmelden</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.loginstatus\">\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/profile\">\n                  <mat-icon class=\"icon\">account_box</mat-icon>\n                  <span>Benutzerprofil</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.currentuser && !this.isExtern\">\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/private\">\n                  <mat-icon class=\"icon\">dashboard</mat-icon>\n                  <span>Erweiterte Analysen</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.adminstatus\">\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/admin\">\n                  <mat-icon class=\"icon\">admin_panel_settings</mat-icon>\n                  <span>Administration</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.loginstatus\">\n                <a mat-icon-button (click)=\"drawer.toggle();logout();\" href=\"./\">\n                  <mat-icon class=\"icon\">logout</mat-icon>\n                  <span>Ausloggen</span>\n                </a>\n              </div>\n            </div>\n          </mat-drawer>\n          <mat-drawer-content>\n            <div class=\"offlinemsg\" *ngIf=\"false\"><strong>Keine Internetverbindung</strong><br>Dieses Portal benötigt\n              eine aktive Internetverbindung.</div>\n            <div class=\"offlinemsg\" *ngIf=\"this.apiconnection==2\"><strong>Keine Verbindung zur API</strong><br>Dieses\n              Portal benötigt\n              eine aktive Internetverbindung.</div>\n            <router-outlet></router-outlet>\n          </mat-drawer-content>\n        </mat-drawer-container>\n      </section>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n<!-- Footer nur für Desktop Screen -->\n<footer>\n  <div class=\"footerstyle\">\n    <div fxLayout=\"column\" fxLayoutGap=\"0.5rem\">\n      <div fxLayout=\"column wrap\" fxLayoutAlign=\"space-around start\">\n        <div fxflex=28 fxHide.xs>\n          <p>\n            <mat-list style=\"color:white;\">\n              <mat-list-item>\n                <p style=\"color:white;\"><strong>Navigation</strong></p>\n              </mat-list-item>\n              <mat-list-item><a style=\"color:white;\" href=\"https://www.zi.de/meta/impressum\">Impressum</a>\n              </mat-list-item>\n              <mat-list-item><a style=\"color:white;\"\n                  href=\"https://www.zi.de/footer/datenschutzhinweis\">Datenschutzhinweise</a></mat-list-item>\n            </mat-list>\n          </p>\n        </div>\n        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-between end\">\n          <div fxFlex>\n            <br>\n          </div>\n          <div style=\"padding:0.5rem;text-align: center;\">\n            <p>© {{this.currentdate | date:'Y'}} Zentralinstitut für die kassenärztliche Versorgung in der\n              Bundesrepublik\n              Deutschland</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule} from './../material/material.module'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartComponent } from './pages/start/start.component';\nimport * as PlotlyJS from 'plotly.js/dist/plotly.js';\nimport { PlotlyModule ,PlotlyService} from 'angular-plotly.js';\nimport * as DeLocale from '../../node_modules/plotly.js/lib/locales/de-ch.js'\nimport * as SVLocale from 'plotly.js/lib/locales/de.js';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MapComponent } from './components/leafletmap/map/map.component';\nimport { PlotComponent } from './components/plotly/plot/plot.component';\nimport { TableComponent } from './components/table/table/table.component';\nimport { BoxComponent } from './components/infobox/box/box.component';\nimport { registerLocaleData } from '@angular/common';\nimport locales from '@angular/common/locales/de';\nimport { LOCALE_ID } from '@angular/core';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \nimport { InterceptorService } from './services/interceptor-service.service';\nimport { PrivateComponent } from './pages/private/private.component';\nimport { AdminComponent } from './pages/admin/admin.component' \nimport { ReplacePipe } from './services/replace_pipe';\nimport { AddUserDialog } from './pages/admin/components/addUserDialog';\nimport { UpdateUserDialog } from './pages/admin/components/updateUserDialog';\nimport { DeleteUserDialog } from './pages/admin/components/deleteUserDialog';\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\nregisterLocaleData(locales, 'de');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    MapComponent,\n    PlotComponent,\n    TableComponent,\n    BoxComponent,\n    LoginComponent,\n    ProfileComponent,\n    PrivateComponent,\n    AdminComponent,\n    ReplacePipe,\n    AddUserDialog,\n    UpdateUserDialog,\n    DeleteUserDialog\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    PlotlyModule,\n    FlexLayoutModule  ,\n    ReactiveFormsModule, \n    FormsModule, \n    HttpClientModule \n  ],\n  providers: [\n    // {provide: LOCALE_ID, useValue: 'de-DE' },PlotlyService,\n\n  // This needs to be uncommented to provide  auth\n  { provide: HTTP_INTERCEPTORS, \n  useClass: InterceptorService, \n  multi: true } \n],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { \n  constructor(private plotlyService: PlotlyService) {\n    this.setupPlotly()\n  }\n\n  private async setupPlotly() {\n    const plotly = await this.plotlyService.getPlotly()\n    plotly.register(DeLocale)\n    plotly.setPlotConfig({ locale: 'de' })\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SelectControlValueAccessor } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-box',\n  templateUrl: './box.component.html',\n  styleUrls: ['./box.component.scss']\n})\nexport class BoxComponent implements OnInit {\n  @Input() value: number;\n  @Input() title: string;\n  @Input() description: string;\n  @Input() colors: string[];\n  @Input() cutoffs: string[];\n  @Input() maincolor: string;\n  @Input() numberformat: string;\n  @Input() maticon: string;\n  @Input() textbehind: boolean;\n  itemcolor: string;\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n    this.value = Number(this.value);\n    if (!this.numberformat) { this.numberformat = '1.1-1'; }\n    if (!this.maincolor) { this.maincolor = this.api.primarycolor; }\n    if (!this.cutoffs) { this.cutoffs = []; }\n    this.setcolor();\n  };\n\n  setcolor() {\n    let color = this.maincolor;\n    this.itemcolor = this.maincolor;\n\n    if (this.cutoffs.length > 0 && this.cutoffs.length == this.colors.length) {\n      let i = 0;\n      for (let cutvalue of this.cutoffs) {\n        if (Number(cutvalue) <= this.value) {\n          color = this.colors[i];\n        }\n        i = i + 1;\n      }\n    }\n    this.itemcolor = color;\n  }\n}\n","<mat-card [style.background-color]=\"this.itemcolor\">\n  <div fxLayout=\"row\">\n    <div fxFlex>\n      <h1 *ngIf=\"!this.textbehind\">{{this.title}}{{this.value | number: this.numberformat : \"de\"}}</h1>\n      <h1 *ngIf=\"this.textbehind\">{{this.value | number: this.numberformat : \"de\"}} {{this.title}}</h1>\n      <p><span>{{this.description}}</span> </p>\n    </div>\n    <div fxFlex *ngIf=\"this.maticon\">\n      <span class=\"mat-headline\"><mat-icon inline=true>{{this.maticon}}</mat-icon></span>\n    </div>\n  </div>\n</mat-card>","import { Component, OnInit, Input, Output, Renderer2, EventEmitter } from '@angular/core';\nimport * as L from 'leaflet';\nimport { icon, Marker } from 'leaflet';\nimport { HttpClient } from '@angular/common/http';\nimport { FeatureCollection } from 'geojson';\nimport { ApiService } from 'src/app/services/api.service';\nimport * as chroma from \"chroma-js\";\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n\n})\nexport class MapComponent implements OnInit {\n  @Input() data = [];\n  @Input() nacolor = \"white\";\n  @Input() debug :boolean = false;\n  @Input() Outcome: String;\n  @Input() Zoom: number;\n  @Input() basemap: any; // geojson\n  @Input() center: any;\n  @Input() opacity: number;\n  @Input() feature: string; // name of outcome\n  @Input() colorscale: any;\n  @Input() cutofflist: any;\n  @Input() customlabels: any;\n  @Input() binmethod: string;\n  @Input() selectmap: boolean;\n  @Input() bins: number;\n  @Input() id: string; // feature id\n  @Input() percent: boolean;\n  @Input() containername: string;\n  @Output() clicked = new EventEmitter<string>();\n  mapok:boolean;\n  clickedvalue: string;\n  legend: any;\n  map: any;\n  useprovider = 0;\n  firstload = true;\n  providers = ['https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png']\n  attributions = ['Kartenmaterial &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    '©OpenStreetMap, ©CartoDB'];\n  constructor(private http: HttpClient, private renderer: Renderer2, private api: ApiService) { }\n  \n  \n  ngOnInit(): void {\n    // Debug\n    if (this.debug){\n      console.log(\"ID:\",this.id);\n      console.log(\"Map:\",this.api.getValues(this.basemap['features'],'properties'));  \n    }\n\n    // Sort data\n    this.data = this.api.sortArray(this.data,this.Outcome);\n    \n    // Init vars\n    this.resetprops();\n    this.clickedvalue = \"\";\n    if (!this.binmethod){\n      this.binmethod='equalint';\n    };\n  }\n  ngAfterViewInit(): void {\n    // Import Map data\n    this.initMap(this.containername);\n  }\n\n  \n\n  ngOnChanges(changes: any) {\n    // On any change replace the map-container\n    if (!this.selectmap) {\n      if ((changes.data || changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n    else {\n      if ((changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n\n\n  }\n\n  ngOnDestroy(){\n    this.map = null;\n    this.data = null;\n    }\n\n\n  resetprops() {\n    if (!this.containername) { this.containername = \"mapdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); };\n    if (!this.Zoom) { this.Zoom = 4; };\n    if (!this.center) { this.center = this.getcenter(); };//  DOES NOT WORK FOR TYPE MULTIPOLYGON!\n    if (!this.opacity) { this.opacity = .1; };\n    if (!this.customlabels) { this.customlabels = []; };\n    if (!this.binmethod) { this.binmethod = \"equalint\" };\n  }\n\n  checkallok() {\n    let res;\n    if (!this.selectmap) {\n      res = this.data && this.basemap;\n      if (res) {\n        res = this.data.length > 0 && this.basemap.features;\n      }\n\n    }\n    else {\n      res = this.basemap;\n      if (res) {\n        res = this.basemap.features;\n      }\n\n    }\n\n    return res;\n  }\n  preparedom(divid) {\n    if (document.getElementById(divid)) { document.getElementById(divid).remove();};\n    let mapcontainer = this.renderer.createElement(\"div\");\n    this.renderer.setProperty(mapcontainer, 'id', divid);\n    this.renderer.addClass(mapcontainer, \"mapdiv\");    \n    if (document.getElementById(\"map-frame\")!==null){\n      this.renderer.appendChild(document.getElementById(\"map-frame\"), mapcontainer);}\n    return true;\n  }\n\n  async initMap(divid) {\n    // Init\n    let mymap;\n    this.mapok = false;\n    let colors = this.colorscale;\n    let cutoffs = this.cutofflist;\n    let thedata;\n    if (this.data) {\n      thedata = Object.assign(this.data);\n    }\n    let propname = this.feature;\n    let theid = this.id;\n    let theopacity = this.opacity;\n    let basestyle = {\n      weight: 1,\n      dashArray: '',\n      \"color\": \"grey\",\n      \"fillOpacity\": theopacity,\n      \"Opacity\": theopacity\n    };\n\n    // If to many regions set weight to 0\n    if (thedata.length > 30 ){\n      basestyle.weight=0;\n    };\n\n    // Prepare dom\n    this.firstload= false;\n    let removed = false;\n    await this.preparedom(divid);\n    // Load Map\n\n    if (this.debug){\n      console.log('center: ',this.center );\n    }\n    try {\n    mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\n    }\n    catch(e){\n      document.getElementById(divid).remove();\n      await this.preparedom(divid);\n      mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\n    };\n    if (this.debug){\n      console.log('Map created');\n    }\n\n    // Fix Icons see https://stackoverflow.com/questions/41144319/leaflet-marker-not-found-production-env\n    const iconRetinaUrl = 'assets/marker-icon-2x.png';\n    const iconUrl = 'assets/marker-icon.png';\n    const shadowUrl = 'assets/marker-shadow.png';\n    const iconDefault = icon({\n      iconRetinaUrl,\n      iconUrl,\n      shadowUrl,\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      tooltipAnchor: [16, -28],\n      shadowSize: [41, 41]\n    });\n    Marker.prototype.options.icon = iconDefault;\n\n    // Load Tiles\n    let theprovider = this.useprovider;\n    const tiles = L.tileLayer(this.providers[theprovider],\n      {\n        maxZoom: 19, opacity: 1,\n        attribution: this.attributions[theprovider]\n      });\n    tiles.addTo(mymap);\n    mymap.attributionControl.setPrefix('<a href=\"https://www.ziapp.de\"><strong>Zi</strong> Data Science Lab</a>');\n    tiles.getContainer().className += ' custombgmap';\n\n    // Chloropleth Map\n    if (!this.selectmap) {\n\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      if (this.percent) {\n        for (let item of thedata) {\n          if (item[this.feature]){\n            item['___thevalue'] = Math.round(item[this.feature] * 10000) / 100;\n          }\n          else {\n            item['___thevalue']=null;\n          }\n        }\n      }\n      else {\n        for (let item of thedata) {         \n          if (item[this.feature]){\n            item['___thevalue'] = item[this.feature];\n          }\n          else {\n            item['___thevalue']=null;\n          }\n        }\n      }\n      for (let item of geojsonFeature.features) {\n        let value = this.api.filterArray(thedata, this.id, item.properties[this.id]);\n        if (value.length > 0) {\n          item['properties'][propname] = value[0]['___thevalue'];\n        }\n        else {\n          item['properties'][propname] = null;\n        }\n      }\n      if (this.debug){\n        console.log('Map Features',geojsonFeature.features);\n        console.log(\"Data:\",this.data);\n      }\n      \n\n\n      if (!cutoffs) {\n        cutoffs = this.makecutoffs(this.api.getValues(thedata, '___thevalue'), this.binmethod, this.bins);\n      };\n      if (colors.length < cutoffs.length) {\n        colors = this.makescale(cutoffs.length)\n      }\n\n      let myStyle = function (feature) {\n        let thevalue = feature.properties[propname];\n        let i = 0;\n        let result = basestyle;\n        let thecolor = colors[0];\n        for (let colorcode of colors) {\n          if (thevalue > cutoffs[i]) {\n            thecolor = colorcode;\n          };\n          i = i + 1;\n        }\n        if (thevalue != null) { result['color'] = thecolor; } \n        else {\n          result['color'] = 'grey';\n        };\n        return result\n      };\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\") + (props && props[propname] ? '<br><strong>Wert: </strong>' + props[propname].toLocaleString() : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n      // Add Features/Polygons to Map\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.zoomToFeature(mymap, e))\n            })\n          )\n        });\n      featLayer.resetStyle();\n      featLayer.addTo(mymap);\n\n      // Add Legend to Map\n      let labels\n      if (this.customlabels) { labels = this.customlabels; };\n\n      let legend;\n      legend = L.control.layers({}, {}, { position: 'topright' });\n      let legendtitle = this.api.stringwrap(propname);\n\n      legend.onAdd = function (map) {\n\n        this._ldiv = L.DomUtil.create('div', 'customlegend');\n        this._ldiv.innerHTML = '<p><strong>' + legendtitle + '</strong></p>';\n        if (this.percent == true) {\n          this._ldiv.innerHTML += '<p><em>Anteil in %</em></p>';\n        }\n        if (cutoffs) {\n          for (var i = 0; i < cutoffs.length; i++) {\n            if (labels.length == cutoffs.length) {\n              this._ldiv.innerHTML +=\n                '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                labels[i];\n            }\n            else {\n              if (cutoffs.length > 4) {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i> ' +\n                  cutoffs[i].toLocaleString() + (cutoffs[i + 1] ? ' bis unter ' + cutoffs[i + 1].toLocaleString() + '<br>' : '+');\n              }\n              else {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                  (cutoffs[i + 1] ? 'bis ' + cutoffs[i + 1].toLocaleString() + \"&nbsp;\" : cutoffs[i].toLocaleString() + '+');\n              }\n            }\n          }\n        }\n\n        return this._ldiv;\n      };\n\n      legend.addTo(mymap);\n    }\n    else {\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      colors = this.makescale(2);\n      let myStyle = function (feature) {\n        let res = basestyle;\n        let thecolor= \"grey\";\n        if (feature.properties['___clicked']) {\n          thecolor = colors[1];\n        }\n        res['color']=thecolor;\n        return res;\n      }\n\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.selectarea(mymap, e))\n            })\n          )\n        });\n      featLayer.addTo(mymap);\n\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n    }\n    this.mapok=true;\n\n  };\n\n  highlightFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity * 1.1\n    });\n    info.update(layer.feature.properties);\n  }\n\n  resetFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity,\n    });\n    info.update();\n  }\n\n  makecutoffs(array, method = \"equalint\", bins) { \n    let result = [];\n    let minv = Math.min(...array);\n    let maxv = Math.max(...array);\n\n    // equalint    \n    if (method=='equalint'){\n    let steps = Math.round((maxv - minv) / bins);\n    let i = 0;\n    while (i < bins) {\n      result.push((i + 1) * steps + minv);\n      i = i + 1;\n    };\n    if (this.debug){\n      console.log(\"CUTOFF RESULT\",result,\"\\ninputarray\",array);\n    }\n    };\n\n   // equal group size \n   if (method=='equalgroupsize'){    \n    let sortedarray = this.api.filterNA(array.sort((a,b)=>parseFloat(a)-parseFloat(b)));\n    let arraylength = sortedarray.length;\n    let groupsize= Math.floor(arraylength/bins);    \n    for (let thebin of Array.apply(null, {length: bins}).map(Number.call, Number)){\n      if (thebin==0){\n        result.push(sortedarray[0])\n      }\n      else {\n        result.push(sortedarray[groupsize*thebin]);\n      }\n    }\n    if (this.debug){\n      console.log(\"CUTOFF RESULT\",result.sort(),\"\\ninputarray\",sortedarray,\"Group Size\",groupsize);\n    }     \n    };\n   \n    return result;\n\n  };\n\n\n  newclick(e){\n    let res = [];\n    for (let item of this.basemap.features){\n      if (item.properties[this.id]==e){\n        item.properties['___clicked']=true;\n      }\n      else {\n        item.properties['___clicked']=false;\n      }\n      res.push(item);\n    }\n    this.basemap['features']=res;\n    this.initMap(this.containername);\n  }\n\n  zoomToFeature(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n  }\n\n  selectarea(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n    this.newclick(e.target.feature.properties[this.id]);\n  }\n\n  makescale(bins = 5) {\n    return chroma.scale([chroma(this.api.primarycolor).set('hsl.h', -120), this.api.primarycolor]).colors(bins);\n  }\n\n  getcenter() {\n    let features = this.basemap.features;\n    let coords = { 'a': [], 'b': [] };\n    for (let item of features) {\n      for (let area of item.geometry.coordinates) {\n        for (let subarea of area) {          \n          coords['a'].push(subarea[0])\n          coords['b'].push(subarea[1])\n          \n        }\n      }\n    }\n    if (this.debug){\n      console.log(\"CENTER FEATURES:\",this.basemap.features);\n      console.log(\"CENTER COORDS:\",coords);\n    }\n    let a = coords['a'].reduce((pv, cv) => pv + cv, 0) / coords['a'].length;\n    let b = coords['b'].reduce((pv, cv) => pv + cv, 0) / coords['b'].length;\n\n    return [b, a]\n  }\n\ndonothing(e){\n  return null;\n};\n}\n\n","<ng-container *ngIf=\"!(this.basemap)\">\n  <mat-spinner color=\"primary\"></mat-spinner>\n</ng-container>\n\n<ng-container *ngIf=\"(this.basemap)\">\n<div  class=\"map-container\">\n    <div id=\"map-frame\" class=\"map-frame\">\n      \n    </div>    \n    <mat-spinner *ngIf=\"!this.mapok\" color=\"primary\"></mat-spinner>\n  </div>\n</ng-container>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport * as DeLocale from '../../../../../node_modules/plotly.js/lib/locales/de-ch.js'\nimport * as SVLocale from 'plotly.js/lib/locales/de.js';\nimport { PlotlyService } from 'angular-plotly.js';\n\n@Component({\n  selector: 'app-plot',\n  templateUrl: './plot.component.html',\n  styleUrls: ['./plot.component.scss'],\n  providers: [PlotlyService]\n})\n\nexport class PlotComponent implements OnInit {\n  @Input() data: any;\n  @Input() xvalue: string;\n  @Input() colorby: string;\n  @Input() outcomes: any;\n  @Input() outcomelabels = [];\n  @Input() plottype: String;\n  @Input() customdata: any;\n  @Input() customconfig: any;\n  @Input() customlayout: any;\n  @Input() custommargins: any;\n  @Input() linewidth: number;\n  @Input() showlegend: boolean;\n  @Input() sort: boolean;\n  @Input() sortx: boolean;\n  @Input() percent: boolean;\n  @Input() percentx: boolean;\n  @Input() basecolor = \"\";\n  @Input() colorscheme = [];\n  @Input() annotations = [];\n  @Input() hovertemplate = \"\";\n  @Input() plottitle = \"\";\n  @Input() plotsubtitle = \"\";\n  @Input() plotcaption = \"\";\n  @Input() n_yticks = 8;\n  @Input() xtickformat = \"\";\n  @Input() xtitle = \"\";\n  @Input() ytitle = \"\";\n  @Input() id = \"\";\n  @Input() divid = \"\";\n  @Input() fontfamily = \"Lato, sans-serif\";\n  @Input() fontsize = \".85rem\";\n  @Input() fontcolor = \"black\";\n  @Input() legendbg = 'ffffff20';\n  @Input() legendposx = 'right';\n  @Input() legendposy = 1;\n  @Output() clicked = new EventEmitter<string>();\n\n  constructor(private api: ApiService) { }\n  plotlayout: any;\n  plotdata: any;\n  mainconfig: any;\n  plotlytype: string;\n  clickedvalue: any;\n\n  ngOnInit(): void {\n    if (this.divid == \"\") { this.divid = \"plotdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); }\n    if (!this.linewidth) { this.linewidth = 2 };\n    if (this.basecolor == \"\") { this.basecolor = this.api.primarycolor };\n    if (this.colorscheme.length == 0) { this.colorscheme = [this.basecolor]; }\n    this.make_plot();\n  }\n\n  ngOnChanges(changes: any) {\n    setTimeout(() => { this.make_plot() }, 0);\n  }\n\n  reportclick(input) {\n    this.clicked.emit(input);\n    this.clickedvalue = input;\n  }\n\n  make_plot() {\n    this.mainconfig = {\n      displayModeBar: false,\n      scrollZoom: false,\n      autosizable: true,\n      locale: 'de-eu',\n      locales: {\n        'de-eu': {\n          format: {\n            currency: ['€', ''],\n            decimal: ',',\n            thousands: '.',\n            grouping: [2]\n          }\n        }\n      },\n      doubleClick: 'reset',\n      showAxisDragHandles: false,\n      showAxisRangeEntryBoxes: false,\n      showTips: true,\n      seperator: ',.'\n    };\n\n    if (this.plottype == \"bar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: {\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\n          gridcolor: \"lightgrey\",\n          gridpattern: \"dot\",\n          gridwidth: 1,\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          annotations: this.annotations,\n          ticksuffix: \" \",\n          nticks: this.n_yticks,\n        },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations,\n      };\n\n      if (this.percent) {\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"heatmap\") {\n      this.plotlytype = 'heatmap';\n      this.plotlayout = {\n        xaxis: { side: 'top' },\n        yaxis: { autosize: true },\n        autosize: false, padding: 0,\n        //legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 50, r: 50, b: 0, t: 50 },\n        paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        //annotations: this.annotations\n      };\n\n      let plotdata = this.data;\n      plotdata['type'] = \"heatmap\";\n      let colors = this.api.makescale(2);\n      plotdata['colorscale'] = [\n        [0, colors[1].concat('CC')],\n        [1, colors[0].concat('CC')]\n      ];\n      plotdata['showscale'] = false;\n      this.plotdata = [plotdata];\n    }\n\n    if (this.plottype == \"violin\") {\n      this.plotlytype = \"violin\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: { zeroline: false, automargin: true, rangemode: 'tozero', ticksuffix: \" \" },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n      if (this.percent) {\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"stackedbar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        barmode: \"stack\",\n        xaxis: { fixedrange: false, showgrid: false, type: 'category', automargin: false },\n        yaxis: {\n          fixedrange: true, title: '', autosize: true, automargin: true,\n          rangemode: 'tozero', ticksuffix: \" \",\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          nticks: this.n_yticks\n        },\n        padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n    }\n\n    if (this.plottype == \"tsline\" || this.plottype == \"lines\" || this.plottype == \"area\" ||\n      this.plottype == \"stackedarea\" || this.plottype == 'scatter') {\n      this.plotlytype = \"lines\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, showgrid: false, automargin: false, zeroline: false },\n        yaxis: {\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\n          gridcolor: \"lightgrey\",\n          gridpattern: \"dot\",\n          gridwidth: 1,\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          annotations: this.annotations,\n          ticksuffix: \" \",\n          nticks: this.n_yticks,\n        },\n\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 0, r: 20, b: 50, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\"\n      };\n\n      if (this.percent) {\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n\n      if (this.percentx) {\n        this.plotlayout.xaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"hbar\") {\n      this.plotlytype = \"hbar\";\n      this.plotlayout = {\n        xaxis: {\n          fixedrange: true, showgrid: true, title: '',\n          automargin: true, nticks: this.n_yticks\n        },\n        yaxis: {\n          fixedrange: false, type: 'category', automargin: true,\n          rangemode: 'tozero', ticksuffix: \" \",\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2\n        },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 200, r: 0, b: 20, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n    }\n\n    if (this.custommargins) {\n      this.plotlayout['margin'] = this.custommargins;\n    }\n\n    if (this.showlegend) {\n      this.plotlayout['showlegend'] = true;\n    }\n\n    if (this.xtickformat != '') {\n      this.plotlayout['xaxis']['tickformat'] = this.xtickformat;\n    }\n\n    this.plotlayout['font'] = {\n      family: this.fontfamily,\n      size: this.fontsize,\n      color: this.fontcolor\n    };\n\n    if (this.xtitle !== \"\") {\n      this.plotlayout['xaxis']['title'] = this.xtitle;\n      this.plotlayout['xaxis']['titlefont'] =\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n    }\n    if (this.ytitle !== \"\") {\n      this.plotlayout['yaxis']['title'] = this.ytitle;\n      this.plotlayout['yaxis']['titlefont'] =\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n    }\n\n    if (this.plottype != \"heatmap\") {\n      let plotdata = []\n\n      for (let item of this.data) {\n        plotdata.push(item);\n      }\n\n      if (this.sort) {\n        plotdata = this.api.sortArray(plotdata, this.outcomes[0]);\n      }\n\n      if (this.sortx) {\n        plotdata = this.api.sortArray(plotdata, this.xvalue);\n      }\n\n      let outcomes = this.outcomes;\n      if (this.colorby) {\n        outcomes = this.api.getuniqueValues(plotdata, this.colorby);\n        if (outcomes.length > 1) {\n          this.colorscheme = this.api.makescale(outcomes.length);\n        }\n        plotdata = this.make_colorbyvalues();\n      }\n\n      this.plotdata = this.make_plotdata(plotdata, this.xvalue, outcomes, this.plotlytype);\n\n      // DEBUG\n      // console.log(\"Make Plotdata:\",\"\\ndf:\",plotdata,\"\\nx:\", this.xvalue,\"\\nout:\", outcomes,\"\\ntype:\", this.plotlytype)\n    };\n  }\n\n  make_colorbyvalues() {\n    let newdata = [];\n    let inputdata = this.data;\n    let thecolorvalues = this.api.getuniqueValues(inputdata, this.colorby).sort();\n    let thexvalues = this.api.getuniqueValues(inputdata, this.xvalue);\n    let theoutcome = this.outcomes[0];\n\n    for (let xvalue of thexvalues) {\n      let topush = {};\n      topush[this.xvalue] = xvalue;\n\n      for (let tocolor of thecolorvalues) {\n        let datapoint = this.api.filterArray(this.api.filterArray(inputdata, this.colorby, tocolor), this.xvalue, xvalue)[0];\n\n        if (datapoint) {\n          topush[tocolor] = datapoint[theoutcome];\n        }\n      }\n\n      newdata.push(topush);\n    }\n    // console.log(\"DEBUG make_colorbyvalues:\",'df',inputdata,\"colorvals\",thecolorvalues,\"xvals\",thexvalues,\"outcome\",theoutcome,\"newdf\",newdata);\n    return newdata;\n  }\n\n  make_trace(xdata, ydata = [], name: string, type = \"\") {\n    let trace = {\n      x: xdata,\n      y: ydata,\n      name: name,\n      type: type,\n    }\n\n    if (this.plottype == \"stackedarea\") {\n      trace['stackgroup'] = \"one\";\n    }\n\n    // if (this.hovertemplate !== \"\") {\n    //   trace['hovertemplate'] = this.hovertemplate;\n    // }\n\n    return trace;\n  }\n\n  make_plotdata(source = [], xaxis = \"\", ylist = [], type = \"bar\", colors = this.colorscheme) {\n    let xdata = this.api.getValues(source, xaxis)\n    let list = []\n    let i = 0\n\n    for (let name in ylist) {\n      let theydata = this.api.getValues(source, ylist[i]);\n      let tracename = ylist[i];\n\n      if (this.outcomelabels.length == ylist.length) {\n        tracename = this.outcomelabels[i];\n      }\n\n      let trace = this.make_trace(xdata, theydata, tracename, type = type);\n\n      if (type == \"hbar\") {\n        trace = this.make_trace(this.api.getValues(source, ylist[i]), xdata, ylist[i], type = \"bar\")\n        trace[\"orientation\"] = \"h\"\n      }\n\n      if (type == \"bar\" || type == \"bar\" || type == \"scatter\") {\n        trace[\"marker\"] = {\n          color: colors[i]\n        }\n      }\n\n      if (type == \"lines\") {\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth * 2\n        }\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth * 5\n        }\n\n        trace['name'] = ''\n        trace['hovertemplate'] = '%{x} | %{y:.2f}'\n      }\n\n      if (this.plottype == \"area\") {\n        trace[\"fill\"] = \"tozeroy\";\n      }\n\n      if (this.plottype == \"violin\") {\n        trace = this.make_trace(name, theydata, ylist[i], type = type);\n        trace['x'] = name;\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth\n        }\n      }\n\n      if (this.plottype == \"scatter\") {\n        trace['mode'] = 'markers';\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth * 5\n        }\n        if (this.id != \"\") {\n          trace[\"text\"] = this.api.getValues(source, this.id);\n          trace[\"textfont\"] = { family: this.fontfamily };\n          if (trace['x'].length < 50) {\n            trace['mode'] = 'markers+text';\n            trace['textposition'] = 'bottom center';\n          }\n          else {\n            trace['mode'] = 'markers';\n          }\n        }\n      }\n      list.push(trace)\n      i = i + 1\n    }\n\n    return list\n  }\n}\n","<ng-container *ngIf=\"!(this.plotdata && this.mainconfig && this.plotlayout)\">\n  <mat-spinner color=\"primary\"></mat-spinner>\n</ng-container>\n<ng-container *ngIf=\"this.plotdata && this.mainconfig && this.plotlayout\">\n  <plotly-plot class=\"plotlydiv\" [data]=\"this.plotdata\" [divId]=\"this.divid\" [debug]=\"true\" [layout]=\"this.plotlayout\"\n    [config]=\"this.mainconfig\" (plotlyClick)=\"this.reportclick($event);\" [useResizeHandler]=\"true\"\n    [style]=\"{position: 'relative', width: '100%', height: '100%'}\"></plotly-plot>\n</ng-container>\n","import { AfterViewInit, Component, OnInit, Input ,ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n  @Input() data:any;\n  @Input() columns:any;\n  @Input() outcomes_numeric:any;\n  @Input() outcomes_rate:any;\n  @Input() newlabels:any;\n  @Input() pagesizes:any;\n  @Input() addfilter:boolean;\n  @Input() addrank:boolean;\n\n  datasource:any;\n  displayedColumns:String[];\n\n  \n  constructor() { }\n\n\n  ngOnInit(){\n  if (!this.outcomes_numeric){this.outcomes_numeric=[]};\n  if (!this.outcomes_rate){this.outcomes_rate=[]};\n  if (!this.pagesizes){this.pagesizes=[10, 50,100]};\n  this.displayedColumns =  this.columns;\n  this.datasource = new MatTableDataSource(this.data); \n  if (this.addrank){\n\n  }\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;    \n  }\n\n  ngOnChanges(changes: any) {\n    this.displayedColumns =  this.columns;\n    this.datasource = new MatTableDataSource(this.data); \n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;   \n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.datasource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","<ng-container *ngIf=\"this.addfilter\">\n  <mat-form-field appearance=\"outline\" >\n    <mat-label>Suche</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Suche...\" #input>\n  </mat-form-field>\n</ng-container>\n\n<mat-table [(dataSource)]=\"this.datasource\" matSort class=\"mat-elevation-z0\">\n\n <ng-container *ngFor=\"let thecol of displayedColumns\">\n  <ng-container [matColumnDef]=\"thecol\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{thecol}} </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> \n      <span *ngIf=\"this.outcomes_rate.indexOf(thecol)>=0\">{{element[thecol] | percent }}</span>\n      <span *ngIf=\"this.outcomes_numeric.indexOf(thecol)>=0\">{{element[thecol] | number }}</span>\n      <span *ngIf=\"(this.outcomes_rate.indexOf(thecol)<0) && (this.outcomes_numeric.indexOf(thecol)<0)\">{{element[thecol]}}</span>\n    </mat-cell >\n  </ng-container>\n</ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n<mat-paginator [pageSizeOptions]=\"this.pagesizes\" showFirstLastButtons></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddUserDialog } from './components/addUserDialog';\nimport { UpdateUserDialog } from './components/updateUserDialog';\nimport { DeleteUserDialog } from './components/deleteUserDialog';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthService,\n    private dialog: MatDialog\n  ) { }\n\n  users: any;\n  myRegform: any;\n  myDataUploadform: any;\n  adduser: boolean;\n  newuser: any;\n  adddata: boolean;\n  uploaderror: any;\n  currentuser: any;\n  usergroupoptions = ['kvuser'];\n  selectedDataLevel = []\n  displayedColumns = ['symbol', 'user', 'rights', 'group', 'actions']\n\n  ngOnInit(): void {\n    this.currentuser = this.auth.getUserDetails();\n    this.updateUserList();\n  }\n\n  updateUserList() {\n    this.api.getTypeRequest('users/').subscribe(data => { this.users = data; })\n  }\n\n  copy(item) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', (item));\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n\n    document.execCommand('copy');\n  }\n\n  openAddUserDialog(): void {\n    const dialogRef = this.dialog.open(AddUserDialog, {})\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateUserList()\n    })\n  }\n\n  openUpdateUserDialog(user): void {\n    const dialogRef = this.dialog.open(UpdateUserDialog, {\n      data: user\n    })\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateUserList()\n    })\n  }\n\n  openDeleteUserDialog(user): void {\n    const dialogRef = this.dialog.open(DeleteUserDialog, {\n      data: user\n    })\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateUserList()\n    })\n  }\n\n  toUpperCase(value: string) {\n    return value.toLocaleUpperCase()\n  }\n\n  fullName(value) {\n    if (value.full_name) {\n      return value.full_name\n    }\n    return `${value.anrede} ${value.firstname} ${value.lastname}`\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n  <h1 ngClass.lt-sm=\"mobileheading\">Administration</h1>\n  <div *ngIf=\"!this.adduser && !this.adddata\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\"\n    fxLayoutAlign=\"start space-between\">\n    <div fxFlex=100>\n      <h2>Administrationsaufgaben</h2>\n      <p class=\"mat-caption greycolor\">In diesem Bereich können Dashboard Administratoren (\"Admin\") und\n        Zi-Administratoren (\"Superadmin\") Daten oder Nutzer*innen hinzufügen.</p>\n    </div>\n    <div>\n      <button mat-raised-button (click)=\"openAddUserDialog(userAddDialog)\" color=\"primary\">Nutzer hinzufügen</button>\n    </div>\n  </div>\n  <div *ngIf=\"!this.adduser && !this.adddata\">\n    <h2>Nutzerliste</h2>\n    <p class=\"mat-caption greycolor\">In diesem Bereich können Nutzerberechtigungen geändert werden.</p>\n    <mat-card>\n      <table class=\"table\" mat-table [dataSource]=\"this.users\">\n        <ng-container matColumnDef=\"symbol\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-icon class=\"matListIcon\" color=\"accent\" *ngIf=\"element['roles'].indexOf('superadmin')>=0\"\n              mat-list-icon>\n              admin_panel_settings\n            </mat-icon>\n            <mat-icon *ngIf=\"element['roles'].indexOf('superadmin')<0\" mat-list-icon>\n              account_circle\n            </mat-icon>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"user\">\n          <th mat-header-cell *matHeaderCellDef> Nutzer </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ fullName(element) }}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"rights\">\n          <th mat-header-cell *matHeaderCellDef> Rechte </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-chip-list class=\"smallchips\">\n              <span *ngFor=\"let role of element.roles\">\n                <mat-chip>{{ toUpperCase(role) }}</mat-chip>\n              </span>\n            </mat-chip-list>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"group\">\n          <th mat-header-cell *matHeaderCellDef> Gruppen </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <ng-container *ngIf=\"element['usergroups']\">\n              <mat-chip-list class=\"smallchips\">\n                <span *ngFor=\"let group of element.usergroups.smed_reporting\">\n                  <mat-chip>{{ toUpperCase(group) }}</mat-chip>\n                </span>\n              </mat-chip-list>\n            </ng-container>\n            <ng-container *ngIf=\"!element['usergroups'] || !element['usergroups']['smed_reporting']\">\n              <mat-chip-list class=\"smallchips\">\n                <mat-chip>Public Access</mat-chip>\n              </mat-chip-list>\n            </ng-container>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef> Aktionen </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button>\n              <mat-icon (click)=\"openUpdateUserDialog(element)\" mat-list-icon>\n                settings\n              </mat-icon>\n            </button>\n            <button mat-icon-button>\n              <mat-icon (click)=\"openDeleteUserDialog(element)\" color=\"warn\" mat-list-icon>\n                delete\n              </mat-icon>\n            </button>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </mat-card>\n  </div>\n  <div *ngIf=\"this.adddata\" fxLayout=\"column\" fxLayoutGap=\"10px\" fxShow.lt-md=false>\n    <h2><strong>Daten hinzufügen</strong></h2>\n    <p>Mehr Informationen <a href=\"./assets/docs/Upload_Dateien.html\">hier</a></p>\n    <mat-card>\n      <div>\n        <h3><strong>Was soll hochgeladen werden?</strong></h3>\n        <mat-radio-group [(ngModel)]=\"this.dataintend\">\n          <mat-radio-button value=\"dataupload\">Daten hinzufügen&nbsp;&nbsp;</mat-radio-button>\n          <mat-radio-button *ngIf=\"this.areavalues\" value=\"geodataupload\">Geodaten hinzufügen&nbsp;\n          </mat-radio-button>\n        </mat-radio-group>\n        <br><br>\n      </div>\n      <div *ngIf=\"this.dataintend=='geodataupload'\" fxLayout=\"column\">\n        <div fxFlex=100>\n          <h3><strong>1. GEOJSON Datei hochladen</strong> <span *ngIf=\"this.geojsonfile\">\n              <mat-icon color=\"primary\">check_circle</mat-icon>\n            </span></h3>\n        </div>\n        <div *ngIf=\"!this.geojsonfile\" fxFlex.lt-md=100 fxFlex=50 fxLayout=\"column\">\n          <div fxFlex=100>\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n              <mat-label>Gebiet für Geodatendatei festlegen</mat-label>\n              <mat-select [(value)]=\"this.uploadarea\">\n                <mat-option *ngFor=\"let option of this.areavalues\" [value]=\"option\">{{option}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div fxFlex=100>\n            <input type=\"file\" accept='.geojson' style=\"display: none\" (change)=\"this.changeListenerGEOJSON($event);\"\n              #dataInput>\n            <br><br>\n            <button [disabled]=\"!this.uploadarea\" mat-raised-button color=\"primary\" (click)=\"dataInput.click()\">Daten\n              Auswählen</button>\n          </div>\n        </div>\n        <div *ngIf=\"this.geojsonfile\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n          <div fxFlex=100>\n            <h3><strong>2. GEOJSON beschreiben</strong> <span *ngIf=\"this.geodatafile\">\n                <mat-icon color=\"primary\">check_circle</mat-icon>\n              </span></h3>\n          </div>\n          <div fxFlex=100>\n            <p>Die Datei hat {{this.geojsonfile['features'].length | number}} Regionen.</p>\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n              <mat-label>Wie lautet die Bezeichnung Regionen im geojson?</mat-label>\n              <mat-select [(value)]=\"this.uploadareaid\">\n                <mat-option *ngFor=\"let option of this.areafeatures\" [value]=\"option\">{{option}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"this.dataintend=='dataupload'\">\n        <h3><strong>1. CSV Datei hochladen</strong> <span *ngIf=\"this.datafile\">\n            <mat-icon color=\"primary\">check_circle</mat-icon>\n          </span></h3>\n        <div *ngIf=\"!this.datafile\" fxFlex.lt-md=100 fxFlex=50>\n          <input type=\"file\" accept='.csv' style=\"display: none\" (change)=\"this.datafile=this.changeListener($event);\"\n            #dataInput>\n          <br><br>\n          <button mat-raised-button color=\"primary\" (click)=\"dataInput.click()\">Daten\n            Auswählen</button>\n        </div>\n      </div>\n    </mat-card>\n    <mat-card *ngIf=\"this.metadatafile && this.dataintend=='dataupload'\">\n      <div>\n        <h3><strong>2. Daten beschreiben</strong><span *ngIf=\"this.metadone\">\n            <mat-icon color=\"primary\">check_circle</mat-icon>\n          </span></h3>\n        <p>Bitte prüfen Sie die initinale Zuordnung sorgfältig. Jeder Upload muss mindestens zwei Variablen vom\n          Bereich \"ordering\" enthalten\n          (Typen: level,levelid). Ebenso sollten alle Subgruppenvariablen vom Typ Gruppe sein. Jede Variable\n          aus den Bereichen \"ordering\" oder \"sungroups\" muss Angaben zur Referenzkategorie machen.\n          Zellen für diese Kategorie müssen auch in der Tabelle zu finden sein. Die Variablen aus den\n          Bereichen Outcomes oder\n          Demography sollten vom Typ 'rate' oder 'number' sein. Das Hinzufügen einer Indikatorenbeschreibung\n          ist optional.</p>\n      </div>\n      <div *ngIf=\"(this.datacheck.length>0)\">\n        <mat-list>\n          <h3 matSubheader><strong>Gefundene Fehler:</strong></h3>\n          <mat-list-item *ngFor=\"let hinweis of this.datacheck\">\n            <mat-icon color=\"primary\" mat-list-icon>error</mat-icon>\n            <div mat-line><span class=\"primarycolor\">{{hinweis}}</span></div>\n          </mat-list-item>\n        </mat-list>\n      </div>\n      <div class=\"smalltab\" *ngIf=\"this.metadatafile && !this.metadone\" fxflex=100>\n        <div class=\"tabheader\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n          <div fxFlex=15>Name</div>\n          <div fxFlex=20>Thema</div>\n          <div fxFlex=20>Typ</div>\n          <div fxFlex>Referenzkategorie</div>\n          <div fxFlex=15></div>\n        </div>\n        <div class=\"tabvalues primarycolor\" *ngFor=\"let row of this.metadatafile\" fxLayout=\"row wrap\"\n          fxLayoutGap=\"10px\">\n          <div fxFlex=15><br>{{row.varname}}</div>\n          <div fxFlex=20>\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n              <mat-label>Bereich</mat-label>\n              <mat-select [(value)]=\"row.topic\" (selectionChange)=\"this.checkmetadata()\">\n                <mat-option *ngFor=\"let option of this.topicoptions\" [value]=\"option\">{{option}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div fxFlex=20>\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n              <mat-label>Art</mat-label>\n              <mat-select [(value)]=\"row.type\" (selectionChange)=\"this.checkmetadata()\">\n                <mat-option *ngFor=\"let option of this.typeoptions\" [value]=\"option\">{{option}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div fxFlex>\n            <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)>=0\">\n              <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                <mat-label>Referenzkategorie</mat-label>\n                <mat-select [(value)]=\"row.allforlevel\" (selectionChange)=\"this.checkmetadata()\">\n                  <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\n                    {{option}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\" *ngIf=\"row.type=='level'\">\n                <mat-label>Öffentliche Raumebenen</mat-label>\n                <mat-select [(value)]=\"row.publiclevels\" (selectionChange)=\"this.checkmetadata()\" multiple>\n                  <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\n                    {{option}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </ng-container>\n            <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)<0\">\n            </ng-container>\n          </div>\n          <div fxFlex=15>\n            <mat-chip-list>\n              <mat-chip color=\"primary\" (change)=\"this.checkmetadata()\" [selected]=\"row.public\"\n                (click)=\"row.public=!row.public\">\n                <span *ngIf=\"row.public\">Öffentlich</span>\n                <span *ngIf=\"!row.public\">Privat</span>\n              </mat-chip>\n              <mat-chip color=\"primary\" [selected]=\"row.adddescr\" (click)=\"row.adddescr=!row.adddescr\">\n                Beschreibung\n              </mat-chip>\n            </mat-chip-list>\n          </div>\n          <div *ngIf=\"row.adddescr\" fxFlex=100>\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n              <mat-label>Indikatorenbeschreibung</mat-label>\n              <textarea style=\"color:black\" [(ngModel)]=\"row.description\" matInput rows=\"10\" cols=\"40\"></textarea>\n            </mat-form-field>\n          </div>\n        </div>\n        <div>\n          <div><button mat-raised-button [disabled]=\"!(this.datacheck.length==0)\" (click)=\"this.metadone=true\"\n              color=\"accent\">Beschreibung\n              Fertig</button>\n          </div>\n        </div>\n      </div>\n    </mat-card>\n    <div *ngIf=\"this.metadone\">\n      <mat-card>\n        <h3><strong>3. Sollen die aktuellen Daten überschrieben werden?</strong></h3>\n        <p>\n          <mat-slide-toggle [(ngModel)]=\"this.replacedata\"></mat-slide-toggle>\n          <span style=\"color:crimson;\" *ngIf=\"this.replacedata\">überschreiben</span>\n          <span *ngIf=\"!this.replacedata\">nicht überschreiben.</span>\n        </p>\n        <p *ngIf=\"!this.replacedata\"><em>Achtung: Das Ergänzen der Daten ist aufwändig und erfordert ggf. viel\n            Zeit. Bitte ergänzen Sie nur kleine Datenkörper!</em>\n        </p>\n      </mat-card>\n    </div>\n    <div class=\"add-margin\" fxLayoutAlign=\"space-between\" *ngIf=\"(!this.uploadres || this.uploadres=='error')\">\n      <div><button mat-raised-button (click)=\"uploadnewdata()\" [disabled]=\"(!this.metadone) && (!this.uploadareaid)\"\n          color=\"accent\">Hinzufügen\n        </button></div>\n      <div><button mat-raised-button (click)=\"this.resetall();\" color=\"primary\">Abbrechen</button></div>\n    </div>\n    <div *ngIf=\"this.uploadres\">\n      <mat-card>\n        <h1>Datenupload</h1>\n        <mat-spinner *ngIf=\"this.uploadres=='pending'\" [diameter]=\"50\"></mat-spinner>\n        <p *ngIf=\"this.uploadres=='pending'\">Hinweis: Bitte haben Sie Geduld: Es kann etwas dauern wenn viele\n          Daten aktualisiert oder gelöscht werden müssen.</p>\n        <p *ngIf=\"this.uploadres=='success'\">\n          <strong>Upload erfolgreich!</strong>\n        </p>\n        <p *ngIf=\"this.uploadres=='error'\">\n          <strong>Fehler beim Upload</strong> Fehlermeldung: <span class=\"primarycolor\">{{this.uploaderror}}</span>\n        </p>\n      </mat-card>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'addUserDialog',\n  templateUrl: 'addUserDialog.html'\n})\n\nexport class AddUserDialog implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<AddUserDialog>,\n    private api: ApiService,\n    private fb: FormBuilder,\n  ) { }\n\n  myRegform: any;\n  usergroupoptions = [{ name: 'Public Access', value: 'public' }, { name: 'KV Benutzer', value: 'kvuser' }];\n  userRights = [{ name: 'User', value: 'user' }, { name: 'Admin', value: 'admin' }, { name: 'Superadmin', value: 'superadmin' }]\n  salutations = ['Herr', 'Frau', 'Frau Dr.', 'Herr Dr.', 'Dr.', ' ']\n\n  ngOnInit(): void {\n    // this.currentuser = this.auth.getUserDetails();\n    this.buildForm();\n    this.getUserGroups()\n  }\n\n  addUser() {\n    const userDataAdd = this.myRegform.value;\n    this.api.postTypeRequest(\"newuser\", userDataAdd).subscribe(\n      data => { }\n    );\n  }\n\n  async getUserGroups(): Promise<void> {\n    const metaData: Array<any> = await this.api.getmetadata(\"metadata\")\n    const getLevelId = metaData.filter(item => item.varname === 'levelid')[0]\n    const levelRights = getLevelId.levelrights\n\n    if (levelRights) {\n      const getCustomerLevels = Object.keys(levelRights)\n        .filter((key) => !key.includes('kvuser') && !key.includes('public'))\n        .reduce((cur, key) => {\n          return Object.assign(cur, { [key]: levelRights[key] })\n        }, {})\n\n      const levelKeys = Object.keys(getCustomerLevels)\n\n      for (const level of levelKeys) {\n        this.usergroupoptions.push({ name: level, value: level })\n      }\n    }\n  }\n\n  buildForm() {\n    this.myRegform = new FormGroup({\n      anrede: new FormControl({ value: '', disabled: false }, Validators.required),\n      firstname: new FormControl({ value: '', disabled: false }, Validators.required),\n      lastname: new FormControl({ value: '', disabled: false }, Validators.required),\n      email: new FormControl({ value: '', disabled: false }, Validators.required),\n      roles: new FormControl({ value: '', disabled: false }, Validators.required),\n      dataLevel: new FormControl({ value: '', disabled: false }, Validators.required),\n      password: new FormControl({ value: '', disabled: false }, [Validators.required, Validators.minLength(12)])\n    })\n\n    this.myRegform.patchValue({ \"password\": this.randomPassword() });\n  };\n\n  randomPassword() {\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close()\n  }\n}","<div fxLayout=\"row wrap\">\n  <div fxFlex=100>\n    <h2><strong>Nutzer hinzufügen</strong></h2>\n    <mat-card>\n      <form autocomplete=\"on\" [formGroup]=\"myRegform\">\n        <h2><strong>Informationen</strong></h2>\n        <h4><strong>Name</strong>:</h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-label>Anrede</mat-label>\n          <mat-select name=\"anredefeld\" formControlName=\"anrede\" required>\n            <mat-option *ngFor=\"let salutation of salutations\" [value]=\"salutation\">\n              {{ salutation === ' ' ? 'keine Anrede' : salutation }}\n            </mat-option>\n          </mat-select>\n          <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n          <mat-label>Vorname</mat-label>\n          <input matInput placeholder=\"First name\" name=\"fname\" formControlName=\"firstname\">\n          <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n          <mat-label>Nachname</mat-label>\n          <input matInput placeholder=\"Last Name\" name=\"lname\" formControlName=\"lastname\">\n          <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\n        </mat-form-field>\n        <h4><strong>E-Mail</strong> des neuen Nutzers</h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n          <mat-icon matSuffix>email</mat-icon>\n          <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\n        </mat-form-field>\n        <h4><strong>Rechte</strong></h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-select name=\"roles\" formControlName=\"roles\">\n            <mat-option *ngFor=\"let rights of userRights\" [value]=\"rights.value\">\n              {{ rights.name }}\n            </mat-option>\n          </mat-select>\n          <mat-error>Bitte wählen Sie eine Bereichtungsstufe aus.</mat-error>\n        </mat-form-field>\n        <h4><strong>Daten-Level</strong></h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-select multiple name=\"dataLevel\" formControlName=\"dataLevel\">\n            <mat-option *ngFor=\"let dataLevel of usergroupoptions\" [value]=\"dataLevel.value\">\n              {{ dataLevel.name }}\n            </mat-option>\n          </mat-select>\n          <mat-error>Bitte wählen Sie mindestens ein Datenlevel aus.</mat-error>\n        </mat-form-field>\n        <h4>Initiales <strong>Passwort</strong>:</h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-label>Passwort</mat-label>\n          <mat-error>Passwort zu kurz</mat-error>\n          <input matInput type=\"string\" formControlName=\"password\" required>\n          <mat-hint>Bitte kopieren Sie das Passwort</mat-hint>\n          <mat-hint *ngIf=\"this.myRegform.value.password.length<12\">Ihr Passwort (mindestens 12 Zeichen).\n          </mat-hint>\n        </mat-form-field>\n      </form>\n    </mat-card>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <button mat-raised-button (click)=\"onNoClick()\" color=\"warn\">Abbrechen</button>\n    <button [disabled]=\"this.myRegform.value.password.length<12\" mat-raised-button (click)=\"this.addUser();\"\n      color=\"primary\">Hinzufügen</button>\n  </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'deleteUserDialog',\n  templateUrl: 'deleteUserDialog.html'\n})\n\nexport class DeleteUserDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteUserDialog>,\n    private api: ApiService,\n    @Inject(MAT_DIALOG_DATA)\n    public data: any\n  ) { }\n\n  deletUser() {\n    alert('delete')\n    // open dialog to reinsure it wasn't a mistake\n    // this.api.deleteuser(user).subscribe(\n    //   data => { this.updateUserList() });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close()\n  }\n}","<h2><strong>Nutzer Löschen</strong></h2>\n<mat-card>\n  <p>Sind Sie sicher dass Sie den User {{ data.firstname }} löschen wollen?</p>\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <button mat-raised-button (click)=\"onNoClick()\">Abrechen</button>\n    <button mat-raised-button (click)=\"deletUser()\">Löschen</button>\n  </div>\n</mat-card>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'updateUserDialog',\n  templateUrl: 'updateUserDialog.html',\n  styleUrls: ['./updateUserDialog.scss']\n})\n\nexport class UpdateUserDialog implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<UpdateUserDialog>,\n    private api: ApiService,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA)\n    public data: any\n  ) { }\n\n  users: any;\n  myRegform: any;\n  userGroupOptions = [{ name: 'Public Access', value: 'public', selected: false }, { name: 'KV Benutzer', value: 'kvuser', selected: false }];\n  userRights = [{ name: 'User', value: 'user', selected: false }, { name: 'Admin', value: 'admin', selected: false }, { name: 'Superadmin', value: 'superadmin', selected: false }]\n  salutations = ['Herr', 'Frau', 'Frau Dr.', 'Herr Dr.', 'Dr.', ' ']\n\n  ngOnInit(): void {\n    // this.currentuser = this.auth.getUserDetails();\n    this.buildForm();\n    this.getUserGroups()\n  }\n\n  async getUserGroups(): Promise<void> {\n    const metaData: Array<any> = await this.api.getmetadata(\"metadata\")\n    const getLevelId = metaData.filter(item => item.varname === 'levelid')[0]\n    const levelRights = getLevelId.levelrights\n\n    if (levelRights) {\n      const getCustomerLevels = Object.keys(levelRights)\n        .filter((key) => !key.includes('kvuser') && !key.includes('public'))\n        .reduce((cur, key) => {\n          return Object.assign(cur, { [key]: levelRights[key] })\n        }, {})\n\n      const levelKeys = Object.keys(getCustomerLevels)\n\n      for (const level of levelKeys) {\n        this.userGroupOptions.push({ name: level, value: level, selected: false })\n      }\n    }\n\n    this.rights()\n    this.dataLevel()\n  }\n\n  rights() {\n    for (let role of this.data.roles) {\n      for (let rights of this.userRights) {\n        if (role === rights.value) {\n          rights.selected = true\n        }\n        if (this.data.is_admin && rights.value === 'admin') {\n          rights.selected = true\n        }\n      }\n    }\n\n    return this.userRights\n  }\n\n  dataLevel() {\n    for(let group of this.data.usergroups.smed_reporting) {\n      for(let group_ of this.userGroupOptions) {\n        if(group === group_.value) {\n          group_.selected = true\n        }\n      }\n    }\n\n    return this.userGroupOptions\n  }\n\n  updateUserRole(type, user, key, value) {\n    if (type === 'role') {\n      if (value === 'user') {\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\n\n        this.api.updateuser(user.email, value, !user['is_user']).subscribe()\n      }\n      if (value === 'admin') {\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\n\n        this.api.updateuser(user.email, value, !user['is_admin']).subscribe()\n      }\n      if (value === 'superadmin') {\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\n\n        this.api.updateuser(user.email, value, !user['is_superadmin']).subscribe()\n      }\n    }\n  }\n\n  updateUserDataLevel(type, user, key, value) {\n    let add = false\n\n    if (value !== 'public') {\n      add = true\n    }\n\n    this.userGroupOptions.filter(i => { if (i.value === value) i.selected = !i.selected })\n\n    this.api.updateuser(user, key, add, value).subscribe()\n  }\n\n  buildForm() {\n    this.myRegform = new FormGroup({\n      anrede: new FormControl({ value: this.data.anrede, disabled: true }),\n      firstname: new FormControl({ value: this.data.firstname, disabled: true }),\n      lastname: new FormControl({ value: this.data.lastname, disabled: true }),\n      email: new FormControl({ value: this.data.email, disabled: true }),\n      roles: new FormControl({ value: this.data.roles[this.data.roles.length - 1], disabled: false }),\n      dataLevel: new FormControl({ value: this.data.usergroups ? this.data.usergroups.smed_reporting : [], disabled: false }),\n    })\n  };\n\n  randomPassword() {\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\n  }\n\n  changePassword(user, pwd) {\n    this.api.changeuserpwd(user, pwd).subscribe(data => { })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close()\n  }\n}","<div fxLayout=\"row wrap\">\n  <div fxFlex=100>\n    <!-- {{ data | json }} -->\n    <h2><strong>Nutzer Bearbeiten</strong></h2>\n    <mat-card>\n      <form autocomplete=\"on\" [formGroup]=\"myRegform\">\n        <h2><strong>Informationen</strong></h2>\n        <h4><strong>Name</strong>:</h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-label>Anrede</mat-label>\n          <mat-select name=\"anredefeld\" formControlName=\"anrede\">\n            <mat-option *ngFor=\"let salutation of salutations\" [value]=\"salutation\">\n              {{ salutation === ' ' ? 'keine Anrede' : salutation }}\n            </mat-option>\n          </mat-select>\n          <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-label>Vorname</mat-label>\n          <input matInput placeholder=\"First name\" name=\"fname\" formControlName=\"firstname\">\n          <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n          <mat-label>Nachname</mat-label>\n          <input matInput placeholder=\"Last Name\" name=\"lname\" formControlName=\"lastname\">\n          <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\n        </mat-form-field>\n        <h4><strong> E-Mail</strong></h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n          <mat-icon matSuffix>email</mat-icon>\n          <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\n        </mat-form-field>\n        <h4><strong>Rechte</strong></h4>\n        <mat-chip-list class=\"smallchips\">\n          <mat-chip color=\"primary\" *ngFor=\"let right of userRights\" [value]=\"right.value\"\n            (click)=\"updateUserRole('role', data, 'user', right.value)\">\n            <mat-icon matListIcon *ngIf=\"right.selected\">check</mat-icon>\n            {{ right.name }}\n          </mat-chip>\n        </mat-chip-list>\n        <h4><strong>Daten-Level</strong></h4>\n        <mat-chip-list class=\"smallchips\">\n          <mat-chip color=\"primary\" *ngFor=\"let dataLevel of userGroupOptions\" [value]=\"dataLevel.value\"\n            (click)=\"updateUserDataLevel('dataLevel', data.email, 'usergroups', dataLevel.value)\">\n            <mat-icon matListIcon *ngIf=\"dataLevel.selected\">check</mat-icon>\n            {{ dataLevel.name }}\n          </mat-chip>\n        </mat-chip-list>\n      </form>\n    </mat-card>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <!-- <button mat-raised-button (click)=\"onNoClick()\" color=\"warn\">Abbrechen</button> -->\n    <button mat-raised-button (click)=\"onNoClick()\" color=\"primary\">Schließen</button>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \n\n \n@Component({ \n  selector: 'app-login', \n  templateUrl: './login.component.html', \n  styleUrls: ['./login.component.scss'] \n}) \nexport class LoginComponent implements OnInit { \n  form: FormGroup \n  constructor( \n    private _api : ApiService, \n    private _auth: AuthService, \n    private router: Router, \n    public fb: FormBuilder \n    \n    \n  ) { }\n  loggedin:boolean; \n  login_pending:boolean;\n  loginerror:boolean;\n\n\n \n  ngOnInit(): void { \n    this.login_pending = false;\n    this.form = this.fb.group({ \n      username: ['', Validators.required], \n      password:['', Validators.required] \n    }); \n    if(this._auth.getToken()){this.loggedin=true;}\n  } \n \n  login(){\n    this.login_pending = true;\n    this._auth.login(this.form.value).subscribe(data => {\n      setTimeout(()=>{\n        this.loggedin=true; \n        this.router.navigate(['/']);\n      },750);    \n      \n    },error => {\n      this.loginerror = true;\n    });\n    this.login_pending = false;\n  }\n  \n  logout(){\n    this._auth.logout();    \n    this.router.navigate(['/']);\n  }\n \n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div fxFlex=100 style=\"max-width: 500px;\" *ngIf=\"!this.loggedin\">\n        <mat-card>\n            <form  [formGroup]='form' (ngSubmit)='login()'>\n                <h1>Login</h1>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>E-Mail</mat-label>\n                    <input matInput type=\"email\" placeholder=\"Email\" name=\"email\" formControlName='username' autocomplete=\"false\" required>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>Kennwort</mat-label>\n                    <input matInput type=\"password\" name=\"current-password\" formControlName='password' required autocomplete=\"false\">\n                </mat-form-field>\n                <div *ngIf=\"!this.login_pending\" fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n                    <div>\n                        <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"logout()\">\n                            Abbrechen\n                        </button>\n                    </div>\n                    <div>\n                        <button mat-raised-button color=\"primary\" type='submit' [disabled]='!this.form.valid' >\n                            Login\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"this.login_pending\">\n                    ... in Bearbeitung ... \n                </div>\n                <div *ngIf=\"this.loginerror\">\n                    <p style=\"color:crimson;\">Falscher Benutzername/Falsches Kennwort</p>\n                </div>\n            </form>\n        </mat-card>\n    </div>\n\n    <div *ngIf=\"this.loggedin\">\n        You're in!\n        <button mat-raised-button color=\"accent\" (click)=\"logout()\">\n            Ausloggen\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CsvexportService } from 'src/app/services/csvexport.service';\n\n@Component({\n  selector: 'app-private',\n  templateUrl: './private.component.html',\n  styleUrls: ['./private.component.scss']\n})\nexport class PrivateComponent implements OnInit {\n  constructor(private api: ApiService, private auth: AuthService, private csv: CsvexportService) { }\n  tsquery = {};\n  tsqueryresult = {};\n  bevrefdata = {};\n  colorsscheme;\n  restablecols = [];\n  progress = false;\n  settings: any;\n  duration: number;\n  levelvalues = [\n    'Gesamt',\n    'Baden-Württemberg',\n    'Bayern',\n    'Berlin',\n    'Brandenburg',\n    'Bremen',\n    'Hamburg',\n    'Hessen',\n    'Mecklenburg-Vorpommern',\n    'Niedersachsen',\n    'Nordrhein-Westfalen',\n    'Nordrhein',\n    'Westfalen-Lippe',\n    'Rheinland-Pfalz',\n    'Saarland',\n    'Sachsen',\n    'Sachsen-Anhalt',\n    'Schleswig-Holstein',\n    'Thüringen'];\n  outcomes = [\n    //'Anteil Assessments', \n    'Anzahl Assessments',\n    //'Anzahl Assessments je 100 Tsd. Einw.', ## Not possible due to missing reference data\n    'Anzahl Beschwerden pro Assessment',\n    'Anzahl Fragen je Assessment',\n    'Mittlere Dauer je Assessment',\n    'Mittlere Dauer Disposition',\n    //'Anteil Assessment an Disposition',\n    //'Häufigste Beschwerden',\n    //'Häufigste Hauptbeschwerden'\n  ]\n\n  diffmerkmale = [\n    'KV',\n    'Alter',\n    'Geschlecht',\n    'Wochentag',\n    'Empfehlung Dringlichkeit',\n    'Empfehlung Ort',\n    'Entscheidung Dringlichkeit',\n    'Entscheidung Ort',\n    'Hauptbeschwerde',\n    'Beschwerde'\n  ];\n\n  diffvars = {\n    'KV': 'levelid',\n    'Alter': ['ALTER_id', 'ALTER_text'],\n    'Geschlecht': ['Geschlecht'],\n    'Wochentag': [],\n    'Empfehlung Dringlichkeit': ['TTTsmed_id', 'TTTsmed_text'],\n    'Empfehlung Ort': ['POCsmed_id', 'POCsmed_text'],\n    'Entscheidung Dringlichkeit': ['TTTdispo_id', 'TTTdispo_text'],\n    'Entscheidung Ort': ['POCdispo_id', 'POCdispo_text'],\n    'Hauptbeschwerde': ['Hauptbeschwerde'],\n    'Beschwerde': ['Beschwerden_gesamt']\n  }\n\n  SmED_Modul: string = \"Alle\";\n  SmED_Level: string = \"Alle\";\n\n  isSingleDayAnalyses = false\n\n  ngOnInit(): void {\n    this.colorsscheme = this.api.makescale(5);\n    //console.log('colors',this.colorsscheme);\n    this.settings = { 'analyzeall': true, 'level': 'KV', 'levelid': 'Gesamt', 'diffmerkmale': [] };\n    //testesttings\n    this.settings = {\n      \"analyzeall\": true, \"level\": \"KV\", \"levelid\": \"Gesamt\", \"diffmerkmale\": [],\n      \"start\": new Date(\"2022-01-02\"),\n      \"end\": new Date(\"2022-01-08\"), \"outcome\": \"Anzahl Assessments\"\n    };\n\n    this.timeseriesquery();\n  }\n\n  updatequery(key, value) {\n    //console.log(\"Settings changed\");\n    if (key != \"__change\" && key != \"diffmerkmale\") { this.settings[key] = value };\n\n    if (key == \"levelid\" && value == \"Gesamt\") { this.settings['analyzeall'] = true; };\n\n    if (key == 'outcome' && value == 'Anzahl Assessments je 100 Tsd. Einw.') {\n      this.settings['diffmerkmale'] = [];\n    }\n\n    if (key == 'diffmerkmale') {\n      if (this.settings['diffmerkmale'].includes(value)) {\n        this.settings['diffmerkmale'] = this.settings['diffmerkmale'].filter(function (item) { return item !== value });\n      }\n      else {\n        if (!this.settings['diffmerkmale'].includes(value) && this.settings['diffmerkmale'].length < 2) {\n          if (!((this.settings['outcome'] == 'Anzahl Assessments je 100 Tsd. Einw.') && ['Alter', 'Geschlecht'].includes(value)))\n            this.settings['diffmerkmale'].push(value);\n        };\n      };\n    }\n\n    if (key == 'SmED_Modul') {\n      this.SmED_Modul = value;\n    }\n\n    if (key == 'SmED_Level') {\n      this.SmED_Level = value;\n    }\n\n    if (this.checkparams()) {\n      this.timeseriesquery();\n    }\n  }\n\n  checkparams() {\n    let res = true;\n    this.duration = 0;\n\n    if (this.settings['start'] && this.settings['end']) {\n      this.duration = (this.settings['end'] - this.settings['start']) / 1000 / 60 / 60 / 24;\n    };\n\n    if (this.duration == 0 || this.duration > 90) {\n      res = false;\n    };\n\n    if (!this.settings['outcome']) {\n      res = false;\n    }\n\n    return res;\n  }\n\n  timeseriesquery() {\n    this.progress = true;\n    this.tsqueryresult = [];\n\n    let _start = new Date(this.settings['start'])\n    let _end = new Date(this.settings['end'])\n\n    if(this.isSingleDayAnalyses) {\n      _end = _start\n    }\n    \n    function setDate(date) {\n      const minutesOffset = new Date(date.setMinutes(date.getMinutes() - date.getTimezoneOffset()))\n      \n      return minutesOffset.toISOString().substring(0, 10);\n    }\n    \n    let start = \"\";\n    \n    if (this.settings['start']) { start = setDate(_start) };\n    \n    let end = \"\";\n\n    if (this.settings['end']) { end = setDate(_end) };\n\n    this.tsqueryresult = {};\n    this.bevrefdata = {};\n    this.tsquery = {\n      \"startdate\": start.slice(0, 10),\n      \"stopdate\": end.slice(0, 10),\n      \"timeframe\": \"none\",\n      \"outcome\": NaN,\n      \"filterlist\":\n        { 'level': 'KV' }\n      ,\n      \"subgroups\": [],\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID\n    };\n\n    if (this.settings['levelid'] != \"Gesamt\") { this.tsquery['filterlist']['levelid'] = this.settings['levelid'] };\n\n    for (let item of this.settings['diffmerkmale']) {\n      this.tsquery['subgroups'] = this.tsquery['subgroups'].concat(this.diffvars[item]);\n    };\n\n    if (this.settings['diffmerkmale'].includes('Wochentag')) {\n      this.tsquery['timeframe'] = 'weekday';\n    };\n\n    if ('Anzahl Beschwerden pro Assessment' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"Anzahl_Beschwerden\";\n    };\n\n    if ('Anzahl Fragen je Assessment' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"Anzahl_Fragen\";\n    };\n\n    if ('Mittlere Dauer je Assessment' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"DAUERsmed\";\n    };\n\n    if ('Mittlere Dauer Disposition' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"DAUERdispo\";\n      this.tsquery[\"filterlist\"]['DAUERdispo'] = { $gte: 0 }\n    };\n\n    if ('Anteil Assessment an Disposition' == this.settings['outcome']) {\n      // later 2 Queries need to be done, one for DAUERsmed and one DAUERdispo\n      // console.log(\"Not implemented yet!\");\n    };\n\n    if ('Häufigste Beschwerden' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"Beschwerden_gesamt\";\n    };\n    \n    if ('Häufigste Hauptbeschwerden' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"Hauptbeschwerde\";\n    };\n\n    this.restablecols = this.settings['diffmerkmale'].concat([this.tsquery['outcome'], 'Anzahl', 'Anteil']);\n\n    if (!this.tsquery['outcome']) {\n      this.restablecols = this.settings['diffmerkmale'].concat(['Anzahl', 'Anteil']);\n    }\n\n    // Level/Modul\n    if (this.SmED_Level != \"Alle\") {\n      if (this.SmED_Level != \"Patient\") {\n        this.tsquery[\"filterlist\"]['SMED_Level'] = this.SmED_Level;\n      }\n      else {\n        this.tsquery[\"filterlist\"]['SMED_Level'] = 'pubusersmed';\n      }\n    }\n\n    if (this.SmED_Modul != \"Alle\") {\n      this.tsquery[\"filterlist\"]['SMED_Modul'] = this.SmED_Modul;\n    }\n\n    this.api.postTypeRequest('get_data/', {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {\n        \"level\": \"KV\", \"levelid\": this.settings['levelid'],\n        \"Jahr\": parseInt(this.tsquery['stopdate'].slice(0, 4)),\n        \"Monat\": parseInt(this.tsquery['stopdate'].slice(5, 7))\n      },\n      \"showfields\": ['level', 'levelid', 'Jahr', 'Monat', 'KM6Versicherte', 'BEVSTAND']\n    }).subscribe(data => {\n      this.bevrefdata = data['data'][0];\n      this.api.postTypeRequest('analytics/timeseries/', this.tsquery).subscribe(data => { this.tsqueryresult = this.preparedata(data); });\n    });\n  }\n\n  preparedata(input) {\n    let output = [];\n\n    if (input.length > 0) {\n      let allitems = this.api.sumArray(this.api.getValues(input, 'count'));\n\n      for (let item of input) {\n        //item['Bev']=this.bevrefdata['BEVSTAND'];        \n        if (parseFloat(item['count']) > 0) {\n          item['Anzahl'] = item['count'];\n          item['Anteil'] = Math.round(1000 * item['count'] / allitems) / 1000;\n        }\n\n        //item['Je100Tsd']=Math.round(1e6*item['count']/item['Bev'])/10;\n        item['Alter'] = item['ALTER_text'];\n        item['Wochentag'] = this.api.getweekdayname(item['timeframe'], true);\n        item['KV'] = item['levelid'];\n\n        if (item['POCsmed_text']) {\n          item['Empfehlung Ort'] = item['POCsmed_text'];\n        };\n\n        if (item['TTTsmed_text']) {\n          item['Empfehlung Dringlichkeit'] = item['TTTsmed_text'];\n        };\n\n        if (item['POCdispo_text']) {\n          item['Entscheidung Ort'] = item['POCdispo_text'];\n        };\n\n        if (item['TTTdispo_text']) {\n          item['Entscheidung Dringlichkeit'] = item['TTTdispo_text'];\n        };\n\n        if (item['Beschwerden_gesamt']) {\n          item['Beschwerde'] = item['Beschwerden_gesamt'];\n          delete item['Beschwerden_gesamt'];\n        };\n\n        if (item['Anzahl']) {\n          output.push(item);\n        };\n      }\n\n      if (this.settings['diffmerkmale'].includes('Alter')) {\n        output = this.api.sortArray(output, 'ALTER_id');\n      }\n    }\n\n    this.progress = false;\n\n    return output;\n  }\n\n  exportascsv(name, data) {\n    this.csv.exportToCsv(name, data);\n    this.csv.exportToCsv(name + \"_settings.csv\", [this.settings]);\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"30px\">\n  <div>\n    <h1 ngClass.lt-sm=\"mobileheading\">Tool für erweiterte Analysen</h1>\n    <p class=\"lightgreycolor\">In diesem Bereich nur für KV-Mitarbeiter ist ein Zugriff auf faktisch anonymisierte\n      Individualdatensätze möglich.\n      <span style=\"color:white;\">Bitte beachten Sie, dass die unstandardisierten Abfragen in diesem Bereich ggf. etwas\n        länger dauern.</span>.\n    </p>\n  </div>\n  <div *ngIf=\"true\">\n    <div>\n      <div>\n        <mat-form-field appearance=\"fill\" *ngIf=\"!this.isSingleDayAnalyses\">\n          <mat-label>Analysezeitraum</mat-label>\n          <mat-date-range-input [rangePicker]=\"picker\">\n            <input matStartDate placeholder=\"Beginn\" (dateChange)=\"this.updatequery('__change',true)\"\n              [(ngModel)]=\"this.settings['start']\">\n            <input matEndDate placeholder=\"Ende\" (dateChange)=\"this.updatequery('__change',true)\"\n              [(ngModel)]=\"this.settings['end']\">\n          </mat-date-range-input>\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-date-range-picker #picker></mat-date-range-picker>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" *ngIf=\"this.isSingleDayAnalyses\">\n          <mat-label>Analysezeitraum</mat-label>\n          <input matInput [matDatepicker]=\"picker\" (dateChange)=\"this.updatequery('__change',true)\"\n            [(ngModel)]=\"this.settings['start']\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-slide-toggle [(ngModel)]=\"isSingleDayAnalyses\" style=\"padding-bottom: 15px;\">\n          ein Tag Analyse\n        </mat-slide-toggle>\n      </div>\n      <p *ngIf=\"this.duration>64\" class=\"accentcolor\">\n        Die maximale Länge des Analysezeitraums beträgt 64 Tage. Ihre Anfrage kann nicht ausgeführt werden.\n      </p>\n      <p *ngIf=\"(this.duration>7 && this.duration<=64) && (this.settings['levelid']=='Gesamt')\"\n        class=\"mat-caption greycolor\">\n        Bitte beachten Sie, aufgrund der großen Zahl betroffener Datensätze kann es zu einer verzögerten Auswertung\n        kommen.\n      </p>\n    </div>\n    <div>\n      <h3>Region</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.updatequery('levelid',item);\" *ngFor=\"let item of this.levelvalues\"\n            [selected]=\"(this.settings['levelid']==item)\" color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div>\n      <h3>Level</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.updatequery('SmED_Level',item);\"\n            *ngFor=\"let item of ['Alle','Telefon','Tresen','Patient']\" [selected]=\"(this.SmED_Level==item)\"\n            color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n      <p class=\"mat-caption lightgreycolor\" *ngIf=\"this.SmED_Level=='Patient'\">Hinweis Assessments mit SmED-Patient sind\n        ab dem 6.12.21 enthalten. Sie können aktuell noch nicht KVen zugeordnet werden. Bitte wählen Sie \"Gesamt\" als\n        Region aus.</p>\n      <h3>Modul</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.updatequery('SmED_Modul',item);\"\n            *ngFor=\"let item of ['Alle','SmED-Triage','SmED-COVID-kurz','SmED-COVID-integriert','SmED-Kontakt+']\"\n            [selected]=\"(this.SmED_Modul==item)\" color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div>\n      <h3>Outcome</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.updatequery('outcome',item);\" *ngFor=\"let item of this.outcomes\"\n            [selected]=\"(this.settings['outcome']==item)\" color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div *ngIf=\"this.settings['outcome']\">\n      <h3>Differenzierungsmerkmale <span class=\"lightgreycolor\">(max. 2 Merkmale möglich)</span></h3>\n      <p>\n        <mat-chip-list multiple>\n          <mat-chip (click)=\"this.updatequery('diffmerkmale',item);\" *ngFor=\"let item of this.diffmerkmale\"\n            [selected]=\"(this.settings['diffmerkmale'].includes(item))\" color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div *ngIf=\"this.progress\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <div *ngIf=\"this.tsqueryresult.length==0\">\n      <p>Keine Ergebnisse zur Anzeige</p>\n    </div>\n    <div *ngIf=\"this.settings['diffmerkmale'].length==0 && this.tsqueryresult.length>0\">\n\n\n      <div>\n        <app-box [value]=\"this.tsqueryresult[0]['count']\" [numberformat]=\"'1.0-0'\"\n          [maincolor]=\"this.colorsscheme[4].concat('80')\"\n          [description]=\"'Assessments in '.concat(this.settings['levelid'])\"></app-box>\n      </div>\n      <div *ngIf=\"this.tsqueryresult[0]['DAUERsmed']\">\n        <app-box [value]=\"this.tsqueryresult[0]['DAUERsmed']\" [numberformat]=\"'1.0-0'\"\n          [maincolor]=\"this.colorsscheme[2].concat('80')\" [description]=\"'Mittlere Dauer SmED'\"></app-box>\n      </div>\n      <div *ngIf=\"this.tsqueryresult[0]['DAUERdispo']\">\n        <app-box [value]=\"this.tsqueryresult[0]['DAUERdispo']\" [numberformat]=\"'1.0-0'\"\n          [maincolor]=\"this.colorsscheme[2].concat('80')\" [description]=\"'Mittlere Dauer Disposition'\"></app-box>\n      </div>\n      <div *ngIf=\"this.tsqueryresult[0]['Anzahl_Fragen']\">\n        <app-box [value]=\"this.tsqueryresult[0]['Anzahl_Fragen']\" [numberformat]=\"'1.0-0'\"\n          [maincolor]=\"this.colorsscheme[1].concat('80')\" [description]=\"'Mittlere Anzahl Fragen SmED'\"></app-box>\n      </div>\n\n\n\n\n    </div>\n    <div *ngIf=\"this.settings['diffmerkmale'].length==1 && this.tsqueryresult.length>0\" fxLayout=\"row wrap\">\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n        <mat-card>\n          <h3>Anzahl Assessments</h3>\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n            [outcomes]=\"['count']\" plottype=\"bar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n        <mat-card>\n          <h3>Anteil Assessments</h3>\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"['#d0f321']\" [outcomes]=\"['Anteil']\" [percent]=\"true\" plottype=\"bar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"(this.tsqueryresult.length>0) && \n                    (this.tsquery['outcome']) || (this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                    || (this.settings['diffmerkmale'].includes('Beschwerde'))\n                    \">\n        <mat-card>\n          <h3>{{this.settings['outcome']}}</h3>\n          <ng-container *ngIf=\"!(this.settings['diffmerkmale'].includes('Hauptbeschwerde')) &&\n                        !(this.settings['diffmerkmale'].includes('Beschwerde'))\">\n            <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n              [colorscheme]=\"['orange']\" [outcomes]=\"[this.tsquery['outcome']]\" plottype=\"bar\"></app-plot>\n          </ng-container>\n          <ng-container *ngIf=\"(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                        || (this.settings['diffmerkmale'].includes('Beschwerde'))\">\n            <app-table [(data)]=\"this.tsqueryresult\" [outcomes_rate]=\"['Anteil']\"\n              [columns]=\"this.restablecols\"></app-table>\n          </ng-container>\n\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n\n\n\n\n    </div>\n    <div *ngIf=\"this.settings['diffmerkmale'].length==2 && this.tsqueryresult.length>0\" fxLayout=\"row wrap\">\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n        <mat-card>\n          <h3>Anzahl Assessments</h3>\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n            [outcomes]=\"['count']\" [colorby]=\"this.settings['diffmerkmale'][1]\" plottype=\"bar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n        <mat-card>\n          <h3>Anteil Assessments</h3>\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"['#d0f321']\" [colorby]=\"this.settings['diffmerkmale'][1]\" [outcomes]=\"['Anteil']\"\n            [percent]=\"true\" plottype=\"bar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"(this.tsqueryresult.length>0) && (this.tsquery['outcome']\n                    || ((this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                    || (this.settings['diffmerkmale'].includes('Beschwerde')))\n                    )\">\n        <mat-card>\n          <h3>{{this.settings['outcome']}}</h3>\n          <ng-container *ngIf=\"!(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                        && !(this.settings['diffmerkmale'].includes('Beschwerde'))\">\n            <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\"\n              [colorby]=\"this.settings['diffmerkmale'][1]\" [fontcolor]=\"'white'\" [colorscheme]=\"['orange']\"\n              [outcomes]=\"[this.tsquery['outcome']]\" plottype=\"bar\"></app-plot>\n          </ng-container>\n          <ng-container *ngIf=\"(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                            || (this.settings['diffmerkmale'].includes('Beschwerde'))\">\n            <app-table [(data)]=\"this.tsqueryresult\" [outcomes_rate]=\"['Anteil']\"\n              [columns]=\"this.restablecols\"></app-table>\n          </ng-container>\n\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n\n\n\n\n    </div>\n  </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \n \n@Component({ \n  selector: 'app-profile', \n  templateUrl: './profile.component.html', \n  styleUrls: ['./profile.component.scss'] \n}) \nexport class ProfileComponent implements OnInit { \n \n  constructor( \n    private api : ApiService, \n    private _auth: AuthService, \n    private router:Router\n  ) { } \n \n  userdetails:any;\n  pwdchange:any;\n  action:string;\n  pwdrequest:any;\n  deleterequest:any;\n  deleteresult:string;\n\n  ngOnInit(): void { \n    this.pwdrequest={'oldpwd':'','newpwd':''}\n    this.deleterequest={'pwd':''}\n    this.pwdchange= {'progress':false,'ok':false};\n    this.userdetails = this._auth.getUserDetails();\n    \n  } \n\n  chpwd(){\n    this.pwdchange['progress'] = true;\n    this.api.changeuserpwd(this.userdetails.email,this.pwdrequest.newpwd,this.pwdrequest.oldpwd).subscribe(data=>{\n    this.pwdchange['ok'] = true;\n    this.pwdchange['progress'] = false;\n    this.pwdchange['done'] = true;\n    setTimeout(()=>{\n      this.pwdchange= {'progress':false,'ok':false};this.action=''},1500);\n      this.pwdrequest={'oldpwd':'','newpwd':''};    \n  },\n  error => {\n    this.pwdchange['done'] = true;\n    this.pwdchange['progress'] = false;})\n  }\n\n  deleteaccount(){\n    this.api.deleteuser(this.userdetails.email,this.deleterequest.pwd).subscribe(\n      data => {\n        //this.deleteresult=\"success\";\n        //localStorage.clear();\n        //setTimeout(()=>{this.router.navigate(['/'])},3000);        \n      },\n      error => {this.deleteresult=\"error\";}\n    )\n  }\n}\n","<div class=\"container\" fxLayout=\"row\" fxLayoutGap=\"1rem\"  fxLayoutAlign=\"space-around\"\n*ngIf=\"!(this.deleteresult=='success')\" >\n    <div class=\"small\">\n    <h1>Ihre Nutzerdaten</h1>    \n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Name:</div>\n                <div fxFlex><strong>{{this.userdetails.anrede+' '+this.userdetails.firstname+' '+this.userdetails.lastname}}</strong></div>\n            </div>\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>E-Mail:</div>\n                <div fxFlex><strong>{{this.userdetails.email}}</strong></div>\n            </div>\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Rolle:</div>\n                <div fxFlex><strong>{{this.userdetails.roles}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.dashboards.length>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\" >\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboards:</div>\n                <div fxFlex><strong>{{this.userdetails.dashboards}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.dashboard_admin.length>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboard Admin:</div>\n                <div fxFlex><strong>{{this.userdetails.dashboard_admin}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.wrong_logins>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Fehlerhafte Loginversuche seit der letzten Anmeldung:</div>\n                <div fxFlex><strong>{{this.userdetails.wrong_logins}}</strong></div>\n            </div>\n            <div class=\"add-margin\" style=\"max-width:400px;\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-around\" fxLayoutGap=\"1rem\">\n                <div class=\"add-margin\"><button mat-raised-button (click)=\"this.action='chpwd'\" color=\"primary\">Passwort ändern</button></div>\n                <div class=\"add-margin\"><button mat-raised-button (click)=\"this.action='deleteaccount'\" color=\"accent\">Account löschen</button></div>\n            </div>\n            <div fxLayout=\"column\" *ngIf=\"this.action=='chpwd'\" style=\"max-width: 450px;\">\n                <div ><h1>Passwort ändern</h1></div>\n                <div *ngIf=\"!this.pwdchange.ok\">\n                    \n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                          <mat-label>Aktuelles Passwort</mat-label>\n                          <input  type=\"password\"  [disabled]=\"this.pwdchange.progress\"  matInput value=\"\" [(ngModel)]=\"this.pwdrequest.oldpwd\">                          \n                        </mat-form-field>\n                      \n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                          <mat-label>Neues Passwort</mat-label>\n                          <input type=\"password\" [disabled]=\"this.pwdchange.progress\" matInput value=\"\" [(ngModel)]=\"this.pwdrequest.newpwd\">\n                          <mat-hint>Mindestlänge 10 Zeichen</mat-hint>\n                        </mat-form-field>\n                </div>\n                <div>\n                    <mat-hint *ngIf=\"this.pwdchange.progress\">ändere das Passwort...</mat-hint>\n                    <p  *ngIf=\"(this.pwdchange.done && !this.pwdchange.ok)\"><mat-icon style=\"color:red\">error</mat-icon> Fehler: Bitte prüfen Sie das aktuelle Passwort!</p>\n                                            <p *ngIf=\"(this.pwdchange.done && this.pwdchange.ok)\"><mat-icon style=\"color:green\">check_circle</mat-icon>Änderung erfolgreich, Sie bleiben eingeloggt.</p>\n                </div>\n                <div *ngIf=\"!this.pwdchange.ok\" class=\"add-margin\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div><button  mat-raised-button (click)=\"this.action=''\" color=\"primary\">Abbrechen</button></div>\n                    <div><button mat-raised-button [disabled]=\"this.pwdrequest.newpwd.length<10\" (click)=\"this.chpwd()\" color=\"accent\">Ändern</button></div>\n                </div>\n            </div>\n            <div *ngIf=\"this.action=='deleteaccount'\"  style=\"max-width: 450px;\">\n                <h1>Account löschen</h1>\n                <div>\n                    <p>Warnung: Diese Aktion kann nicht rückgängig gemacht werden</p>\n                    <p>Bitte geben Sie Ihr aktuelles Passwort zur Sicherheit ein:</p>\n                    <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                        <mat-label>Aktuelles Passwort</mat-label>\n                        <input  type=\"password\"  matInput value=\"\" [(ngModel)]=\"this.deleterequest.pwd\">                          \n                      </mat-form-field>\n                </div>\n                <div class=\"add-margin\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div><button mat-raised-button (click)=\"this.action=''\" color=\"primary\">Abbrechen</button></div>\n                    <div><button mat-raised-button (click)=\"this.deleteaccount()\" [disabled]=\"this.deleterequest.pwd.length<10\" color=\"primary\">Jetzt löschen</button></div>\n                </div>\n                <div *ngIf=\"this.deleteresult=='error'\">\n                    <p style=\"color:crimson\">Es ist ein Fehler aufgetreten, bitte prüfen Sie Ihr Passwort.</p>\n                </div>\n            </div>\n        </div>\n\n\n        \n    \n</div>\n<div class=\"container\" *ngIf=\"this.deleteresult=='success'\">\n    <h1>Ihr Account wurde gelöscht</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SmedAggregationService } from 'src/app/services/smed-aggregation.service';\nimport { CsvexportService } from 'src/app/services/csvexport.service';\nimport { DBService } from 'src/app/services/dbservice.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n  constructor(private db: DBService, private csv: CsvexportService,\n    private api: ApiService, private auth: AuthService, private smed: SmedAggregationService,\n    private router: Router) { }\n  metadata = [];\n  progress: boolean;\n  metadataok: boolean;\n  mapdata: any;\n  mapdatafor: string;\n  sortdata = [];\n  level: any;\n  levelvalues = [\n    'Gesamt',\n    'Baden-Württemberg',\n    'Bayern',\n    'Berlin',\n    'Brandenburg',\n    'Bremen',\n    'Hamburg',\n    'Hessen',\n    'Mecklenburg-Vorpommern',\n    'Niedersachsen',\n    'Nordrhein-Westfalen',\n    'Nordrhein',\n    'Westfalen-Lippe',\n    'Rheinland-Pfalz',\n    'Saarland',\n    'Sachsen',\n    'Sachsen-Anhalt',\n    'Schleswig-Holstein',\n    'Thüringen'\n  ];\n  externLevelValues = [\n  ]\n  subgroups: any;\n  outcomes: any;\n  determinants: any;\n  levelsettings = {};\n  data: any;\n  datakeys: any;\n  currentuser: any;\n  data_rate: any;\n  data_number: any;\n  geojson_available: any;\n  colorsscheme: any;\n  levelid: string;\n  datakeystable: any;\n  debug = false;\n  // SMED\n  stats_ts: any = [];\n  symptoms_list: any;\n  symptoms_list_export: any;\n  summaryinfo = {};\n  smedrange = {};\n  zeitaumoptions = [\"Letzte 12 Monate\", \"Letztes Jahr\", \"Gesamt\"];\n  allpublicfields = ['stats', 'mainsymptoms_ts', 'timetotreat', 'timestats', 'qmCases'];\n  ts_results = {};\n  utiltimes = {};\n  timetotreat: any;\n  qmCases: any;\n  decisions_ttt: any;\n  decisions_poc: any;\n  decisions_pocvsttt: any;\n  timetogo: number;\n  absoluteNumbers: boolean = false\n  isRKIUser: boolean = false\n  isRKIKVUser: boolean = false\n  isExtern: boolean = false\n  chipSelectedIndex: number = 0\n\n  ngOnInit(): void {\n    this.levelsettings = { \"level\": \"KV\", \"levelvalues\": \"Gesamt\", \"zeitraum\": \"Letzte 12 Monate\", 'resolution': 'monthly' };\n    this.summaryinfo[\"done\"] = false;\n    this.colorsscheme = this.api.makescale(5);\n    this.mapdatafor = \"\";\n    this.mapdata = [];\n    this.levelsettings = this.smed.updatestartstop(this.levelsettings);\n    this.auth.currentUser.subscribe(data => { this.currentuser = data; });\n\n    this.isRKIUser = this.auth.isRKIUser()\n    this.isRKIKVUser = this.auth.isRKIKVUser()\n    this.isExtern = this.auth.isExtern()\n    this.buildLevelValuesForCustomers()\n\n    if (this.isExtern) {\n      this.levelsettings['level'] = 'customer'\n      this.levelsettings['levelvalues'] = this.externLevelValues[0]\n\n      this.absoluteNumbers = true\n    }\n\n    this.updatemetadata();\n    window.scroll(0, 0);\n    this.setlevel(\"__init\", \"\");\n    // fix long loading\n    setTimeout(() => {\n      if (this.stats_ts.length == 0) {\n        this.setlevel(\"__init\", \"\");\n      };\n    }, 1500);\n\n    // counter\n    this.timetogo = this.check_portal_online();\n    if ((this.timetogo < 0) && !this.currentuser) {\n      setInterval(() => {\n        this.timetogo = this.check_portal_online();\n        if (this.timetogo >= 0) {\n          this.router.navigate(['/']);\n        }\n      }, 500);\n    };\n  }\n\n  ngOnDestroy() {\n    this.mapdata = [];\n  }\n\n  buildLevelValuesForCustomers() {\n    if (this.isExtern) {\n      for (const item of this.currentuser.usergroups.smed_reporting) {\n        if (item === 'kvuser') continue\n\n        this.externLevelValues.push(item)\n      }\n\n      if (this.isRKIKVUser) {\n        for (const item of this.levelvalues) {\n          this.externLevelValues.push(item)\n        }\n      }\n    }\n  }\n\n  async setlevel(level, value) {\n    if (!this.currentuser && (this.timetogo < 0)) {\n      return null;\n    }\n\n    this.levelsettings[\"resolution\"] = this.isExtern ? 'weekly' : this.levelsettings[\"resolution\"];\n\n    if (level !== \"__init\") {\n      this.levelsettings[level] = value;\n      this.levelsettings = this.smed.updatestartstop(this.levelsettings);\n    };\n\n    this.summaryinfo = [];\n    this.stats_ts = [];\n    this.utiltimes = {};\n    this.decisions_ttt = [];\n    this.decisions_poc = [];\n    this.decisions_pocvsttt = [];\n    this.timetotreat = NaN;\n    this.qmCases = NaN;\n\n    if (this.metadata.length == 0) {\n      this.updatemetadata();\n      return null;\n    }\n\n    if (this.levelsettings['start'] && this.levelsettings['stop']) {\n      this.progress = true;\n      await this.querydatasmed();\n      if (this.currentuser) {\n        await this.querydatasmed('decisions');\n      };\n    }\n  }\n\n  async updatemetadata() {\n    if (this.api.getmetadata(\"metadata\")) {\n      this.metadata = await this.api.getmetadata(\"metadata\");\n      // Performance optimization - use only if needed by app\n      // this.sortdata = this.api.getmetadata(\"sortdata\");\n      // this.geojson_available = this.api.getmetadata(\"geodata\");\n    }\n\n    if (this.metadata) {\n      if (this.metadata.length > 0) {\n        this.dometasettings();\n      }\n    } else {\n      this.metadata = [];\n      setTimeout(() => {\n        if ((this.metadata !== undefined) && (this.sortdata !== undefined)) {\n          if (this.metadata.length > 0) {\n            this.dometasettings();\n          }\n        }\n        else {\n          this.metadataok = false;\n          this.metadata = [];\n        }\n      }, 1500);\n    };\n  }\n\n  handleklick(plot, event) {\n  }\n\n  dometasettings() {\n    this.level = this.api.filterArray(this.metadata, \"type\", \"level\")[0][\"varname\"];\n    this.levelid = this.api.filterArray(this.metadata, \"type\", \"levelid\")[0]['varname'];\n    this.subgroups = [\"Keine\"].concat(this.api.getValues(this.api.filterArray(this.metadata, \"type\", \"group\"), \"varname\"));\n    this.metadataok = true;\n  }\n\n  async querydatasmed(thefield = \"\") {\n    let now: Date = new Date();\n    let oldstand: Date = new Date();\n    let dataage = 0; // 0 hours old     \n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {}\n    };\n    query[\"groupinfo\"][\"level\"] = (this.isExtern) && this.levelsettings['levelvalues'] !== 'Gesamt' ? \"customer\" : \"KV\"\n    query[\"groupinfo\"][\"levelid\"] = this.levelsettings[\"levelvalues\"];\n    query[\"groupinfo\"][\"timeframe\"] = this.levelsettings[\"resolution\"];\n    query[\"groupinfo\"][\"Jahr\"] = {\n      \"$gte\": parseInt(this.levelsettings[\"start\"].slice(0, 4)),\n      \"$lte\": parseInt(this.levelsettings[\"stop\"].slice(0, 4))\n    };\n\n    if (thefield != \"\") {\n      query[\"showfields\"] = [thefield, 'KM6Versicherte', 'BEVSTAND'];\n    }\n    else {\n      query[\"showfields\"] = this.allpublicfields.concat(['KM6Versicherte', 'BEVSTAND']);\n    };\n\n    let dbdaterange;\n\n    if (thefield != \"\") {\n      await this.db.querydatadates(\n        this.levelsettings['level'], this.levelsettings[\"levelvalues\"], thefield, this.levelsettings[\"resolution\"]).then(data => {\n          if (data.length > 0) { dbdaterange = Object.create(data[0]); }\n        }\n        );\n    }\n    else {\n      await this.db.querydatadates(\n        this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.allpublicfields[0], this.levelsettings[\"resolution\"]).then(data => {\n          if (data.length > 0) { dbdaterange = Object.create(data[0]); }\n        });\n    };\n\n    if (!dbdaterange) {\n      dbdaterange = { 'startdate': '2000-01-01', 'stopdate': '2000-01-01' };\n    }\n    else {\n      oldstand = new Date(dbdaterange['Stand']);\n      dataage = (now.getTime() - oldstand.getTime()) / (1000 * 60 * 60);\n    };\n    if ((dbdaterange['startdate'] <= this.levelsettings[\"start\"]) && (dbdaterange['stopdate'] >= this.levelsettings[\"stop\"]) &&\n      (dataage < 6)\n    ) {\n      if (thefield != \"\") {\n        this.makesmeditems(thefield);\n      }\n      else {\n        for (let fielditem of this.allpublicfields) {\n          this.makesmeditems(fielditem);\n        };\n      };\n    }\n    else {\n      await this.api.postTypeRequest('get_data/', query).subscribe(\n        data => {\n          let res = data[\"data\"];\n\n          if (thefield === \"\") {\n            for (const item of res) {\n              if (!item.mainsymptoms_ts) {\n                item.mainsymptoms_ts = []\n              }\n            }\n          }\n\n          if (thefield != \"\" && res.length > 0) {\n            this.db.deletewhere(thefield, this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.levelsettings[\"resolution\"],\n              this.levelsettings[\"start\"], this.levelsettings[\"stop\"],\n            ).then(() => {\n              this.updatedb(res, thefield)\n            });\n            this.db.storestand(thefield, this.levelsettings['level'],\n              this.levelsettings[\"levelvalues\"], now.toISOString(),\n              this.levelsettings[\"start\"], this.levelsettings[\"stop\"], this.levelsettings[\"resolution\"]);\n          };\n          if (thefield == \"\" && res.length > 0) {\n            for (let fielditem of this.allpublicfields) {\n              this.db.deletewhere(fielditem, this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.levelsettings[\"resolution\"],\n                this.levelsettings[\"start\"], this.levelsettings[\"stop\"],\n              ).then(() => {\n                this.updatedb(res, fielditem)\n              });\n              this.db.storestand(fielditem, this.levelsettings['level'],\n                this.levelsettings[\"levelvalues\"], now.toISOString(),\n                this.levelsettings[\"start\"], this.levelsettings[\"stop\"], this.levelsettings[\"resolution\"]);\n            };\n          };\n        },\n        error => { });\n    };\n  }\n\n  async updatedb(data, thefield) {\n    await this.smed.newcombine(data, thefield);\n    await this.makesmeditems(thefield);\n  }\n\n  exportascsv(name, data) {\n    this.csv.exportToCsv(name, data);\n    this.csv.exportToCsv(name + \"_settings.csv\", [this.levelsettings]);\n  }\n\n  async makesmeditems(thefield) {\n    this.levelsettings = this.smed.updatestartstop(this.levelsettings);\n    let startdate = this.levelsettings['startdate'];\n    let enddate = this.levelsettings['enddate'];\n\n    if (thefield == \"stats\") {\n      this.stats_ts = [];\n      this.summaryinfo = [];\n      let statswdate = await this.db.listdata('stats', this.levelsettings['level'],\n        this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true,\n        this.levelsettings[\"resolution\"]);\n\n      if (statswdate.length > 0) {\n\n        for (let item of statswdate) {\n          item[\"Mittlere Dauer (Sek.)\"] = (item[\"DAUERsmed\"] / item[\"DAUERsmedFaelle\"]);\n\n          if (item[\"Dauer_sek\"] == 0) {\n            item[\"Mittlere Dauer (Sek.)\"] = null;\n          }\n\n          item[\"Mittlere Anzahl Beschwerden\"] = item[\"Anzahl_Beschwerden\"] / item[\"Assessments\"];\n          item[\"Mittlere Anzahl Fragen\"] = item[\"Anzahl_Fragen\"] / item[\"Assessments\"];\n\n          if (item[\"Anzahl_Beschwerden\"] == 0) {\n            item[\"Mittlere Anzahl Beschwerden\"] = null;\n          }\n\n          item[\"Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments\"] / (item[\"BEVSTAND\"] / 1e5);\n          // item[\"ARE Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE\"] / (item[\"BEVSTAND\"] / 1e5);\n          // item[\"ARE Assessments (v2) pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE_v2\"] / (item[\"BEVSTAND\"] / 1e5);\n          item[\"Anteil ARE Assessments\"] = (100 * ((item[\"Assessments_mit_ARE_v3\"] / item[\"Assessments\"]) / .25)) - 100;\n\n          item['totaleNumbers'] = item['Assessments']\n        };\n\n        this.stats_ts = statswdate;\n        let theid = this.stats_ts[0]['levelid'];\n\n        if (theid != \"Gesamt\") { this.summaryinfo[\"levelid\"] = \" in \".concat(theid); }\n        else { this.summaryinfo[\"levelid\"] = \" in Deutschland\"; };\n\n        this.summaryinfo[\"Assessments Gesamt\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Assessments\"));\n        this.summaryinfo[\"Assessments pro Woche\"] = this.summaryinfo[\"Assessments Gesamt\"] / this.api.getValues(this.stats_ts, \"Assessments\").length;\n        this.summaryinfo[\"Mittlere Dauer\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"DAUERsmed\")) / this.api.sumArray(this.api.getValues(this.stats_ts, \"DAUERsmedFaelle\"));\n        this.summaryinfo[\"Anzahl Beschwerden\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Anzahl_Beschwerden\")) / this.summaryinfo[\"Assessments Gesamt\"];\n        this.summaryinfo[\"Anzahl Fragen\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Anzahl_Fragen\")) / this.summaryinfo[\"Assessments Gesamt\"];\n        let sorteddates = this.api.getValues(this.stats_ts, \"Datum\").sort();\n        this.summaryinfo[\"Beginn\"] = new Date(sorteddates[0]);\n        this.summaryinfo[\"Ende\"] = new Date(sorteddates.pop());\n        this.summaryinfo[\"done\"] = true;\n        // only here signal for loading done:\n        this.progress = false;\n      }\n    };\n\n    if (thefield == \"mainsymptoms_ts\") {\n      let symptoms_list = [];\n\n      symptoms_list = await this.db.listdata('mainsymptoms_ts', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"]);\n      symptoms_list = this.api.getValues(symptoms_list, 'data');\n\n      this.symptoms_list_export = this.api.sortArray(this.api.groupbysum(symptoms_list, 'Sympt', '', 'n'), 'n', \"descending\");\n\n      for (let item of this.symptoms_list_export) {\n        let anzahl_symptome = this.api.sumArray(this.api.getValues(this.symptoms_list_export, \"n\"));\n        item[\"Anteil\"] = Math.round(1000 * item['n'] / anzahl_symptome) / 10;\n      }\n\n      this.symptoms_list = this.symptoms_list_export.slice(0, 15);\n    };\n\n    if (thefield == \"timestats\") {\n      let utiltimes = [];\n      let dbutiltimes = await this.db.listdata('timestats', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], false, this.levelsettings[\"resolution\"]);\n      dbutiltimes = this.api.getValues(dbutiltimes, 'data');\n      utiltimes = this.api.groupbysum(dbutiltimes, \"wt\", \"h\", \"n\");\n      let ntotal = this.api.sumArray(this.api.getValues(utiltimes, 'n'));\n      dbutiltimes = [];\n\n      for (let item of utiltimes) {\n        item[\"Wochentag\"] = this.api.getweekdayname(item[\"wt\"]);\n        item['Anzahl'] = item['n'];\n        item['Anteil'] = 0.1 * Math.round(1000 * item['n'] / ntotal);\n        item['TimeLabel'] = item['h'] + \"-\" + (item['h'] + 2) + 'h';\n        delete item['n'];\n      }\n      this.utiltimes = this.api.makeheatmapdata(utiltimes, \"wt\", \"h\", 'Anteil', 'Wochentag', 'TimeLabel');\n    };\n\n    if (thefield == \"timetotreat\") {\n      let result = [];\n      let standardSort = [\n        {\n          TTTsmed_text: undefined,\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'Notfall',\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'schnellstmögliche ärztliche Behandlung',\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'Ärztliche Behandlung innerhalb von 24h',\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'Ärztliche Behandlung nicht innerhalb von 24h erforderlich',\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'k.A./Befragung unklar',\n          Anzahl: 0,\n          Anteil: 0\n        }\n      ]\n\n      result = await this.db.listdata('timetotreat', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"]);\n      result = this.api.groupbysum(result, 'TTTsmed_text', '', 'Anzahl');\n      const total = this.api.sumArray(this.api.getValues(result, 'Anzahl'));\n\n      for (let item of result) {\n        item['Anteil'] = Math.round(1000 * item['Anzahl'] / total) / 10;\n      }\n\n      if (!this.isRKIUser || !this.isRKIKVUser) {\n        if (result[0].TTTsmed_text !== undefined) {\n          result.push({ TTTsmed_text: undefined, Anzahl: 0, Anteil: 0 })\n        }\n      }\n\n      this.timetotreat = createStandardSort(result);\n\n      function createStandardSort(data) {\n        const result = []\n\n        for (const item of standardSort) {\n          for (const _item of data) {\n            if (item.TTTsmed_text === _item.TTTsmed_text) {\n              item.Anteil = _item.Anteil\n              item.Anzahl = _item.Anzahl\n            }\n          }\n          result.push(item)\n        }\n        return result.reverse()\n      }\n    }\n\n    if (thefield == \"decisions\") {\n      let decisions = [];\n      decisions = await this.db.listdata('decisions', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"]);\n      let total = this.api.sumArray(this.api.getValues(decisions, 'Anzahl'));\n      this.decisions_ttt = this.api.replacemissing(this.api.groupbysum(decisions, 'TTTsmed_text', \"TTTdispo_text\", 'Anzahl'), 'TTTdispo_text', \"Keine Daten\");\n      this.decisions_poc = this.api.replacemissing(this.api.groupbysum(decisions, 'POCsmed_text', \"POCdispo_text\", 'Anzahl'), 'POCdispo_text', \"Keine Daten\");;\n      this.decisions_pocvsttt = this.api.groupbysum(decisions, 'TTTsmed_text', \"POCsmed_text\", 'Anzahl').reverse();\n    }\n\n    if (thefield === \"qmCases\") {\n      let standardSort = [\n        {\n          text: \"Vortriage\",\n          data: 0,\n        },\n        {\n          text: 'nur Notfall ausgeschlossen',\n          data: 0,\n        },\n        {\n          text: 'Assessment vollständig',\n          data: 0,\n        },\n        {\n          text: 'Assessement abgekürzt',\n          data: 0,\n        },\n        {\n          text: 'SmED nicht anwendbar',\n          data: 0,\n        },\n      ]\n\n      const data = await this.db.listdata('stats', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"]);\n      let total = 0\n\n      if (data.length > 0) {\n        for (const item of data) {\n          if (item[\"QMFaelle\"]) {\n            total += item[\"QMFaelle\"]\n            for (const _item of standardSort) {\n              if (_item.text === \"Vortriage\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Vortriage\")))\n                }\n              }\n              if (_item.text === \"nur Notfall ausgeschlossen\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_nur_Notfall_ausgeschlossen\")))\n                }\n              }\n              if (_item.text === \"Assessment vollständig\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Assessment_vollst\")))\n                }\n              }\n              if (_item.text === \"Assessement abgekürzt\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Assessment_abgekuerzt\")))\n                }\n              }\n              if (_item.text === \"SmED nicht anwendbar\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_SmED_nicht_anwendbar\")))\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (standardSort) {\n        for (const item of standardSort) {\n          item.data = inPercent(item.data, total)\n        }\n      }\n\n      this.qmCases = standardSort.reverse()\n\n      function inPercent(x, y) {\n        const result = Math.round(1000 * x / y) / 10\n\n        return result\n      }\n    }\n  }\n\n  // Pre Launch Counter\n  check_portal_online() {\n    let date1 = new Date(\"2022-03-14 08:00:00\".replace(/-/g, \"/\")); // DUE TO BAD SAFARI IMPLEMENTATION!\n    let date2 = new Date();\n    let timediff = date2.getTime() - date1.getTime();\n    return timediff;\n  }\n\n  counterstring(timediff) {\n    if (timediff >= 0) {\n      return \"\";\n    }\n\n    let Tage = Math.floor(-timediff / (1000 * 60 * 60 * 24));\n    let Stunden = Math.floor(-timediff / (1000 * 60 * 60));\n    Stunden = Math.floor((Stunden / 24 - Math.floor(Stunden / 24)) * 24);\n    let Minuten = Math.floor(-timediff / (1000 * 60));\n    Minuten = Math.floor((Minuten / 60 - Math.floor(Minuten / 60)) * 60);\n    let Sekunden = Math.floor(-timediff / (1000));\n    Sekunden = Math.floor((Sekunden / 60 - Math.floor(Sekunden / 60)) * 60);\n    return Tage + ' Tage ' + Stunden + \" Stunden \" + Minuten + \" Minuten \" + Sekunden + \" Sekunden\";\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAllign=\"space-around\">\n  <div>\n    <p *ngIf=\"this.currentuser\" class=\"mat-caption lightgreycolor right\">\n      Angemeldet als <span> {{this.currentuser.anrede?this.currentuser.anrede+\"\n        \"+this.currentuser.lastname:\"\" }}</span></p>\n    <div *ngIf=\"!isExtern\" class=\"brandingpicture\"\n      [ngClass]=\"{'smallheader': this.currentuser || this.summaryinfo['done']}\">\n      <h1>Akut- und Notfälle bei der 116117</h1>\n    </div>\n    <div *ngIf=\"isExtern\" class=\"brandingpicture\"\n      [ngClass]=\"{'smallheader': this.currentuser || this.summaryinfo['done']}\">\n      <h1>Ersteinschätzung von Akut- und Notfällen mit SmED</h1>\n    </div>\n    <ng-container *ngIf=\"this.metadata && !this.currentuser\">\n      <!-- Text anpassen -->\n      <ng-container *ngIf=\"(this.timetogo<0)\">\n        <p>Auf diesem Portal stellt das Zentralinstitut für die kassenärztliche Versorgung in Deutschland (<strong><a\n              style=\"color:white;\" href=\"https://www.zi.de\">Zi</a></strong>) Informationen\n          zu\n          ambulanten Akut- und Notfällen in Deutschland zur Verfügung. Aktuell basieren die Auswertungen auf den\n          SmED-Daten,\n          die von den 116117-Leitstellen der Kassenärztlichen Vereinigungen übermittelt wurden. Bei\n          <strong>SmED</strong> (Strukturierte\n          medizinische Ersteinschätzung in Deutschland) handelt es sich um eine Ersteinschätzungssoftware, die den\n          Anwender\n          bei der Einschätzung der Beschwerden eines Patienten unterstützen kann. Durch <strong>SmED</strong> wird das\n          medizinische\n          Fachpersonal bei der systematischen Abfrage von Symptomen in Kombination mit allgemeinen und\n          symptomspezifischen\n          Risikofaktoren (z.B. Alter, Geschlecht, Begleitbeschwerden) sowie bei der Entscheidung, welches die passende\n          Versorgungsmöglichkeit für den Anrufenden ist, unterstützt. Die SmED-Empfehlungen der Software stellen dabei\n          eine\n          Entscheidungshilfe für den Anwender dar. Weitere Informationen zu <strong>SmED</strong> finden Sie\n          <strong><a href=\"https://www.zi.de/smed\">hier</a></strong>.\n        </p>\n        <p>Zukünftig soll das Portal um Informationen aus weiteren Quellen (wie beispielsweise die Abrechnungsdaten) für\n          ambulante Akut- und Notfälle ergänzt werden.</p>\n        <h1 class=\"lightgreycolor\" *ngIf=\"this.timetogo<=0\">Zeit bis zum Start<br>{{counterstring(this.timetogo)}}</h1>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"(this.timetogo>=0) || this.currentuser\">\n      <ng-container *ngIf=\"((this.timetogo>=0) || this.currentuser) && !this.isExtern\">\n        <p class=\"lightgreycolor\"> Dashboard des Zentralinstituts für die kassenärztliche Versorgung in Deutschland\n          (<strong><a style=\"color:white;\" href=\"https://www.zi.de\">Zi</a></strong>) mit aktuellen Ergebnissen aus der\n          Strukturierten medizinischen Ersteinschätzung in Deutschland\n          (<strong><a style=\"color:white;\" href=\"https://www.zi.de/smed\">SmED</a></strong>) im Rahmen von Anrufen bei\n          der\n          Rufnummer (<strong><a style=\"color:white;\" href=\"https://www.116117.de\">116117</a></strong>). Bei jeder\n          Ersteinschätzung werden die Inhalte und Empfehlungen strukturiert protokolliert (Assessments). <span\n            *ngIf=\"this.summaryinfo && this.levelsettings['resolution']=='weekly'\">Daten für vollständige\n            Kalenderwochen beginnend mit der Woche vom {{this.summaryinfo[\"Beginn\"] | date}} bis zur Woche beginnend am\n            {{this.summaryinfo[\"Ende\"] | date}}.</span></p>\n        <p class=\"lightgreycolor\" *ngIf=\"this.currentuser\">Als registrierter Nutzer steht Ihnen unser <a\n            routerLink=\"/private\">interner Analysebereich</a> zur Verfügung.</p>\n      </ng-container>\n      <ng-container *ngIf=\"((this.timetogo>=0) || this.currentuser) && this.isExtern\">\n        <p class=\"lightgreycolor\"> Dashboard mit aktuellen Ergebnissen aus der Strukturierten medizinischen\n          Ersteinschätzung in Deutschland (SmED) im Rahmen der Anwendung am eigenen Standort. </p>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div *ngIf=\"(this.timetogo>=0) || this.currentuser\">\n    <div *ngIf=\"this.currentuser\">\n      <div *ngIf=\"this.isExtern; then rkiUser else kvUser\"></div>\n      <ng-template #kvUser>\n        <h3>Bundesland</h3>\n        <p>\n          <mat-chip-list>\n            <mat-chip (click)=\"this.setlevel('levelvalues',item);\" *ngFor=\"let item of this.levelvalues\"\n              [selected]=\"(this.levelsettings['levelvalues']==item)\" color=\"primary\">\n              {{item.replace('KV ','')}}\n            </mat-chip>\n          </mat-chip-list>\n        </p>\n      </ng-template>\n      <ng-template #rkiUser>\n        <h3>Einsatzort</h3>\n        <p>\n          <mat-chip-list>\n            <mat-chip (click)=\"this.setlevel('levelvalues',item); chipSelectedIndex = index;\"\n              *ngFor=\"let item of this.externLevelValues; let index = index\" [selected]=\"index === chipSelectedIndex\"\n              color=\"primary\">\n              {{item}}\n            </mat-chip>\n          </mat-chip-list>\n        </p>\n      </ng-template>\n    </div>\n    <h3>Analysezeitraum</h3>\n    <p>\n      <mat-chip-list>\n        <mat-chip (click)=\"this.setlevel('zeitraum',item);\" *ngFor=\"let item of this.zeitaumoptions\"\n          [selected]=\"(this.levelsettings['zeitraum']==item)\" color=\"primary\">\n          {{item}}\n        </mat-chip>\n      </mat-chip-list>\n    </p>\n    <div>\n      <h3>Zeitliche Auflösung</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.setlevel('resolution','weekly');\"\n            [selected]=\"(this.levelsettings['resolution']=='weekly')\" color=\"primary\">\n            Kalenderwochen\n          </mat-chip>\n          <mat-chip (click)=\"this.setlevel('resolution','monthly');\"\n            [selected]=\"(this.levelsettings['resolution']=='monthly')\" color=\"primary\">\n            Monate\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div *ngIf=\"this.progress\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <div *ngIf=\"!this.summaryinfo && !this.progress\">\n      <p>\n        Keine Daten verfügbar\n      </p>\n    </div>\n    <div *ngIf=\"this.summaryinfo['done']\" fxLayout=\"row wrap\">\n      <div fxFlex=100 *ngIf=\"this.summaryinfo['Assessments Gesamt']\">\n        <mat-card>\n          <div fxLayout=\"row wrap\" fxLayoutAlign=\"center stretch\">\n            <div fxFlex>\n              <app-box [value]=\"this.summaryinfo['Assessments Gesamt']\" [textbehind]=\"true\" title=\"\"\n                [numberformat]=\"'1.0-0'\" [maincolor]=\"this.colorsscheme[4].concat('80')\"\n                [description]=\"'Gesamtanzahl der Assessments'\"></app-box>\n            </div>\n            <div fxFlex>\n              <app-box [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\n                [maincolor]=\"this.colorsscheme[3].concat('80')\" [value]=\"this.summaryinfo['Mittlere Dauer']\"\n                description=\"Mittlere Dauer pro Assessment (in Sekunden)\"></app-box>\n            </div>\n            <div fxFlex>\n              <app-box [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\n                [maincolor]=\"this.colorsscheme[2].concat('80')\" [value]=\"this.summaryinfo['Anzahl Beschwerden']\"\n                description=\"Mittlere Anzahl Beschwerden pro Asssessment\">\n              </app-box>\n            </div>\n            <div fxFlex *ngIf=\"this.currentuser\">\n              <app-box [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\n                [maincolor]=\"this.colorsscheme[1].concat('80')\" [value]=\"this.summaryinfo['Anzahl Fragen']\"\n                description=\"Mittlere Anzahl beantworteter Fragen pro Asssessment\">\n              </app-box>\n            </div>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n        <mat-card>\n          <div class=\"sliderHeader\">\n            <h3>SmED Assessments </h3>\n            <mat-slide-toggle *ngIf=\"!this.isExtern\" input [(ngModel)]=\"absoluteNumbers\">Absolute\n              Zahlen</mat-slide-toggle>\n          </div>\n          <br><span *ngIf=\"!absoluteNumbers\" class=\"lightgreycolor\">pro 100.000 Einwohner</span>\n          <span class=\"lightgreycolor\" *ngIf=\"absoluteNumbers\">Absolute Zahlen</span>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\"\n            [outcomes]=\"!absoluteNumbers ? ['Assessments pro 100 Tsd. Einw.'] : ['totaleNumbers']\" [sortx]=\"true\"\n            [fontcolor]=\"'white'\" plottype=\"area\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <div class=\"mat-caption\">\n                <p *ngIf=\"this.currentuser\">\n                  <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                    <mat-icon inline=true>file_download</mat-icon>\n                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                  </a>\n                </p>\n                <h3> Weitere Informationen zum Indikator</h3>\n                <p></p>\n                <p *ngIf=\"!absoluteNumbers && !isExtern\">Anzahl der SmED-Assessments pro 100.000 Einwohner, die im Rahmen von Anrufen\n                  bei der 116117 {{ this.levelsettings['resolution'] === 'weekly' ? 'wöchentlich' : 'monatlich' }}\n                  durchgeführt wurden.</p>\n                <p *ngIf=\"absoluteNumbers && !isExtern\">\n                  Anzahl der SmED-Assessments (in Tausend), die im Rahmen von Anrufen\n                  bei der 116117 {{ this.levelsettings['resolution'] === 'weekly' ? 'wöchentlich' : 'monatlich' }}\n                  durchgeführt wurden.\n                </p>\n                <p *ngIf=\"this.isExtern\">\n                  Anzahl der SmED-Assessments pro {{ this.levelsettings['resolution'] === 'weekly' ? 'Kalenderwoche' : 'Monat' }}.\n                </p>\n              </div>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts && (!this.isExtern)\">\n        <mat-card>\n          <h3>Aktivität respiratorischer Erkrankungen<br><span class=\"lightgreycolor\">Abweichung von der\n              Hintergrundaktivität in Prozent</span></h3>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\"\n            [outcomes]=\"['Anteil ARE Assessments']\" [sortx]=\"true\" [fontcolor]=\"'white'\" [colorscheme]=\"['crimson']\"\n            plottype=\"area\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <div class=\"mat-caption\">\n                <p *ngIf=\"this.currentuser\">\n                  <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                    <mat-icon inline=true>file_download</mat-icon>\n                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                  </a>\n                </p>\n                <h3> Weitere Informationen zum Indikator</h3>\n                <p>Anzahl der Assessments mit typischen Symptomen von Akuten Respiratorischen Erkrankungen (ARE)\n                  ausgewiesen als prozentuale Abweichung von ARE Hintergrundaktivität (erwartet werden 25%\n                  ARE-Assessments).\n                  Berücksichtigt wurden folgende SmED-Beschwerdebilder: Atembeschwerden, Covid 19, Erkältung/Grippaler\n                  Infekt, Fieber, Hals-/Rachenschmerzen, Husten, Kopfschmerzen, Ohrenschmerzen und Schluckbeschwerden\n                  (Liste ist aktuell noch in Entwicklung, Änderungen sind möglich).</p>\n              </div>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div [fxFlex]=\"isExtern ? 50 : 100\" fxFlex.lt-md=100 *ngIf=\"this.symptoms_list\">\n        <mat-card *ngIf=\"this.symptoms_list.length>0\">\n          <h3>Häufigste Beschwerden</h3>\n          <br>\n          <span class=\"lightgreycolor\">Anteil Assessments mit angezeigter Beschwerde an allen Assessments in\n            Prozent</span>\n          <app-plot [(data)]=\"this.symptoms_list\" [xvalue]=\"'Sympt'\" [percent]=\"true\" [fontcolor]=\"'white'\"\n            (clicked)=\"handleklick('Beschwerden',$event);\" [outcomes]=\"['Anteil']\" [sort]=\"true\"\n            plottype=\"hbar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('symptome.csv',this.symptoms_list_export)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Darstellung der prozentuellen Häufigkeit der im Rahmen der SmED-Assessments dokumentierten\n                    Beschwerden. Die Beschwerden sind sortiert nach der Häufigkeit und werden anteilig an allen\n                    SmED-Assessments, in denen eine Angabe zur Beschwerde vorliegt, angezeigt. Insgesamt sind über 100\n                    verschiedene Beschwerden über SmED verzeichnet worden. Bisher nicht enthalten sind Beschwerden, die\n                    im Rahmen der Abfrage von lebensbedrohlichen Situationen (Vortriage) erfasst wurden.</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.utiltimes['z']\">\n        <ng-container *ngIf=\"this.utiltimes['z'].length>0\">\n          <mat-card>\n            <h3>Aufkommen nach Tag und Uhrzeit<br><span class=\"lightgreycolor\">Anteil Assessments zum angegebenen\n                Zeitintervall an allen Assessments in Prozent</span>\n              <span class=\"lightgreycolor mat-caption\">(grün:hoch, blau:niedrig)</span>\n            </h3>\n\n            <app-plot [(data)]=\"this.utiltimes\" [fontcolor]=\"'white'\" plottype=\"heatmap\">\n            </app-plot>\n            <div>\n              <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                (closed)=\"panelOpenState = false\">\n                <mat-expansion-panel-header>\n                  <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                </mat-expansion-panel-header>\n                <mat-panel-description>\n                  <div class=\"mat-caption\">\n                    <p *ngIf=\"this.currentuser\">\n                      <a (click)=\"this.exportascsv('zeiten.csv',this.utiltimes)\">\n                        <mat-icon inline=true>file_download</mat-icon>\n                        Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                      </a>\n                    </p>\n                    <h3> Weitere Informationen zum Indikator</h3>\n                    <p>Prozentuale Verteilung der SmED-Assessments nach Wochentag und Uhrzeit\n                      (Drei-Stunden-Intervalle).​\n                      Grüne Flächen zeigen ein hohes Aufkommen, blaue ein niedriges Aufkommen an durchgeführten\n                      Assessments.\n                    </p>\n                  </div>\n                </mat-panel-description>\n              </mat-expansion-panel>\n            </div>\n          </mat-card>\n        </ng-container>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.timetotreat\">\n        <mat-card *ngIf=\"this.timetotreat.length>0\">\n          <h3>SmED Empfehlungen zur Dringlichkeit<br><span class=\"lightgreycolor\">Anteil Assessments mit angegebener\n              Dringlichkeit an allen Assessments in Prozent</span>\n          </h3>\n          <app-plot [(data)]=\"this.timetotreat\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"false\"\n            [outcomes]=\"['Anteil']\" [custommargins]=\"{ l: 50, r: 0, b: 0, t: 0 }\" plottype=\"hbar\">\n          </app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('empfehlung.csv',this.timetotreat)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Prozentuale Verteilung der SmED-Assessments nach der von SmED empfohlenen Versorgungsdringlichkeit.\n                    Die Versorgungsdringlichkeit gibt an, innerhalb welcher Zeitspanne der Anrufer medizinisch versorgt\n                    werden sollte.\n                  </p>\n                  <ol type=\"1\">\n                    <li>Notfall:</li>\n                    <p>Es besteht ein potentiell lebensbedrohlicher Zustand. Die ärztliche Behandlung muss unverzüglich\n                      erfolgen.</p>\n                    <li>Schnellstmögliche ärztliche Versorgung:</li>\n                    <p>Die ärztliche Behandlung soll schnellstmöglich erfolgen, muss jedoch nicht unmittelbar\n                      stattfinden.</p>\n                    <li>Ärztliche Behandlung innerhalb von 24 h:</li>\n                    <p>Die ärztliche Behandlung soll innerhalb von 24 Stunden erfolgen.</p>\n                    <li>Ärztliche Behandlung nicht innerhalb von 24 h erforderlich:</li>\n                    <p>Die ärztliche Behandlung eilt nicht. Falls die Beschwerden in den nächsten 2 Tagen nicht\n                      abklingen, ist eine ärztliche Behandlung in jedem Fall angezeigt.</p>\n                  </ol>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n        <mat-card>\n          <h3>Mittlere Dauer <br><span class=\"lightgreycolor\">Dauer in Sekunden pro Assessment</span></h3>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"[this.colorsscheme[3]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Dauer (Sek.)']\"\n            plottype=\"tsline\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Angaben zur Dauer liegen erst seit Mai 2020 vor. In die Berechnung der Dauer fließen nur\n                    Assessments ein, die mit dem klassischen SmED-Modul (nicht COVID-spezifische Module) erfasst wurden.\n                    Weiterhin wurden Assessments mit einer Dauer von über 1000 Sekunden ausgeschlossen, da bei diesen\n                    Assessments davon auszugehen ist, dass diese nicht ordnungsgemäß abgeschlossen wurden.</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n        <mat-card>\n          <h3>Mittlere Anzahl Beschwerden<br><span class=\"lightgreycolor\">Mittlere Anzahl unterschiedlicher Beschwerden\n              pro Assessment</span></h3>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"[this.colorsscheme[2]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Anzahl Beschwerden']\"\n            plottype=\"tsline\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Die Anzahl der Beschwerden umfasst die im Rahmen eines SmED-Assessments dokumentierten vorliegenden\n                    Beschwerden der Anrufenden. Bisher nicht enthalten sind Beschwerden, die im Rahmen der Abfrage von\n                    lebensbedrohlichen Situationen (Vortriage) erfasst wurden.</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts && this.currentuser\">\n        <mat-card>\n          <h3>Mittlere Anzahl Fragen<br><span class=\"lightgreycolor\">Mittlere Anzahl beantworteter Fragen pro\n              Assessment</span>\n            <mat-icon class=\"backgroundicon\">lock_open</mat-icon>\n          </h3>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"[this.colorsscheme[1]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Anzahl Fragen']\"\n            plottype=\"tsline\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Die Anzahl der Fragen umfasst die im Rahmen eines SmED-Assessments dokumentierten beantworteten\n                    Fragen (inklusive Fragen zu Alter, Geschlecht, Schwangerschaft, lebensbedrohlicher Situation,\n                    Beschwerden, chronischen Erkrankungen, Begleitumständen usw.).</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.currentuser && this.decisions_pocvsttt\">\n        <mat-card *ngIf=\"this.decisions_pocvsttt.length>0\">\n          <h3>Empfehlung Behandlungsort nach Dringlichkeit <br><span class=\"lightgreycolor\">Anzahl Assessment<mat-icon\n                class=\"backgroundicon\">lock_open\n              </mat-icon></span>\n          </h3>\n          <div>\n            <app-plot [(data)]=\"this.decisions_pocvsttt\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\"\n              [showlegend]=\"false\" [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\"\n              plottype=\"stackedbar\" [colorby]=\"'POCsmed_text'\">\n            </app-plot>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('timetotreat.csv',this.timetotreat)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Prozentuale Verteilung der SmED-Assessments nach der von SmED empfohlenen Versorgungsebene\n                    (Behandlungsort) und Versorgungsdringlichkeit.</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.timetotreat && this.currentuser\">\n        <mat-card *ngIf=\"this.timetotreat.length>0\">\n          <h3>SmED-Assessments nach QM-Kategorien<br><span class=\"lightgreycolor\">Anteil Assessments in der angegebenen\n              QM-Kategorie an allen Assessments in Prozent, basierend auf Daten seit 14.04.2023, ohne\n              COVID-Module</span>\n          </h3>\n          <app-plot [(data)]=\"this.qmCases\" [xvalue]=\"'text'\" [fontcolor]=\"'white'\" [showlegend]=\"false\"\n            [outcomes]=\"['data']\" [custommargins]=\"{ l: 50, r: 0, b: 0, t: 0 }\" plottype=\"hbar\">\n          </app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('empfehlung.csv',this.timetotreat)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Prozentuale Verteilung der SmED-Assessments nach QM-Kategorie.</p>\n                  <ol type=\"1\">\n                    <li>Vortriage:</li>\n                    <p>Im Rahmen der Abfrage einer lebensbedrohlichen Situation (Vortriage) wurde ein Notfall\n                      festgestellt.</p>\n                    <li>Nur Notfall ausgeschlossen:</li>\n                    <p>Im Rahmen der Vortriage wurde ein Notfall ausgeschlossen, es wurde aber nicht weiter ins\n                      Assessment eingestiegen.</p>\n                    <li>Assessment vollständig:</li>\n                    <p>SmED-Assessment durchgeführt, SmED-Empfehlung zur Dringlichkeit liegt vor, es wurden alle\n                      farbigen Fragen beantwortet.</p>\n                    <li>Assessment abgekürzt:</li>\n                    <p>SmED-Assessment durchgeführt, SmED-Empfehlung zur Dringlichkeit liegt vor, jedoch nicht alle\n                      farbigen Fragen beantwortet.</p>\n                    <li>SmED nicht anwendbar:</li>\n                    <p>Die Anwendung von SmED resultierte nicht in einer SmED-Empfehlung zur Dringlichkeit der\n                      Behandlung. Dies kann folgende Gründe haben: (a) Es wurden zu wenige Angaben gemacht, (b) es\n                      wurden zu viele unklare Antworten gegeben.</p>\n                  </ol>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"(this.currentuser && this.decisions_ttt) && (!this.isExtern)\">\n        <mat-card *ngIf=\"this.decisions_ttt.length>0\">\n          <h3>Abgleich Empfehlung vs. Entscheidung Dringlichkeit<br><span class=\"lightgreycolor\">Anzahl\n              Assessment<mat-icon class=\"backgroundicon\">lock_open\n              </mat-icon></span>\n          </h3>\n          <div>\n            <app-plot [(data)]=\"this.decisions_ttt\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"true\"\n              [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\" plottype=\"stackedbar\"\n              [colorby]=\"'TTTdispo_text'\">\n            </app-plot>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('decisions_ttt.csv',this.decisions_ttt)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Abgleich der SmED-Empfehlung mit der Entscheidung des/der Disponent*in hinsichtlich der\n                    Versorgungsdringlichkeit.\n                    Die Entscheidung des/der Disponent*in wird in SmED bisher nur bei einem kleinen Anteil der\n                    SmED-Assessments dokumentiert.\n                    Es wird an einer Übermittlung der entsprechenden Angaben aus der Dispositionssoftware gearbeitet.\n                    Dieser Prozess ist bisher\n                    mit einigen wenigen KVen etabliert. </p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"(this.decisions_poc && this.currentuser) && (!this.isExtern)\">\n        <mat-card *ngIf=\"this.decisions_poc.length>0\">\n          <h3>Abgleich Empfehlung vs. Entscheidung Behandlungsort <br><span class=\"lightgreycolor\">Anzahl\n              Assessment<mat-icon class=\"backgroundicon\">lock_open\n              </mat-icon></span>\n          </h3>\n          <div>\n            <app-plot [(data)]=\"this.decisions_poc\" [xvalue]=\"'POCsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"true\"\n              [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\" plottype=\"stackedbar\"\n              [colorby]=\"'POCdispo_text'\">\n            </app-plot>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('decisions_poc.csv',this.decisions_poc)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Abgleich der SmED-Empfehlung mit der Entscheidung des/der Disponent*in hinsichtlich der\n                    Versorgungsebene.\n                    Die Entscheidung des/der Disponent*in wird in SmED bisher nur bei einem kleinen Anteil der\n                    SmED-Assessments dokumentiert.\n                    Es wird an einer Übermittlung der entsprechenden Angaben aus der Dispositionssoftware gearbeitet.\n                    Dieser Prozess ist bisher\n                    mit einigen wenigen KVen etabliert. </p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { retry, timeout } from 'rxjs/operators';\nimport * as chroma from \"chroma-js\";\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public itsatest = false;\n  public REST_API_SERVER = \"https://api.zidatasciencelab.de/\"; // \"https://barebonedashboardapi.azurewebsites.net/\"; \"https://dashboardapi.ziapp.de/\"; \"http://localhost:8000/\"; \n  public REST_API_SERVER_CLIENTID = \"smed_reporting\";\n  public primarycolor = '#3c9bfa' //\"#2196f3\"; // \"#e91e63\";\n  public accentcolor = '#2dcd73' //\"#e3714e1\";\n  public warncolor = '#f0194b' //\"#e1149b\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getTypeRequest(url) {\n    return this.httpClient.get(this.REST_API_SERVER + url).pipe(map(res => {\n      return res;\n    })).pipe(/*timeout(3500),*/retry(3));\n  }\n\n  public postTypeRequest(url, payload) {\n    return this.httpClient.post(this.REST_API_SERVER + url, payload).pipe(map(res => {\n      return res;\n    })).pipe(/*timeout(15000),*/retry(3));;\n  }\n\n  public getTypeRequestnotimeout(url) {\n    return this.httpClient.get(this.REST_API_SERVER + url).pipe(map(res => {\n      return res;\n    })).pipe(retry(3));\n  }\n\n  public postTypeRequestnotimeout(url, payload) {\n    return this.httpClient.post(this.REST_API_SERVER + url, payload).pipe(map(res => {\n      return res;\n    })).pipe(retry(3));;\n  }\n\n\n  // Specific Requests\n\n  public updateuser(user, setting, value, usergroups = \"\") {\n    let payload = { 'email': user, 'key': setting, 'value': value };\n    if (usergroups != \"\") {\n      payload['usergroups'] = usergroups;\n    }\n    return this.postTypeRequest('userstatus/', payload);\n  }\n\n  public deleteuser(user, password = \"\") {\n    let payload = { \"email\": user };\n    if (password != \"\") { payload[\"password\"] = password };\n    return this.postTypeRequest('deleteuser', payload);\n  }\n\n  public changeuserpwd(user, newpwd, oldpwd = \"\") {\n    let payload = { \"newpassword\": newpwd, email: user };\n    if (oldpwd != \"\") {\n      payload[\"oldpassword\"] = oldpwd;\n    }\n    return this.postTypeRequest('changepwd', payload);\n  }\n\n  countView(url) {\n    // Privacy preserving Webcounter, see Documentation here https://github.com/zidatalab/ziwebcounter\n    this.httpClient.get('https://analytics.api.ziapp.de/view/ambulante_notfaelle/data?pageid=' + url + '&cookiedissent=' + true, { withCredentials: false }).subscribe();\n  }\n\n  // Data APIs\n  public getValues(array, key) {\n    let values = [];\n    for (let item of array) {\n      values.push(item[key]);\n    }\n    return values;\n  }\n  public getKeys(array) {\n    return Object.keys(array[0]);\n  }\n\n  objectkeystocolumns(array, objectname) {\n    for (let item of array) {\n      let theobject = item[objectname];\n      for (let key of Object.keys(theobject)) {\n        item[key] = theobject[key];\n      }\n      theobject[objectname] = NaN;\n      delete theobject[objectname];\n    }\n    return array;\n  }\n\n  public getOptions(array, key) {\n    return array.map(item => item[key])\n      .filter((value, index, self) => self.indexOf(value) === index)\n  }\n\n  public filterArray(array, key, value) {\n    let i = 0\n    let result = []\n    if (!Array.isArray(array)) {\n      return result;\n    }\n    for (let item of array) {\n      if (item[key] == value) { result.push(item) };\n      i = i + 1\n    }\n    return result\n  }\n\n  public filterNAArray(array, key) {\n    let i = 0\n    let result = []\n    for (let item of array) {\n      if (item[key] && (item[key] !== null) && (!isNaN(item[key]))) {\n        result.push(item)\n      };\n      i = i + 1\n    }\n    return result\n  }\n\n  public filterNA(array) {\n    let result = []\n    for (let item of array) {\n      if (!isNaN(item)) {\n        result.push(item)\n      };\n    }\n    return result\n  }\n\n  public filterArraybyList(array, key, list) {\n    let i = 0\n    let result = []\n    for (let item of array) {\n      if (list.indexOf(item[key]) >= 0) { result.push(item) };\n      i = i + 1\n    }\n    return result\n  }\n\n  public async getmetadata(name) {\n    return JSON.parse(localStorage.getItem(name));\n  }\n\n  public sortArray(array, key, order = \"ascending\") {\n    let result = array;\n    if (order == \"ascending\") {\n      return result.sort((a, b) => (a[key] < b[key] ? -1 : 1));\n    }\n    else {\n      return result.sort((a, b) => (a[key] > b[key] ? -1 : 1));\n    }\n\n\n\n  }\n\n  public sumArray(array) {\n    var total = 0;\n    for (var obj of array) {\n      if (parseFloat(obj)) { total += +obj; }\n    };\n\n    return total;\n  }\n\n  public getuniqueValues(array, key) {\n    let items = this.getValues(array, key);\n    return [...new Set(items)];\n  }\n\n\n  public groupbysum(array, key1, key2 = \"\", outcome) {\n    let result = [];\n    let valueskey1 = this.getuniqueValues(array, key1);\n    let valueskey2 = [];\n    if (key2 != \"\") {\n      valueskey2 = this.getuniqueValues(array, key2);\n    }\n\n    for (let value of valueskey1) {\n      let keyvalues = this.filterArray(array, key1, value);\n\n      if (key2 == \"\") {\n        let topush = {};\n        topush[key1] = value;\n        topush[outcome] = this.sumArray(this.getValues(keyvalues, outcome));\n        result.push(topush);\n      }\n      if (key2 !== \"\") {\n        for (let k2value of valueskey2) {\n          let topush = {};\n          topush[key1] = value;\n          topush[key2] = k2value;\n          topush[outcome] = this.sumArray(this.getValues(this.filterArray(keyvalues, key2, k2value), outcome));\n          result.push(topush);\n        }\n\n      };\n    }\n    return result;\n  }\n\n  public getweekdayname(dayofweek, mongo = false) {\n    let days = [\"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\", \"Sonntag\"];\n    if (mongo) {\n      days = [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"];\n    }\n    return days[dayofweek - 1];\n  }\n\n  public splitarraybykey(array, splitkey) {\n    let res = []\n    let splitvalues = this.getuniqueValues(array, splitkey);\n    for (let value of splitvalues) {\n      res.push(this.filterArray(array, splitkey, value));\n    }\n    return res = [];\n  }\n\n  public makescale(bins = 5) {\n    return chroma.scale([chroma(this.primarycolor).set('hsl.h', +70), this.primarycolor]).colors(bins);\n  };\n\n  public stringwrap(string, maxlength = 30) {\n    let newstring = \"\";\n    let wordsarray = string.split(\" \");\n    let fulllength = string.length\n    let linelength = 0\n    for (let word of wordsarray) {\n      let wordlen = word.length;\n      if ((linelength + wordlen) < maxlength) {\n        newstring = newstring + \" \" + word;\n        linelength = linelength + wordlen;\n      }\n      else {\n        newstring = newstring + \"<br>\" + word;\n        linelength = wordlen;\n      };\n    }\n    return newstring;\n  };\n\n  public makeheatmapdata(array, xname, yname, valuename, xlabel = \"\", ylabel = \"\") {\n    let res = {};\n    res['x'] = this.getuniqueValues(array, xname).sort(function (a, b) { return a - b });\n    res['y'] = this.getuniqueValues(array, yname).sort(function (a, b) { return a - b });\n    res['z'] = [];\n    for (let yitem of res['y']) {\n      let topush = [];\n      for (let xitem of res['x']) {\n        try {\n          topush.push(this.filterArray(this.filterArray(array, xname, xitem), yname, yitem)[0][valuename]);\n        }\n        catch {\n          topush.push(NaN);\n        };\n      }\n      res['z'].push(topush);\n    }\n    if (xlabel != \"\") {\n      let xlab = [];\n      for (let item of res['x']) {\n        try { xlab.push(this.filterArray(array, xname, item)[0][xlabel]) }\n        catch { xlab.push(\"\") };\n      }\n      res['x'] = xlab;\n    };\n    if (ylabel != \"\") {\n      let ylab = [];\n      for (let item of res['y']) {\n        try { ylab.push(this.filterArray(array, yname, item)[0][ylabel]) }\n        catch { ylab.push(\"\") };\n      }\n      res['y'] = ylab;\n    };\n\n    return res;\n  };\n\n  public replacemissing(array, key, replacement = \"Fehlend\") {\n    for (let item of array) {\n      if (!item[key]) {\n        item[key] = replacement;\n      }\n    }\n    return array;\n  }\n\n  public arrayintersect(a, b) {\n    var setA = new Set(a);\n    var setB = new Set(b);\n    var intersection = new Set([...setA].filter(x => setB.has(x)));\n    return Array.from(intersection);\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\nconstructor(\n    private _authService: AuthService,\n    private _router: Router\n  ) { }\n\n\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    let isExtern = this._authService.isExtern()\n    if (userdata && !isExtern) {\n      result = true;\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n  canActivateAdmin(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    if (userdata){\n    if (userdata[\"is_admin\"] || userdata[\"is_superadmin\"]) {\n      result = true;\n    }\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Observer, fromEvent, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(\n    private http: HttpClient,\n    private _api: ApiService,\n    private router: Router) {\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('userInfo')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): any {\n    return this.currentUserSubject.value;\n  }\n\n  OnlineStatus() {\n    return merge<boolean>(\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer<boolean>) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n\n  login(formdata) {\n    let b = formdata;\n    const payload = new HttpParams()\n      .set('username', b.username)\n      .set('password', b.password)\n      .set('client_id', this._api.REST_API_SERVER_CLIENTID);\n    return this._api.postTypeRequestnotimeout('login/', payload).pipe(map(user => {\n      return this.logintasks(user);\n    }));\n  }\n\n  logintasks(user) {\n    this.setDataInLocalStorage('refresh_token', user.refresh_token);\n    this.setDataInLocalStorage('access_token', user.access_token);\n    this.storeUserDetails(user.user);\n    this.currentUserSubject.next(user.user);\n    return user;\n  }\n\n  adduser(data) {\n    return this._api.postTypeRequest('newuser', data);\n  }\n\n  refreshToken() {\n    return this.http.post(this._api.REST_API_SERVER + 'login/refresh/', { refresh: true }).subscribe(\n      data => {\n        let result: any = data;\n        this.setDataInLocalStorage('access_token', result.access_token);\n\n      },\n      error => { }\n    )\n  }\n\n  storeUserDetails(data) {\n    return localStorage.setItem('userInfo', JSON.stringify(data));\n  }\n\n  public getUserDetails() {\n    return localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : false;\n  }\n\n  setDataInLocalStorage(variableName, data) {\n    localStorage.setItem(variableName, data);\n  }\n\n  public getToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  public getRefreshToken() {\n    return localStorage.getItem('refresh_token');\n  }\n\n  public logout() {\n    localStorage.clear();\n    this.currentUserSubject.next(null);\n  }\n\n  public updateUserData() {\n    return this._api.getTypeRequest('users/profile/')\n  }\n\n  public gettokeninfo() {\n    let token = this.getToken();\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  };\n\n  public getUserReportingGroup() {\n    if (this.currentUserValue) {\n\n      return this.currentUserValue.usergroups.smed_reporting\n    }\n\n    return []\n  }\n\n  public isRKIUser() {\n    if(this.currentUserValue) {\n      const userGroup = this.currentUserValue.usergroups.smed_reporting\n      \n      if(userGroup.includes('rki') && !(userGroup.includes('kvuser'))) {\n        return true\n      }\n\n      return false\n    }\n\n    return false\n  }\n\n  public isRKIKVUser() {\n    if(this.currentUserValue) {\n      const userGroup = this.currentUserValue.usergroups.smed_reporting\n      \n      if(userGroup.includes('rki') && userGroup.includes('kvuser')) {\n        return true\n      }\n\n      return false\n    }\n\n    return false\n  }\n\n  public isExtern() {\n    if(this.currentUserValue) {\n      const usergroup = this.currentUserValue.usergroups.smed_reporting\n\n      if(!usergroup.includes('kvuser')) {\n        return true\n      }\n\n      return false\n    }\n\n    return false\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvexportService {\n\n  public exportToCsv(filename: string, rows: object[]) {\n    if (!rows ) {\n      return;\n    }\n    if (rows && !rows.length ) {\n      rows=[rows];\n    }\n    const separator = ',';\n    const keys = Object.keys(rows[0]);\n    const csvContent =\n      keys.join(separator) +\n      '\\n' +\n      rows.map(row => {\n        return keys.map(k => {\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\n          cell = cell instanceof Date\n            ? cell.toLocaleString()\n            : cell.toString().replace(/\"/g, '\"\"');\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\n            cell = `\"${cell}\"`;\n          }\n          return cell;\n        }).join(separator);\n      }).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      if (link.download !== undefined) {\n        // Browsers that support HTML5 download attribute\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', filename);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      \n    }\n  }\n}","import Dexie, { Table } from 'dexie';\n\nexport class DataItem {\n  level: string;\n  levelid: string;\n  Jahr: number;\n  Monat: number;\n  KW: number;\n  Datum:string;\n  Indicator:string;\n  timeframe:string;\n  data:any;\n}\n\nexport class StandItem {\n  level: string;\n  levelid: string;\n  Stand:string;\n  Indicator:string;\n  startdate:string;\n  stopdate:string;\n  timeframe:string;\n}\n\nexport class AppDB extends Dexie {\n  public datadb: Table<DataItem, number>;\n  public standdb: Table<StandItem, number>;\n\n  constructor() { \n    super('smeddb');\n    var db = this;\n    db.on(\"versionchange\", function (event) {\n      db.close();        \n    });\n    db.version(11).stores({\n      datadb: 'id++,[level+levelid+Indicator+timeframe+Datum],[level+levelid+Indicator+timeframe]',\n      standdb: 'id++,[level+levelid+Indicator+timeframe]',\n    }); \n    db.datadb.mapToClass(DataItem); \n    db.standdb.mapToClass(StandItem); \n  }\n\n  \n\n\n}\n\nexport var db = new AppDB();","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { db, StandItem } from './db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DBService {\n\n  constructor(private api: ApiService) { }\n\n  async storestand(Indicator, level, levelid, Stand, mindate, maxdate, resolution) {\n    await db.standdb\n      .where('[level+levelid+Indicator+timeframe]')\n      .equals([level, levelid, Indicator, resolution])\n      .delete();\n    db.standdb.put({\n      'level': level,\n      'levelid': levelid,\n      'Stand': Stand,\n      'Indicator': Indicator,\n      'startdate': mindate,\n      'stopdate': maxdate,\n      'timeframe': resolution\n    });\n  };\n\n  getstand(Indicator, level, levelid, resolution) {\n    return db.standdb\n      .where('[level+levelid+Indicator+timeframe]')\n      .equals([level, levelid, Indicator, resolution]).first();\n  }\n\n  listdata(Indicator, level, levelid, start = \"\", stop = \"\", expand = true, resolution) {\n    let tosearch = {\n      Indicator: Indicator,\n      level: level,\n      levelid: levelid\n    }\n\n    // Can be implemented later to restrict results\n    if (start !== \"\" && stop !== \"\" && expand == true) {\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe+Datum]')\n        .between([level, levelid, Indicator, resolution, start], [level, levelid, Indicator, resolution, stop])\n        .toArray()\n        .then(data => this.api.objectkeystocolumns(data, 'data'));\n    }\n\n    if (expand == true) {\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray().then(data => this.api.objectkeystocolumns(data, 'data'));\n    }\n\n    if (expand == false) {\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray();\n    };\n  }\n\n  async querydatadates(level, levelid, Indicator, resolution = \"monthly\") {\n    let res = await db.standdb.where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray();\n\n    return res\n  }\n\n  deletewhere(Indicator, level, levelid, resolution = \"monthly\", start = \"\", stop = \"\") {\n    let tosearch = {\n      Indicator: Indicator,\n      level: level,\n      levelid: levelid,\n      timeframe: resolution\n    }\n\n    // Can be implemented later to restrict results\n    if (start !== \"\" && stop !== \"\") {\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe+Datum]').between(\n          [level, levelid, Indicator, resolution, start],\n          [level, levelid, Indicator, resolution, stop]).delete();\n    }\n    else {\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe]').equals(\n          [level, levelid, Indicator, resolution]).delete();\n    }\n  }\n\n  adddatabulk(array) {\n    return db.datadb.bulkPut(array);\n  };\n\n  async adddata({ level, levelid, Jahr, Monat, KW, Datum, Indicator, data, KM6Versicherte, BEVSTAND, resolution }) {\n    return await db.datadb\n      .put({\n        Indicator: Indicator,\n        level: level,\n        levelid: levelid,\n        Jahr: Jahr,\n        Monat: Monat,\n        KW: KW,\n        Datum: Datum,\n        data: data,\n        timeframe: resolution\n      });\n  };\n\n  clean() {\n    db.delete();\n    db.open();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { ApiService } from './api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService {\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(\n    private router: Router,\n    private _auth: AuthService,\n    private _api: ApiService\n  ) {\n  }\n  apiurl = this._api.REST_API_SERVER;\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (request.url.includes(this.apiurl) && !request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getToken()}`\n        }\n\n      });\n    }\n    if (request.url.includes(this.apiurl) && request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getRefreshToken()}`\n        }\n\n      });\n    }\n\n\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n\n        // Refresh if token has expired and Userdetails not null\n        if (request.url.includes(this.apiurl) && (this._auth.getUserDetails()[\"email\"].length>0) &&\n          error.status == 401) {\n          this._auth.refreshToken();\n        }\n\n        // Logout on Refresh error\n        if (request.url.includes(this.apiurl) &&  request.url.includes(\"login/refresh\") && error.status == 422) {\n          this.refreshTokenInProgress = false;\n          this._auth.logout();\n          this.router.navigate([\"/\"]);\n        }\n        else {\n          this.refreshTokenInProgress = false;\n        };\n\n        return throwError(error);\n      }\n\n      ))\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'replace'})\nexport class ReplacePipe implements PipeTransform {\n  transform(value: string, strToReplace: string, replacementStr: string): string {\n\n    if(!value || ! strToReplace || ! replacementStr)\n    {\n      return value;\n    }\n\n return value.replace(new RegExp(strToReplace, 'g'), replacementStr);\n  }\n}","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { DBService } from 'src/app/services/dbservice.service';\nimport { DataItem } from 'src/app/services/db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmedAggregationService {\n\n  constructor(private db: DBService, private api:ApiService) { }\n\n// Query Methods\n\n\n\nasync newcombine(array,fieldname){\n  //if (fieldname==\"stats\"){console.log(\"newcombine\",fieldname,array);};\n  let dbarray=[];\n  if (array.length==0){return []};\n  for (let item of array){\n    if (!item[fieldname]){return [];}\n    else {\n    for (let fielditem of item[fieldname]){\n      let topush = new DataItem;\n      topush['level']=item['level'];\n      topush['levelid']=item['levelid'];\n      topush['Jahr']=item['Jahr'];\n      topush['Monat']=item['Monat'];\n      topush['KM6Versicherte']=item['KM6Versicherte'];\n      topush['BEVSTAND']=item['BEVSTAND'];\n      topush['KW']=fielditem['KW'];\n      topush['Datum']=fielditem['Datum']\n      delete fielditem['KW'];\n      topush['data']=fielditem;\n      topush['Indicator']=fieldname;\n      topush['timeframe']=item['timeframe'];\n      dbarray.push(topush);\n    }\n  };\n  }\n  //if (fieldname==\"stats\"){console.log(\"newcombine res\",fieldname,dbarray);};\n  await this.db.adddatabulk(dbarray);\n}\n\nquerysmedts(groupvars=[],outcome=\"\",levelsettings,sort=false,topx:any=false,filtervar=\"\",filtervalues=[],topxvar=\"\"){\n  if (levelsettings[\"zeitraum\"]!==\"Gesamt\") {\n  let query = {\n    \"startdate\": levelsettings['start'].toISOString().slice(0,10),\n    \"stopdate\": levelsettings['end'].toISOString().slice(0,10),\n    \"subgroups\": groupvars    ,\n    \"filterlist\": []\n  }\n  query[\"filterlist\"].push({\"level\":levelsettings['level']});\n  if (levelsettings[\"levelvalues\"]!==\"Gesamt\"){\n    query[\"filterlist\"].push({\"levelid\":levelsettings[\"levelvalues\"]});\n  }\n  if (outcome!=\"\"){\n    query[\"outcome\"]=outcome;\n  }\n  let tofilter = false;\n  if (filtervar!==\"\" && filtervalues.length>0){tofilter=true};\n  return this.api.postTypeRequest('analytics/timeseries/', query).subscribe(\n    data => {\n      let res = data[\"result\"];\n      if (sort){\n        res = this.api.sortArray(res,\"count\",\"descending\");\n      }\n      if (topx && topxvar==''){\n        res = res.slice(0,topx);\n      }\n      if (tofilter){\n        res = this.api.filterArraybyList(res,filtervar,filtervalues);\n      }\n      if (topx && topxvar!==''){\n        let keycounts = {};\n        for (let item of res){\n          if (keycounts[item[topxvar]] && Math.round(item['count'])){\n            keycounts[item[topxvar]]=keycounts[item[topxvar]]+item['count'];\n          }\n          if (!keycounts[item[topxvar]] && Math.round(item['count'])) {\n            keycounts[item[topxvar]]=item['count'];\n          }\n        }\n        let keycountsarray= [];\n        for (let key of Object.keys(keycounts)){\n          keycountsarray.push({\"name\":key,\"count\":keycounts[key]})\n        }\n        let filterlist = this.api.getValues(this.api.sortArray(keycountsarray,'count',\"descending\").slice(0,topx),\"name\");\n        res= this.api.filterArraybyList(res,topxvar,filterlist);\n      }\n      return res;\n\n    },\n    error => {return [];});\n  }\n  else {\n    return [];\n  };\n}\n\n// Aggregation Functions\n\n\nadddate(Array,yearvar,isoweekvar){\n  for (const item of Array){\n    item[\"Datum\"]=this.getDateOfISOWeek(item[isoweekvar],item[yearvar]);\n  }\n  return Array;\n}\n\nadddatemonth(Array,yearvar,monthvar){\n  for (const item of Array){\n    item[\"Datum\"]=new Date(item[yearvar]+\"-\"+item[monthvar]+\"-01\");\n  }\n  return Array;\n}\n\ngetDateOfISOWeek(w, y) {\n  let millisperday = 1000*60*60*24;\n  let yearstart = new Date(y+\"-01-01\");\n  yearstart=new Date(yearstart.getTime()-(yearstart.getDay()-1)*millisperday)\n  let ISOweekStart = new Date(yearstart.getTime()+millisperday*7*(w+1));\n  return ISOweekStart;\n}\n\naggsymptoms(symptomsobject){\n  let inputarray = [];\n  let output = {};\n  let res = [];\n  for (let item of symptomsobject){\n    inputarray=inputarray.concat(item[\"Symptome\"])\n  }\n\n  for (let item of inputarray){\n    if (output[item.name]!==undefined){\n      output[item.name]=output[item.name]+item[\"n\"];\n    }\n    else {\n      output[item.name]=item[\"n\"];\n    }\n  }\n  output[\"Keine Angabe\"]=output[\"\"];\n  delete output[\"\"];\n  for (let thekey in Object.keys(output)){\n    res.push({\"name\":Object.keys(output)[thekey],\"n\":Object.values(output)[thekey]});\n  }\n\n  return this.api.sortArray(res,\"n\",\"descending\");\n\n\n}\n\nupdatestartstop(levelsettings){\n  // Appply date filters\n  let tzoffset = (new Date()).getTimezoneOffset() * 60000;\n  let today = new Date();\n  let startdate = \"2019-04-01\";\n  let enddate = today.getFullYear()+\"-12-31\";\n  if (levelsettings[\"zeitraum\"]==\"Letzte 12 Monate\"){\n    startdate = new Date(today.getFullYear()-1+today.toISOString().slice(4,8)+\"01\").toISOString().slice(0,10);\n    enddate = today.toISOString().slice(0,10)\n  };\n  if (levelsettings[\"zeitraum\"]==\"Aktuelles Jahr\"){\n    startdate = new Date(today.getFullYear()+\"-01-01\").toISOString().slice(0,10);\n    enddate = new Date(today.getFullYear()+\"-12-31\").toISOString().slice(0,10)\n    };\n    if (levelsettings[\"zeitraum\"]==\"Letztes Jahr\"){\n      startdate = new Date(today.getFullYear()-1+\"-01-01\").toISOString().slice(0,10);\n      enddate = new Date(today.getFullYear()-1+\"-12-31\").toISOString().slice(0,10);\n    };\n    let millisperday = 1000*60*60*24;\n    if (levelsettings[\"zeitraum\"]==\"Letzte 4 Wochen\"){\n      enddate = new Date(today.getTime() - today.getDay()*millisperday).toISOString().slice(0,10);\n      startdate = new Date(today.getTime()-((4*7)-1)*millisperday).toISOString().slice(0,10);\n    };\n    if (levelsettings[\"zeitraum\"]==\"Letzte Woche\"){\n      enddate = new Date(today.getTime() - today.getDay()*millisperday).toISOString().slice(0,10);\n      startdate = new Date(today.getTime()-((6))*millisperday).toISOString().slice(0,10);\n    };\n    if (levelsettings[\"zeitraum\"]==\"Detailliert\"){\n      let newstart= (new Date(levelsettings['start_picker'] - tzoffset)).toISOString().slice(0,10);\n      let newstop = (new Date(levelsettings['stop_picker'] - tzoffset)).toISOString().slice(0,10);\n      //console.log(\"Detailliert\",levelsettings['start_picker'],newstart,levelsettings['stop_picker'],newstop);\n      levelsettings[\"start\"]=newstart;\n      levelsettings[\"stop\"]=newstop;\n    }\n    if (levelsettings[\"zeitraum\"]!=\"Detailliert\"){\n      levelsettings[\"start\"]=startdate;\n      levelsettings[\"stop\"]=enddate;\n    }\n    else {\n\n\n    };\n    return levelsettings;\n}\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSliderModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule,\n    MatExpansionModule\n\n\n  ],\n  exports: [\n    MatSidenavModule,\n    MatSliderModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule,\n    MatExpansionModule\n\n\n  ]\n})\nexport class MaterialModule { }\n\n"],"names":[],"sourceRoot":"webpack:///"}