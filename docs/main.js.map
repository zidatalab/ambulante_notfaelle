{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/infobox/box/box.component.ts","./src/app/components/infobox/box/box.component.html","./src/app/components/leafletmap/map/map.component.ts","./src/app/components/leafletmap/map/map.component.html","./src/app/components/plotly/plot/plot.component.ts","./src/app/components/plotly/plot/plot.component.html","./src/app/components/table/table/table.component.ts","./src/app/components/table/table/table.component.html","./src/app/pages/admin/admin.component.ts","./src/app/pages/admin/admin.component.html","./src/app/pages/admin/components/addUserDialog.ts","./src/app/pages/admin/components/addUserDialog.html","./src/app/pages/admin/components/deleteUserDialog.ts","./src/app/pages/admin/components/deleteUserDialog.html","./src/app/pages/admin/components/updateUserDialog.ts","./src/app/pages/admin/components/updateUserDialog.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/private/private.component.ts","./src/app/pages/private/private.component.html","./src/app/pages/profile/profile.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/start/start.component.html","./src/app/pages/start/start.component.ts","./src/app/services/api.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/csvexport.service.ts","./src/app/services/db.ts","./src/app/services/dbservice.service.ts","./src/app/services/interceptor-service.service.ts","./src/app/services/replace_pipe.ts","./src/app/services/smed-aggregation.service.ts","./src/environments/environment.ts","./src/main.ts","./src/material/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { StartComponent } from './pages/start/start.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport {PrivateComponent} from './pages/private/private.component'\nimport { AdminComponent } from './pages/admin/admin.component';\n\nconst routes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'profile', component: ProfileComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'private', component: PrivateComponent,\n    canActivate: [AuthGuardService]\n  }, \n  {\n    path: 'admin', component: AdminComponent,\n    canActivate: [AuthGuardService]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, RouterEvent } from '@angular/router';\nimport { ApiService } from './services/api.service';\nimport { AuthService } from './services/auth.service';\nimport { DBService } from './services/dbservice.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Test Dashboard';\n  public currentuser: any;\n  public currentroute: string;\n  loginoption = true;\n  public loginstatus: boolean;\n  public adminstatus: boolean;\n  currentdate: any;\n  public apiconnection: number = 0;\n  isExtern: boolean = false\n\n  constructor(\n    private _auth: AuthService,\n    private _api: ApiService,\n    private router: Router,\n    private db: DBService\n  ) {\n\n    router.events.subscribe((event: RouterEvent) => {\n      if (event.url !== this.currentroute && event.url) {\n        this.currentroute = event.url;\n        this._api.countView(event.url);\n      };\n    });\n  }\n\n  ngOnInit() {\n    this.db.clean();\n    this.checkapiconnection();\n    this.currentdate = new Date();\n    \n    this._auth.currentUser.subscribe(data => {\n      if (data) {\n        this.currentuser = data;\n        this.loginstatus = true;\n        this.adminstatus = this.currentuser[\"is_admin\"] || this.currentuser[\"is_superadmin\"];\n        this.isExtern = this._auth.isExtern()\n        setTimeout(() => { this.autorefreshdata(); }, 1000);\n        setInterval(() => { this._auth.refreshToken(); this.checkapiconnection(); }, 1000 * 60 * 10);\n      }\n      else {\n        this.loginstatus = false;\n        this.adminstatus = false;\n        setTimeout(() => { this.autorefreshdata(); }, 0);\n      };\n    });\n  }\n\n  public checkapiconnection() {\n    this._api.getTypeRequest('openapi.json').subscribe(data => { this.apiconnection = 1; }, error => { this.apiconnection = 2; })\n  }\n\n  public checkforopentabs() {\n    // Broadcast that you're opening a page.\n    localStorage.openpages = Date.now();\n    window.addEventListener('storage', function (e) {\n      if (e.key == \"openpages\") {\n        // Listen if anybody else is opening the same page!\n        localStorage.page_available = Date.now();\n      }\n      if (e.key == \"page_available\") {\n        alert(\"Eine andere Seite ist bereits offen. Bitte nutzen Sie diese Anwendung nur auf einem Tab, um Probleme zu vermeiden.\");\n\n      }\n    }, false);\n  }\n\n  public autorefreshdata() {\n    this.updatemetadata().subscribe(\n      data => {\n        this.setmetadata(\"metadata\", data[\"data\"]);\n      });\n    // this.getsortdata().subscribe(data => {\n    //     this.setmetadata(\"sortdata\",data[\"datalevels\"]);  \n    //     if (data[\"geodata\"]){\n    //       this.setmetadata(\"geodata\",this._api.getValues(data[\"geodata\"],'_id'));        \n    //     }\n    //     else {\n    //       this.setmetadata(\"geodata\",[]); \n    //     }\n\n    //   });\n  }\n\n  logout() {\n    this._auth.logout();\n    this.db.clean();\n    localStorage.clear();\n    this.autorefreshdata();\n    this.loginstatus = false;\n    this.adminstatus = false;\n    setTimeout(() => { this.router.navigate(['/']) }, 1500)\n  };\n\n  getsortdata() {\n    return this._api.getTypeRequest(\"get_sortlevels/\" + this._api.REST_API_SERVER_CLIENTID);\n  }\n\n  updatemetadata() {\n    let client = this._api.REST_API_SERVER_CLIENTID\n    return this._api.getTypeRequest(\"get_metadata/\" + client);\n  }\n\n  setmetadata(name, data) {\n    localStorage.setItem(name, JSON.stringify(data));\n  }\n}\n","<mat-sidenav-container autosize=\"true\" scrollable=\"false\">\n  <mat-sidenav-content>\n    <mat-toolbar color=\"transparent\">\n      <button (click)=\"drawer.toggle()\" mat-icon-button class=\"example-icon\"\n        aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <!-- <span>{{this.title}}</span> -->\n      <span class=\"example-spacer\"></span>\n      <div fxShow=\"true\" fxHide.lt-sm=\"true\">\n        <a href=\"https://www.zi.de/smed\">\n          <img src=\"./assets/branding/smed_logo.png\" class=\"brandinglogo\">\n        </a>\n        <a href=\"https://www.zi.de\">\n          <img src=\"./assets/branding/zi_Logo.png\"\n            class=\"brandinglogo\">\n        </a>\n      </div>\n      <div fxShow=\"false\" fxShow.lt-sm=\"true\">\n        <a href=\"https://www.zi.de\">\n          <img src=\"./assets/branding/zi_Logo.png\" class=\"brandinglogo\">\n        </a>\n      </div>\n    </mat-toolbar>\n    <main>\n      <section class=\"mat-typography\">\n        <mat-drawer-container autosize>\n          <mat-drawer #drawer mode=\"push\" position=\"start\" autoFocus=\"false\">\n            <div class=\"menucontainer\">\n              <ng-container>\n                <p class=\"primarycolor\"><strong>Navigation</strong></p>\n              </ng-container>\n              <div>\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/\">\n                  <mat-icon class=\"icon\">home</mat-icon>\n                  <span>Startseite</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.loginoption && !this.loginstatus\">\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/login\">\n                  <mat-icon class=\"icon\">login</mat-icon>\n                  <span>Anmelden</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.loginstatus\">\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/profile\">\n                  <mat-icon class=\"icon\">account_box</mat-icon>\n                  <span>Benutzerprofil</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.currentuser && !this.isExtern\">\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/private\">\n                  <mat-icon class=\"icon\">dashboard</mat-icon>\n                  <span>Erweiterte Analysen</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.adminstatus\">\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/admin\">\n                  <mat-icon class=\"icon\">admin_panel_settings</mat-icon>\n                  <span>Administration</span>\n                </a>\n              </div>\n              <div *ngIf=\"this.loginstatus\">\n                <a mat-icon-button (click)=\"drawer.toggle();logout();\" href=\"./\">\n                  <mat-icon class=\"icon\">logout</mat-icon>\n                  <span>Ausloggen</span>\n                </a>\n              </div>\n            </div>\n          </mat-drawer>\n          <mat-drawer-content>\n            <div class=\"offlinemsg\" *ngIf=\"false\"><strong>Keine Internetverbindung</strong><br>Dieses Portal benötigt\n              eine aktive Internetverbindung.</div>\n            <div class=\"offlinemsg\" *ngIf=\"this.apiconnection==2\"><strong>Keine Verbindung zur API</strong><br>Dieses\n              Portal benötigt\n              eine aktive Internetverbindung.</div>\n            <router-outlet></router-outlet>\n          </mat-drawer-content>\n        </mat-drawer-container>\n      </section>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n<!-- Footer nur für Desktop Screen -->\n<footer>\n  <div class=\"footerstyle\">\n    <div fxLayout=\"column\" fxLayoutGap=\"0.5rem\">\n      <div fxLayout=\"column wrap\" fxLayoutAlign=\"space-around start\">\n        <div fxflex=28 fxHide.xs>\n          <p>\n            <mat-list style=\"color:white;\">\n              <mat-list-item>\n                <p style=\"color:white;\"><strong>Navigation</strong></p>\n              </mat-list-item>\n              <mat-list-item><a style=\"color:white;\" href=\"https://www.zi.de/meta/impressum\">Impressum</a>\n              </mat-list-item>\n              <mat-list-item><a style=\"color:white;\"\n                  href=\"https://www.zi.de/footer/datenschutzhinweis\">Datenschutzhinweise</a></mat-list-item>\n            </mat-list>\n          </p>\n        </div>\n        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-between end\">\n          <div fxFlex>\n            <br>\n          </div>\n          <div style=\"padding:0.5rem;text-align: center;\">\n            <p>© {{this.currentdate | date:'Y'}} Zentralinstitut für die kassenärztliche Versorgung in der\n              Bundesrepublik\n              Deutschland</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule} from './../material/material.module'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartComponent } from './pages/start/start.component';\nimport * as PlotlyJS from 'plotly.js/dist/plotly.js';\nimport { PlotlyModule ,PlotlyService} from 'angular-plotly.js';\nimport * as DeLocale from '../../node_modules/plotly.js/lib/locales/de-ch.js'\nimport * as SVLocale from 'plotly.js/lib/locales/de.js';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MapComponent } from './components/leafletmap/map/map.component';\nimport { PlotComponent } from './components/plotly/plot/plot.component';\nimport { TableComponent } from './components/table/table/table.component';\nimport { BoxComponent } from './components/infobox/box/box.component';\nimport { registerLocaleData } from '@angular/common';\nimport locales from '@angular/common/locales/de';\nimport { LOCALE_ID } from '@angular/core';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \nimport { InterceptorService } from './services/interceptor-service.service';\nimport { PrivateComponent } from './pages/private/private.component';\nimport { AdminComponent } from './pages/admin/admin.component' \nimport { ReplacePipe } from './services/replace_pipe';\nimport { AddUserDialog } from './pages/admin/components/addUserDialog';\nimport { UpdateUserDialog } from './pages/admin/components/updateUserDialog';\nimport { DeleteUserDialog } from './pages/admin/components/deleteUserDialog';\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\nregisterLocaleData(locales, 'de');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    MapComponent,\n    PlotComponent,\n    TableComponent,\n    BoxComponent,\n    LoginComponent,\n    ProfileComponent,\n    PrivateComponent,\n    AdminComponent,\n    ReplacePipe,\n    AddUserDialog,\n    UpdateUserDialog,\n    DeleteUserDialog\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    PlotlyModule,\n    FlexLayoutModule  ,\n    ReactiveFormsModule, \n    FormsModule, \n    HttpClientModule \n  ],\n  providers: [\n    // {provide: LOCALE_ID, useValue: 'de-DE' },PlotlyService,\n\n  // This needs to be uncommented to provide  auth\n  { provide: HTTP_INTERCEPTORS, \n  useClass: InterceptorService, \n  multi: true } \n],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { \n  constructor(private plotlyService: PlotlyService) {\n    this.setupPlotly()\n  }\n\n  private async setupPlotly() {\n    const plotly = await this.plotlyService.getPlotly()\n    plotly.register(DeLocale)\n    plotly.setPlotConfig({ locale: 'de' })\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SelectControlValueAccessor } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-box',\n  templateUrl: './box.component.html',\n  styleUrls: ['./box.component.scss']\n})\nexport class BoxComponent implements OnInit {\n  @Input() value: number;\n  @Input() title: string;\n  @Input() description: string;\n  @Input() colors: string[];\n  @Input() cutoffs: string[];\n  @Input() maincolor: string;\n  @Input() numberformat: string;\n  @Input() maticon: string;\n  @Input() textbehind: boolean;\n  itemcolor: string;\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n    this.value = Number(this.value);\n    if (!this.numberformat) { this.numberformat = '1.1-1'; }\n    if (!this.maincolor) { this.maincolor = this.api.primarycolor; }\n    if (!this.cutoffs) { this.cutoffs = []; }\n    this.setcolor();\n  };\n\n  setcolor() {\n    let color = this.maincolor;\n    this.itemcolor = this.maincolor;\n\n    if (this.cutoffs.length > 0 && this.cutoffs.length == this.colors.length) {\n      let i = 0;\n      for (let cutvalue of this.cutoffs) {\n        if (Number(cutvalue) <= this.value) {\n          color = this.colors[i];\n        }\n        i = i + 1;\n      }\n    }\n    this.itemcolor = color;\n  }\n}\n","<!-- <mat-card [style.background-color]=\"this.itemcolor\">\n  <div fxLayout=\"row\">\n    <div fxFlex>\n      <h1 *ngIf=\"!this.textbehind\">{{this.title}}{{this.value | number: this.numberformat : \"de\"}}</h1>\n      <h1 *ngIf=\"this.textbehind\">{{this.value | number: this.numberformat : \"de\"}} {{this.title}}</h1>\n      <p><span>{{this.description}}</span> </p>\n    </div>\n    <div fxFlex *ngIf=\"this.maticon\">\n      <span class=\"mat-headline\"><mat-icon inline=true>{{this.maticon}}</mat-icon></span>\n    </div>\n  </div>\n</mat-card> -->\n\n<mat-card class=\"box-card\" [style.background-color]=\"this.itemcolor\">\n  <h1 *ngIf=\"!this.textbehind\">{{this.title}}{{this.value | number: this.numberformat : \"de\"}}</h1>\n  <h1 *ngIf=\"this.textbehind\">{{this.value | number: this.numberformat : \"de\"}} {{this.title}}</h1>\n  <p><span>{{this.description}}</span></p>\n  <div *ngIf=\"this.maticon\">\n    <span class=\"mat-headline\"><mat-icon inline=true>{{this.maticon}}</mat-icon></span>\n  </div>\n</mat-card>","import { Component, OnInit, Input, Output, Renderer2, EventEmitter } from '@angular/core';\nimport * as L from 'leaflet';\nimport { icon, Marker } from 'leaflet';\nimport { HttpClient } from '@angular/common/http';\nimport { FeatureCollection } from 'geojson';\nimport { ApiService } from 'src/app/services/api.service';\nimport * as chroma from \"chroma-js\";\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n\n})\nexport class MapComponent implements OnInit {\n  @Input() data = [];\n  @Input() nacolor = \"white\";\n  @Input() debug :boolean = false;\n  @Input() Outcome: String;\n  @Input() Zoom: number;\n  @Input() basemap: any; // geojson\n  @Input() center: any;\n  @Input() opacity: number;\n  @Input() feature: string; // name of outcome\n  @Input() colorscale: any;\n  @Input() cutofflist: any;\n  @Input() customlabels: any;\n  @Input() binmethod: string;\n  @Input() selectmap: boolean;\n  @Input() bins: number;\n  @Input() id: string; // feature id\n  @Input() percent: boolean;\n  @Input() containername: string;\n  @Output() clicked = new EventEmitter<string>();\n  mapok:boolean;\n  clickedvalue: string;\n  legend: any;\n  map: any;\n  useprovider = 0;\n  firstload = true;\n  providers = ['https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png']\n  attributions = ['Kartenmaterial &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    '©OpenStreetMap, ©CartoDB'];\n  constructor(private http: HttpClient, private renderer: Renderer2, private api: ApiService) { }\n  \n  \n  ngOnInit(): void {\n    // Debug\n    if (this.debug){\n      console.log(\"ID:\",this.id);\n      console.log(\"Map:\",this.api.getValues(this.basemap['features'],'properties'));  \n    }\n\n    // Sort data\n    this.data = this.api.sortArray(this.data,this.Outcome);\n    \n    // Init vars\n    this.resetprops();\n    this.clickedvalue = \"\";\n    if (!this.binmethod){\n      this.binmethod='equalint';\n    };\n  }\n  ngAfterViewInit(): void {\n    // Import Map data\n    this.initMap(this.containername);\n  }\n\n  \n\n  ngOnChanges(changes: any) {\n    // On any change replace the map-container\n    if (!this.selectmap) {\n      if ((changes.data || changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n    else {\n      if ((changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n\n\n  }\n\n  ngOnDestroy(){\n    this.map = null;\n    this.data = null;\n    }\n\n\n  resetprops() {\n    if (!this.containername) { this.containername = \"mapdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); };\n    if (!this.Zoom) { this.Zoom = 4; };\n    if (!this.center) { this.center = this.getcenter(); };//  DOES NOT WORK FOR TYPE MULTIPOLYGON!\n    if (!this.opacity) { this.opacity = .1; };\n    if (!this.customlabels) { this.customlabels = []; };\n    if (!this.binmethod) { this.binmethod = \"equalint\" };\n  }\n\n  checkallok() {\n    let res;\n    if (!this.selectmap) {\n      res = this.data && this.basemap;\n      if (res) {\n        res = this.data.length > 0 && this.basemap.features;\n      }\n\n    }\n    else {\n      res = this.basemap;\n      if (res) {\n        res = this.basemap.features;\n      }\n\n    }\n\n    return res;\n  }\n  preparedom(divid) {\n    if (document.getElementById(divid)) { document.getElementById(divid).remove();};\n    let mapcontainer = this.renderer.createElement(\"div\");\n    this.renderer.setProperty(mapcontainer, 'id', divid);\n    this.renderer.addClass(mapcontainer, \"mapdiv\");    \n    if (document.getElementById(\"map-frame\")!==null){\n      this.renderer.appendChild(document.getElementById(\"map-frame\"), mapcontainer);}\n    return true;\n  }\n\n  async initMap(divid) {\n    // Init\n    let mymap;\n    this.mapok = false;\n    let colors = this.colorscale;\n    let cutoffs = this.cutofflist;\n    let thedata;\n    if (this.data) {\n      thedata = Object.assign(this.data);\n    }\n    let propname = this.feature;\n    let theid = this.id;\n    let theopacity = this.opacity;\n    let basestyle = {\n      weight: 1,\n      dashArray: '',\n      \"color\": \"grey\",\n      \"fillOpacity\": theopacity,\n      \"Opacity\": theopacity\n    };\n\n    // If to many regions set weight to 0\n    if (thedata.length > 30 ){\n      basestyle.weight=0;\n    };\n\n    // Prepare dom\n    this.firstload= false;\n    let removed = false;\n    await this.preparedom(divid);\n    // Load Map\n\n    if (this.debug){\n      console.log('center: ',this.center );\n    }\n    try {\n    mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\n    }\n    catch(e){\n      document.getElementById(divid).remove();\n      await this.preparedom(divid);\n      mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\n    };\n    if (this.debug){\n      console.log('Map created');\n    }\n\n    // Fix Icons see https://stackoverflow.com/questions/41144319/leaflet-marker-not-found-production-env\n    const iconRetinaUrl = 'assets/marker-icon-2x.png';\n    const iconUrl = 'assets/marker-icon.png';\n    const shadowUrl = 'assets/marker-shadow.png';\n    const iconDefault = icon({\n      iconRetinaUrl,\n      iconUrl,\n      shadowUrl,\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      tooltipAnchor: [16, -28],\n      shadowSize: [41, 41]\n    });\n    Marker.prototype.options.icon = iconDefault;\n\n    // Load Tiles\n    let theprovider = this.useprovider;\n    const tiles = L.tileLayer(this.providers[theprovider],\n      {\n        maxZoom: 19, opacity: 1,\n        attribution: this.attributions[theprovider]\n      });\n    tiles.addTo(mymap);\n    mymap.attributionControl.setPrefix('<a href=\"https://www.ziapp.de\"><strong>Zi</strong> Data Science Lab</a>');\n    tiles.getContainer().className += ' custombgmap';\n\n    // Chloropleth Map\n    if (!this.selectmap) {\n\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      if (this.percent) {\n        for (let item of thedata) {\n          if (item[this.feature]){\n            item['___thevalue'] = Math.round(item[this.feature] * 10000) / 100;\n          }\n          else {\n            item['___thevalue']=null;\n          }\n        }\n      }\n      else {\n        for (let item of thedata) {         \n          if (item[this.feature]){\n            item['___thevalue'] = item[this.feature];\n          }\n          else {\n            item['___thevalue']=null;\n          }\n        }\n      }\n      for (let item of geojsonFeature.features) {\n        let value = this.api.filterArray(thedata, this.id, item.properties[this.id]);\n        if (value.length > 0) {\n          item['properties'][propname] = value[0]['___thevalue'];\n        }\n        else {\n          item['properties'][propname] = null;\n        }\n      }\n      if (this.debug){\n        console.log('Map Features',geojsonFeature.features);\n        console.log(\"Data:\",this.data);\n      }\n      \n\n\n      if (!cutoffs) {\n        cutoffs = this.makecutoffs(this.api.getValues(thedata, '___thevalue'), this.binmethod, this.bins);\n      };\n      if (colors.length < cutoffs.length) {\n        colors = this.makescale(cutoffs.length)\n      }\n\n      let myStyle = function (feature) {\n        let thevalue = feature.properties[propname];\n        let i = 0;\n        let result = basestyle;\n        let thecolor = colors[0];\n        for (let colorcode of colors) {\n          if (thevalue > cutoffs[i]) {\n            thecolor = colorcode;\n          };\n          i = i + 1;\n        }\n        if (thevalue != null) { result['color'] = thecolor; } \n        else {\n          result['color'] = 'grey';\n        };\n        return result\n      };\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\") + (props && props[propname] ? '<br><strong>Wert: </strong>' + props[propname].toLocaleString() : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n      // Add Features/Polygons to Map\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.zoomToFeature(mymap, e))\n            })\n          )\n        });\n      featLayer.resetStyle();\n      featLayer.addTo(mymap);\n\n      // Add Legend to Map\n      let labels\n      if (this.customlabels) { labels = this.customlabels; };\n\n      let legend;\n      legend = L.control.layers({}, {}, { position: 'topright' });\n      let legendtitle = this.api.stringwrap(propname);\n\n      legend.onAdd = function (map) {\n\n        this._ldiv = L.DomUtil.create('div', 'customlegend');\n        this._ldiv.innerHTML = '<p><strong>' + legendtitle + '</strong></p>';\n        if (this.percent == true) {\n          this._ldiv.innerHTML += '<p><em>Anteil in %</em></p>';\n        }\n        if (cutoffs) {\n          for (var i = 0; i < cutoffs.length; i++) {\n            if (labels.length == cutoffs.length) {\n              this._ldiv.innerHTML +=\n                '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                labels[i];\n            }\n            else {\n              if (cutoffs.length > 4) {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i> ' +\n                  cutoffs[i].toLocaleString() + (cutoffs[i + 1] ? ' bis unter ' + cutoffs[i + 1].toLocaleString() + '<br>' : '+');\n              }\n              else {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                  (cutoffs[i + 1] ? 'bis ' + cutoffs[i + 1].toLocaleString() + \"&nbsp;\" : cutoffs[i].toLocaleString() + '+');\n              }\n            }\n          }\n        }\n\n        return this._ldiv;\n      };\n\n      legend.addTo(mymap);\n    }\n    else {\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      colors = this.makescale(2);\n      let myStyle = function (feature) {\n        let res = basestyle;\n        let thecolor= \"grey\";\n        if (feature.properties['___clicked']) {\n          thecolor = colors[1];\n        }\n        res['color']=thecolor;\n        return res;\n      }\n\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.selectarea(mymap, e))\n            })\n          )\n        });\n      featLayer.addTo(mymap);\n\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n    }\n    this.mapok=true;\n\n  };\n\n  highlightFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity * 1.1\n    });\n    info.update(layer.feature.properties);\n  }\n\n  resetFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity,\n    });\n    info.update();\n  }\n\n  makecutoffs(array, method = \"equalint\", bins) { \n    let result = [];\n    let minv = Math.min(...array);\n    let maxv = Math.max(...array);\n\n    // equalint    \n    if (method=='equalint'){\n    let steps = Math.round((maxv - minv) / bins);\n    let i = 0;\n    while (i < bins) {\n      result.push((i + 1) * steps + minv);\n      i = i + 1;\n    };\n    if (this.debug){\n      console.log(\"CUTOFF RESULT\",result,\"\\ninputarray\",array);\n    }\n    };\n\n   // equal group size \n   if (method=='equalgroupsize'){    \n    let sortedarray = this.api.filterNA(array.sort((a,b)=>parseFloat(a)-parseFloat(b)));\n    let arraylength = sortedarray.length;\n    let groupsize= Math.floor(arraylength/bins);    \n    for (let thebin of Array.apply(null, {length: bins}).map(Number.call, Number)){\n      if (thebin==0){\n        result.push(sortedarray[0])\n      }\n      else {\n        result.push(sortedarray[groupsize*thebin]);\n      }\n    }\n    if (this.debug){\n      console.log(\"CUTOFF RESULT\",result.sort(),\"\\ninputarray\",sortedarray,\"Group Size\",groupsize);\n    }     \n    };\n   \n    return result;\n\n  };\n\n\n  newclick(e){\n    let res = [];\n    for (let item of this.basemap.features){\n      if (item.properties[this.id]==e){\n        item.properties['___clicked']=true;\n      }\n      else {\n        item.properties['___clicked']=false;\n      }\n      res.push(item);\n    }\n    this.basemap['features']=res;\n    this.initMap(this.containername);\n  }\n\n  zoomToFeature(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n  }\n\n  selectarea(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n    this.newclick(e.target.feature.properties[this.id]);\n  }\n\n  makescale(bins = 5) {\n    return chroma.scale([chroma(this.api.primarycolor).set('hsl.h', -120), this.api.primarycolor]).colors(bins);\n  }\n\n  getcenter() {\n    let features = this.basemap.features;\n    let coords = { 'a': [], 'b': [] };\n    for (let item of features) {\n      for (let area of item.geometry.coordinates) {\n        for (let subarea of area) {          \n          coords['a'].push(subarea[0])\n          coords['b'].push(subarea[1])\n          \n        }\n      }\n    }\n    if (this.debug){\n      console.log(\"CENTER FEATURES:\",this.basemap.features);\n      console.log(\"CENTER COORDS:\",coords);\n    }\n    let a = coords['a'].reduce((pv, cv) => pv + cv, 0) / coords['a'].length;\n    let b = coords['b'].reduce((pv, cv) => pv + cv, 0) / coords['b'].length;\n\n    return [b, a]\n  }\n\ndonothing(e){\n  return null;\n};\n}\n\n","<ng-container *ngIf=\"!(this.basemap)\">\n  <mat-spinner color=\"primary\"></mat-spinner>\n</ng-container>\n\n<ng-container *ngIf=\"(this.basemap)\">\n<div  class=\"map-container\">\n    <div id=\"map-frame\" class=\"map-frame\">\n      \n    </div>    \n    <mat-spinner *ngIf=\"!this.mapok\" color=\"primary\"></mat-spinner>\n  </div>\n</ng-container>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport * as DeLocale from '../../../../../node_modules/plotly.js/lib/locales/de-ch.js'\nimport * as SVLocale from 'plotly.js/lib/locales/de.js';\nimport { PlotlyService } from 'angular-plotly.js';\n\n@Component({\n  selector: 'app-plot',\n  templateUrl: './plot.component.html',\n  styleUrls: ['./plot.component.scss'],\n  providers: [PlotlyService]\n})\n\nexport class PlotComponent implements OnInit {\n  @Input() data: any;\n  @Input() xvalue: string;\n  @Input() colorby: string;\n  @Input() outcomes: any;\n  @Input() outcomelabels = [];\n  @Input() plottype: String;\n  @Input() customdata: any;\n  @Input() customconfig: any;\n  @Input() customlayout: any;\n  @Input() custommargins: any;\n  @Input() linewidth: number;\n  @Input() showlegend: boolean;\n  @Input() sort: boolean;\n  @Input() sortx: boolean;\n  @Input() percent: boolean;\n  @Input() percentx: boolean;\n  @Input() basecolor = \"\";\n  @Input() colorscheme = [];\n  @Input() annotations = [];\n  @Input() hovertemplate = \"\";\n  @Input() plottitle = \"\";\n  @Input() plotsubtitle = \"\";\n  @Input() plotcaption = \"\";\n  @Input() n_yticks = 8;\n  @Input() xtickformat = \"\";\n  @Input() xtitle = \"\";\n  @Input() ytitle = \"\";\n  @Input() id = \"\";\n  @Input() divid = \"\";\n  @Input() fontfamily = \"Lato, sans-serif\";\n  @Input() fontsize = \".85rem\";\n  @Input() fontcolor = \"black\";\n  @Input() legendbg = 'ffffff20';\n  @Input() legendposx = 'right';\n  @Input() legendposy = 1;\n  @Output() clicked = new EventEmitter<string>();\n  @Input() resolution: string\n\n  constructor(private api: ApiService) { }\n  plotlayout: any;\n  plotdata: any;\n  mainconfig: any;\n  plotlytype: string;\n  clickedvalue: any;\n\n  ngOnInit(): void {\n    if (this.divid == \"\") { this.divid = \"plotdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); }\n    if (!this.linewidth) { this.linewidth = 2 };\n    if (this.basecolor == \"\") { this.basecolor = this.api.primarycolor };\n    if (this.colorscheme.length == 0) { this.colorscheme = [this.basecolor]; }\n    this.make_plot();\n  }\n\n  ngOnChanges(changes: any) {\n    setTimeout(() => { this.make_plot() }, 0);\n  }\n\n  reportclick(input) {\n    this.clicked.emit(input);\n    this.clickedvalue = input;\n  }\n\n  make_plot() {\n    this.mainconfig = {\n      displayModeBar: false,\n      scrollZoom: false,\n      autosizable: true,\n      locale: 'de-eu',\n      locales: {\n        'de-eu': {\n          format: {\n            currency: ['€', ''],\n            decimal: ',',\n            thousands: '.',\n            grouping: [2]\n          }\n        }\n      },\n      doubleClick: 'reset',\n      showAxisDragHandles: false,\n      showAxisRangeEntryBoxes: false,\n      showTips: true,\n      seperator: ',.'\n    };\n\n    if (this.plottype == \"bar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: {\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\n          gridcolor: \"lightgrey\",\n          gridpattern: \"dot\",\n          gridwidth: 1,\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          annotations: this.annotations,\n          ticksuffix: \" \",\n          nticks: this.n_yticks,\n        },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations,\n      };\n\n      if (this.percent) {\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"heatmap\") {\n      this.plotlytype = 'heatmap';\n      this.plotlayout = {\n        xaxis: { side: 'top' },\n        yaxis: { autosize: true },\n        autosize: false, padding: 0,\n        // legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 50, r: 50, b: 0, t: 50 },\n        paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        //annotations: this.annotations\n      };\n\n      // intermediate fix for bugging xaxis placement\n      this.plotlayout.yaxis.autorange = 'reversed'\n\n      let plotdata = this.data;\n      plotdata['type'] = \"heatmap\";\n      let colors = this.api.makescale(2);\n      plotdata['colorscale'] = [\n        [0, colors[1].concat('CC')],\n        [1, colors[0].concat('CC')]\n      ];\n      plotdata['showscale'] = false;\n      this.plotdata = [plotdata];\n    }\n\n    if (this.plottype == \"violin\") {\n      this.plotlytype = \"violin\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: { zeroline: false, automargin: true, rangemode: 'tozero', ticksuffix: \" \" },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n      if (this.percent) {\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"stackedbar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        barmode: \"stack\",\n        xaxis: { fixedrange: false, showgrid: false, type: 'category', automargin: false, tickfont: { size: 10 } },\n        yaxis: {\n          fixedrange: true, title: '', autosize: true, automargin: true,\n          rangemode: 'tozero', ticksuffix: \" \",\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          nticks: this.n_yticks\n        },\n        padding: 0,\n        // legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n    }\n\n    if (this.plottype == \"tsline\" || this.plottype == \"lines\" || this.plottype == \"area\" ||\n      this.plottype == \"stackedarea\" || this.plottype == 'scatter') {\n      this.plotlytype = \"lines\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, showgrid: false, automargin: false, zeroline: false },\n        yaxis: {\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\n          gridcolor: \"lightgrey\",\n          gridpattern: \"dot\",\n          gridwidth: 1,\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          annotations: this.annotations,\n          ticksuffix: \" \",\n          nticks: this.n_yticks,\n        },\n\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 0, r: 20, b: 50, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\"\n      };\n\n      if (this.percent) {\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n\n      if (this.percentx) {\n        this.plotlayout.xaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"hbar\") {\n      this.plotlytype = \"hbar\";\n      this.plotlayout = {\n        xaxis: {\n          fixedrange: true, showgrid: true, title: '',\n          automargin: true, nticks: this.n_yticks\n        },\n        yaxis: {\n          fixedrange: false, type: 'category', automargin: true,\n          rangemode: 'tozero', ticksuffix: \" \",\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2\n        },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx, y: this.legendposy, bgcolor: this.legendbg },\n        margin: { l: 200, r: 0, b: 20, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n    }\n\n    if (this.custommargins) {\n      this.plotlayout['margin'] = this.custommargins;\n    }\n\n    if (this.showlegend) {\n      this.plotlayout['showlegend'] = true;\n    }\n\n    if (this.resolution === 'weekly') {\n      this.plotlayout.xaxis.tickformat = 'KW %V %Y';\n    } else {\n      this.plotlayout.xaxis.tickformat = '%d.%m.<br>%Y';\n    }\n\n    this.plotlayout['font'] = {\n      family: this.fontfamily,\n      size: this.fontsize,\n      color: this.fontcolor\n    };\n\n    if (this.xtitle !== \"\") {\n      this.plotlayout['xaxis']['title'] = this.xtitle;\n      this.plotlayout['xaxis']['titlefont'] =\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n    }\n    if (this.ytitle !== \"\") {\n      this.plotlayout['yaxis']['title'] = this.ytitle;\n      this.plotlayout['yaxis']['titlefont'] =\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n    }\n\n    if (this.plottype != \"heatmap\") {\n      let plotdata = []\n\n      for (let item of this.data) {\n        plotdata.push(item);\n      }\n\n      if (this.sort) {\n        plotdata = this.api.sortArray(plotdata, this.outcomes[0]);\n      }\n\n      if (this.sortx) {\n        plotdata = this.api.sortArray(plotdata, this.xvalue);\n      }\n\n      let outcomes = this.outcomes;\n      if (this.colorby) {\n        outcomes = this.api.getuniqueValues(plotdata, this.colorby);\n        if (outcomes.length > 1) {\n          this.colorscheme = this.api.makescale(outcomes.length);\n        }\n        plotdata = this.make_colorbyvalues();\n      }\n\n      this.plotdata = this.make_plotdata(plotdata, this.xvalue, outcomes, this.plotlytype);\n\n      // DEBUG\n      // console.log(\"Make Plotdata:\",\"\\ndf:\",plotdata,\"\\nx:\", this.xvalue,\"\\nout:\", outcomes,\"\\ntype:\", this.plotlytype)\n    };\n  }\n\n  make_colorbyvalues() {\n    let newdata = [];\n    let inputdata = this.data;\n    let thecolorvalues = this.api.getuniqueValues(inputdata, this.colorby).sort();\n    let thexvalues = this.api.getuniqueValues(inputdata, this.xvalue);\n    let theoutcome = this.outcomes[0];\n\n    for (let xvalue of thexvalues) {\n      let topush = {};\n      topush[this.xvalue] = xvalue;\n\n      for (let tocolor of thecolorvalues) {\n        let datapoint = this.api.filterArray(this.api.filterArray(inputdata, this.colorby, tocolor), this.xvalue, xvalue)[0];\n\n        if (datapoint) {\n          topush[tocolor] = datapoint[theoutcome];\n        }\n      }\n\n      newdata.push(topush);\n    }\n    // console.log(\"DEBUG make_colorbyvalues:\",'df',inputdata,\"colorvals\",thecolorvalues,\"xvals\",thexvalues,\"outcome\",theoutcome,\"newdf\",newdata);\n    return newdata;\n  }\n\n  make_trace(xdata, ydata = [], name: string, type = \"\") {\n    let trace = {\n      x: xdata,\n      y: ydata,\n      name: name,\n      type: type,\n    }\n\n    if (this.plottype == \"stackedarea\") {\n      trace['stackgroup'] = \"one\";\n    }\n\n    // if (this.hovertemplate !== \"\") {\n    //   trace['hovertemplate'] = this.hovertemplate;\n    // }\n\n    return trace;\n  }\n\n  make_plotdata(source = [], xaxis = \"\", ylist = [], type = \"bar\", colors = this.colorscheme) {\n    let xdata = this.api.getValues(source, xaxis)\n    let list = []\n    let i = 0\n\n    for (let name in ylist) {\n      let theydata = this.api.getValues(source, ylist[i]);\n      let tracename = ylist[i];\n\n      if (this.outcomelabels.length == ylist.length) {\n        tracename = this.outcomelabels[i];\n      }\n\n      let trace = this.make_trace(xdata, theydata, tracename, type = type);\n\n      if (type == \"hbar\") {\n        trace = this.make_trace(this.api.getValues(source, ylist[i]), xdata, ylist[i], type = \"bar\")\n        trace[\"orientation\"] = \"h\"\n      }\n\n      if (type == \"bar\" || type == \"bar\" || type == \"scatter\") {\n        trace[\"marker\"] = {\n          color: colors[i]\n        }\n      }\n\n      if (type == \"lines\") {\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth * 2\n        }\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth * 5\n        }\n\n        trace['name'] = ''\n        trace['hovertemplate'] = '%{x} | %{y:.2f}'\n      }\n\n      if (this.plottype == \"area\") {\n        trace[\"fill\"] = \"tozeroy\";\n      }\n\n      if (this.plottype == \"violin\") {\n        trace = this.make_trace(name, theydata, ylist[i], type = type);\n        trace['x'] = name;\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth\n        }\n      }\n\n      if (this.plottype == \"scatter\") {\n        trace['mode'] = 'markers';\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth * 5\n        }\n        if (this.id != \"\") {\n          trace[\"text\"] = this.api.getValues(source, this.id);\n          trace[\"textfont\"] = { family: this.fontfamily };\n          if (trace['x'].length < 50) {\n            trace['mode'] = 'markers+text';\n            trace['textposition'] = 'bottom center';\n          }\n          else {\n            trace['mode'] = 'markers';\n          }\n        }\n      }\n      list.push(trace)\n      i = i + 1\n    }\n\n    return list\n  }\n}\n","<ng-container *ngIf=\"!(this.plotdata && this.mainconfig && this.plotlayout)\">\n  <mat-spinner color=\"primary\"></mat-spinner>\n</ng-container>\n<ng-container *ngIf=\"this.plotdata && this.mainconfig && this.plotlayout\">\n  <plotly-plot class=\"plotlydiv\" [data]=\"this.plotdata\" [divId]=\"this.divid\" [debug]=\"true\" [layout]=\"this.plotlayout\"\n    [config]=\"this.mainconfig\" (plotlyClick)=\"this.reportclick($event);\" [useResizeHandler]=\"true\"\n    [style]=\"{position: 'relative', width: '100%', height: '100%'}\"></plotly-plot>\n</ng-container>","import { AfterViewInit, Component, OnInit, Input ,ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n  @Input() data:any;\n  @Input() columns:any;\n  @Input() outcomes_numeric:any;\n  @Input() outcomes_rate:any;\n  @Input() newlabels:any;\n  @Input() pagesizes:any;\n  @Input() addfilter:boolean;\n  @Input() addrank:boolean;\n\n  datasource:any;\n  displayedColumns:String[];\n\n  \n  constructor() { }\n\n\n  ngOnInit(){\n  if (!this.outcomes_numeric){this.outcomes_numeric=[]};\n  if (!this.outcomes_rate){this.outcomes_rate=[]};\n  if (!this.pagesizes){this.pagesizes=[10, 50,100]};\n  this.displayedColumns =  this.columns;\n  this.datasource = new MatTableDataSource(this.data); \n  if (this.addrank){\n\n  }\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;    \n  }\n\n  ngOnChanges(changes: any) {\n    this.displayedColumns =  this.columns;\n    this.datasource = new MatTableDataSource(this.data); \n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;   \n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.datasource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","<ng-container *ngIf=\"this.addfilter\">\n  <mat-form-field appearance=\"outline\" >\n    <mat-label>Suche</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Suche...\" #input>\n  </mat-form-field>\n</ng-container>\n\n<mat-table [(dataSource)]=\"this.datasource\" matSort class=\"mat-elevation-z0\">\n\n <ng-container *ngFor=\"let thecol of displayedColumns\">\n  <ng-container [matColumnDef]=\"thecol\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{thecol}} </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> \n      <span *ngIf=\"this.outcomes_rate.indexOf(thecol)>=0\">{{element[thecol] | percent }}</span>\n      <span *ngIf=\"this.outcomes_numeric.indexOf(thecol)>=0\">{{element[thecol] | number }}</span>\n      <span *ngIf=\"(this.outcomes_rate.indexOf(thecol)<0) && (this.outcomes_numeric.indexOf(thecol)<0)\">{{element[thecol]}}</span>\n    </mat-cell >\n  </ng-container>\n</ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n<mat-paginator [pageSizeOptions]=\"this.pagesizes\" showFirstLastButtons></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddUserDialog } from './components/addUserDialog';\nimport { UpdateUserDialog } from './components/updateUserDialog';\nimport { DeleteUserDialog } from './components/deleteUserDialog';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthService,\n    private dialog: MatDialog\n  ) { }\n\n  users: any;\n  myRegform: any;\n  myDataUploadform: any;\n  adduser: boolean;\n  newuser: any;\n  adddata: boolean;\n  uploaderror: any;\n  currentuser: any;\n  usergroupoptions = ['kvuser'];\n  selectedDataLevel = []\n  displayedColumns = ['symbol', 'user', 'rights', 'group', 'actions']\n\n  ngOnInit(): void {\n    this.currentuser = this.auth.getUserDetails();\n    this.updateUserList();\n  }\n\n  updateUserList() {\n    this.api.getTypeRequest('users/').subscribe(data => { this.users = data; })\n  }\n\n  copy(item) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', (item));\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n\n    document.execCommand('copy');\n  }\n\n  openAddUserDialog(): void {\n    const dialogRef = this.dialog.open(AddUserDialog, {})\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateUserList()\n    })\n  }\n\n  openUpdateUserDialog(user): void {\n    const dialogRef = this.dialog.open(UpdateUserDialog, {\n      data: user\n    })\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateUserList()\n    })\n  }\n\n  openDeleteUserDialog(user): void {\n    const dialogRef = this.dialog.open(DeleteUserDialog, {\n      data: user\n    })\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateUserList()\n    })\n  }\n\n  toUpperCase(value: string) {\n    return value.toLocaleUpperCase()\n  }\n\n  fullName(value) {\n    if (value.full_name) {\n      return value.full_name\n    }\n    return `${value.anrede} ${value.firstname} ${value.lastname}`\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n  <h1 ngClass.lt-sm=\"mobileheading\">Administration</h1>\n  <div *ngIf=\"!this.adduser && !this.adddata\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\"\n    fxLayoutAlign=\"start space-between\">\n    <div fxFlex=100>\n      <h2>Administrationsaufgaben</h2>\n      <p class=\"mat-caption greycolor\">In diesem Bereich können Dashboard Administratoren (\"Admin\") und\n        Zi-Administratoren (\"Superadmin\") Daten oder Nutzer*innen hinzufügen.</p>\n    </div>\n    <div>\n      <button mat-raised-button (click)=\"openAddUserDialog(userAddDialog)\" color=\"primary\">Nutzer hinzufügen</button>\n    </div>\n  </div>\n  <div *ngIf=\"!this.adduser && !this.adddata\">\n    <h2>Nutzerliste</h2>\n    <p class=\"mat-caption greycolor\">In diesem Bereich können Nutzerberechtigungen geändert werden.</p>\n    <mat-card>\n      <table class=\"table\" mat-table [dataSource]=\"this.users\">\n        <ng-container matColumnDef=\"symbol\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-icon class=\"matListIcon\" color=\"accent\" *ngIf=\"element['roles'].indexOf('superadmin')>=0\"\n              mat-list-icon>\n              admin_panel_settings\n            </mat-icon>\n            <mat-icon *ngIf=\"element['roles'].indexOf('superadmin')<0\" mat-list-icon>\n              account_circle\n            </mat-icon>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"user\">\n          <th mat-header-cell *matHeaderCellDef> Nutzer </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ fullName(element) }}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"rights\">\n          <th mat-header-cell *matHeaderCellDef> Rechte </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-chip-list class=\"smallchips\">\n              <span *ngFor=\"let role of element.roles\">\n                <mat-chip>{{ toUpperCase(role) }}</mat-chip>\n              </span>\n            </mat-chip-list>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"group\">\n          <th mat-header-cell *matHeaderCellDef> Gruppen </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <ng-container *ngIf=\"element['usergroups']\">\n              <mat-chip-list class=\"smallchips\">\n                <span *ngFor=\"let group of element.usergroups.smed_reporting\">\n                  <mat-chip>{{ toUpperCase(group) }}</mat-chip>\n                </span>\n              </mat-chip-list>\n            </ng-container>\n            <ng-container *ngIf=\"!element['usergroups'] || !element['usergroups']['smed_reporting']\">\n              <mat-chip-list class=\"smallchips\">\n                <mat-chip>Public Access</mat-chip>\n              </mat-chip-list>\n            </ng-container>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef> Aktionen </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button>\n              <mat-icon (click)=\"openUpdateUserDialog(element)\" mat-list-icon>\n                settings\n              </mat-icon>\n            </button>\n            <button mat-icon-button>\n              <mat-icon (click)=\"openDeleteUserDialog(element)\" color=\"warn\" mat-list-icon>\n                delete\n              </mat-icon>\n            </button>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </mat-card>\n  </div>\n  <div *ngIf=\"this.adddata\" fxLayout=\"column\" fxLayoutGap=\"10px\" fxShow.lt-md=false>\n    <h2><strong>Daten hinzufügen</strong></h2>\n    <p>Mehr Informationen <a href=\"./assets/docs/Upload_Dateien.html\">hier</a></p>\n    <mat-card>\n      <div>\n        <h3><strong>Was soll hochgeladen werden?</strong></h3>\n        <mat-radio-group [(ngModel)]=\"this.dataintend\">\n          <mat-radio-button value=\"dataupload\">Daten hinzufügen&nbsp;&nbsp;</mat-radio-button>\n          <mat-radio-button *ngIf=\"this.areavalues\" value=\"geodataupload\">Geodaten hinzufügen&nbsp;\n          </mat-radio-button>\n        </mat-radio-group>\n        <br><br>\n      </div>\n      <div *ngIf=\"this.dataintend=='geodataupload'\" fxLayout=\"column\">\n        <div fxFlex=100>\n          <h3><strong>1. GEOJSON Datei hochladen</strong> <span *ngIf=\"this.geojsonfile\">\n              <mat-icon color=\"primary\">check_circle</mat-icon>\n            </span></h3>\n        </div>\n        <div *ngIf=\"!this.geojsonfile\" fxFlex.lt-md=100 fxFlex=50 fxLayout=\"column\">\n          <div fxFlex=100>\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n              <mat-label>Gebiet für Geodatendatei festlegen</mat-label>\n              <mat-select [(value)]=\"this.uploadarea\">\n                <mat-option *ngFor=\"let option of this.areavalues\" [value]=\"option\">{{option}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div fxFlex=100>\n            <input type=\"file\" accept='.geojson' style=\"display: none\" (change)=\"this.changeListenerGEOJSON($event);\"\n              #dataInput>\n            <br><br>\n            <button [disabled]=\"!this.uploadarea\" mat-raised-button color=\"primary\" (click)=\"dataInput.click()\">Daten\n              Auswählen</button>\n          </div>\n        </div>\n        <div *ngIf=\"this.geojsonfile\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n          <div fxFlex=100>\n            <h3><strong>2. GEOJSON beschreiben</strong> <span *ngIf=\"this.geodatafile\">\n                <mat-icon color=\"primary\">check_circle</mat-icon>\n              </span></h3>\n          </div>\n          <div fxFlex=100>\n            <p>Die Datei hat {{this.geojsonfile['features'].length | number}} Regionen.</p>\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n              <mat-label>Wie lautet die Bezeichnung Regionen im geojson?</mat-label>\n              <mat-select [(value)]=\"this.uploadareaid\">\n                <mat-option *ngFor=\"let option of this.areafeatures\" [value]=\"option\">{{option}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"this.dataintend=='dataupload'\">\n        <h3><strong>1. CSV Datei hochladen</strong> <span *ngIf=\"this.datafile\">\n            <mat-icon color=\"primary\">check_circle</mat-icon>\n          </span></h3>\n        <div *ngIf=\"!this.datafile\" fxFlex.lt-md=100 fxFlex=50>\n          <input type=\"file\" accept='.csv' style=\"display: none\" (change)=\"this.datafile=this.changeListener($event);\"\n            #dataInput>\n          <br><br>\n          <button mat-raised-button color=\"primary\" (click)=\"dataInput.click()\">Daten\n            Auswählen</button>\n        </div>\n      </div>\n    </mat-card>\n    <mat-card *ngIf=\"this.metadatafile && this.dataintend=='dataupload'\">\n      <div>\n        <h3><strong>2. Daten beschreiben</strong><span *ngIf=\"this.metadone\">\n            <mat-icon color=\"primary\">check_circle</mat-icon>\n          </span></h3>\n        <p>Bitte prüfen Sie die initinale Zuordnung sorgfältig. Jeder Upload muss mindestens zwei Variablen vom\n          Bereich \"ordering\" enthalten\n          (Typen: level,levelid). Ebenso sollten alle Subgruppenvariablen vom Typ Gruppe sein. Jede Variable\n          aus den Bereichen \"ordering\" oder \"sungroups\" muss Angaben zur Referenzkategorie machen.\n          Zellen für diese Kategorie müssen auch in der Tabelle zu finden sein. Die Variablen aus den\n          Bereichen Outcomes oder\n          Demography sollten vom Typ 'rate' oder 'number' sein. Das Hinzufügen einer Indikatorenbeschreibung\n          ist optional.</p>\n      </div>\n      <div *ngIf=\"(this.datacheck.length>0)\">\n        <mat-list>\n          <h3 matSubheader><strong>Gefundene Fehler:</strong></h3>\n          <mat-list-item *ngFor=\"let hinweis of this.datacheck\">\n            <mat-icon color=\"primary\" mat-list-icon>error</mat-icon>\n            <div mat-line><span class=\"primarycolor\">{{hinweis}}</span></div>\n          </mat-list-item>\n        </mat-list>\n      </div>\n      <div class=\"smalltab\" *ngIf=\"this.metadatafile && !this.metadone\" fxflex=100>\n        <div class=\"tabheader\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n          <div fxFlex=15>Name</div>\n          <div fxFlex=20>Thema</div>\n          <div fxFlex=20>Typ</div>\n          <div fxFlex>Referenzkategorie</div>\n          <div fxFlex=15></div>\n        </div>\n        <div class=\"tabvalues primarycolor\" *ngFor=\"let row of this.metadatafile\" fxLayout=\"row wrap\"\n          fxLayoutGap=\"10px\">\n          <div fxFlex=15><br>{{row.varname}}</div>\n          <div fxFlex=20>\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n              <mat-label>Bereich</mat-label>\n              <mat-select [(value)]=\"row.topic\" (selectionChange)=\"this.checkmetadata()\">\n                <mat-option *ngFor=\"let option of this.topicoptions\" [value]=\"option\">{{option}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div fxFlex=20>\n            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n              <mat-label>Art</mat-label>\n              <mat-select [(value)]=\"row.type\" (selectionChange)=\"this.checkmetadata()\">\n                <mat-option *ngFor=\"let option of this.typeoptions\" [value]=\"option\">{{option}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div fxFlex>\n            <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)>=0\">\n              <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                <mat-label>Referenzkategorie</mat-label>\n                <mat-select [(value)]=\"row.allforlevel\" (selectionChange)=\"this.checkmetadata()\">\n                  <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\n                    {{option}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\" *ngIf=\"row.type=='level'\">\n                <mat-label>Öffentliche Raumebenen</mat-label>\n                <mat-select [(value)]=\"row.publiclevels\" (selectionChange)=\"this.checkmetadata()\" multiple>\n                  <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\n                    {{option}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </ng-container>\n            <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)<0\">\n            </ng-container>\n          </div>\n          <div fxFlex=15>\n            <mat-chip-list>\n              <mat-chip color=\"primary\" (change)=\"this.checkmetadata()\" [selected]=\"row.public\"\n                (click)=\"row.public=!row.public\">\n                <span *ngIf=\"row.public\">Öffentlich</span>\n                <span *ngIf=\"!row.public\">Privat</span>\n              </mat-chip>\n              <mat-chip color=\"primary\" [selected]=\"row.adddescr\" (click)=\"row.adddescr=!row.adddescr\">\n                Beschreibung\n              </mat-chip>\n            </mat-chip-list>\n          </div>\n          <div *ngIf=\"row.adddescr\" fxFlex=100>\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n              <mat-label>Indikatorenbeschreibung</mat-label>\n              <textarea style=\"color:black\" [(ngModel)]=\"row.description\" matInput rows=\"10\" cols=\"40\"></textarea>\n            </mat-form-field>\n          </div>\n        </div>\n        <div>\n          <div><button mat-raised-button [disabled]=\"!(this.datacheck.length==0)\" (click)=\"this.metadone=true\"\n              color=\"accent\">Beschreibung\n              Fertig</button>\n          </div>\n        </div>\n      </div>\n    </mat-card>\n    <div *ngIf=\"this.metadone\">\n      <mat-card>\n        <h3><strong>3. Sollen die aktuellen Daten überschrieben werden?</strong></h3>\n        <p>\n          <mat-slide-toggle [(ngModel)]=\"this.replacedata\"></mat-slide-toggle>\n          <span style=\"color:crimson;\" *ngIf=\"this.replacedata\">überschreiben</span>\n          <span *ngIf=\"!this.replacedata\">nicht überschreiben.</span>\n        </p>\n        <p *ngIf=\"!this.replacedata\"><em>Achtung: Das Ergänzen der Daten ist aufwändig und erfordert ggf. viel\n            Zeit. Bitte ergänzen Sie nur kleine Datenkörper!</em>\n        </p>\n      </mat-card>\n    </div>\n    <div class=\"add-margin\" fxLayoutAlign=\"space-between\" *ngIf=\"(!this.uploadres || this.uploadres=='error')\">\n      <div><button mat-raised-button (click)=\"uploadnewdata()\" [disabled]=\"(!this.metadone) && (!this.uploadareaid)\"\n          color=\"accent\">Hinzufügen\n        </button></div>\n      <div><button mat-raised-button (click)=\"this.resetall();\" color=\"primary\">Abbrechen</button></div>\n    </div>\n    <div *ngIf=\"this.uploadres\">\n      <mat-card>\n        <h1>Datenupload</h1>\n        <mat-spinner *ngIf=\"this.uploadres=='pending'\" [diameter]=\"50\"></mat-spinner>\n        <p *ngIf=\"this.uploadres=='pending'\">Hinweis: Bitte haben Sie Geduld: Es kann etwas dauern wenn viele\n          Daten aktualisiert oder gelöscht werden müssen.</p>\n        <p *ngIf=\"this.uploadres=='success'\">\n          <strong>Upload erfolgreich!</strong>\n        </p>\n        <p *ngIf=\"this.uploadres=='error'\">\n          <strong>Fehler beim Upload</strong> Fehlermeldung: <span class=\"primarycolor\">{{this.uploaderror}}</span>\n        </p>\n      </mat-card>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UntypedFormBuilder, Validators, UntypedFormGroup, UntypedFormControl } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'addUserDialog',\n  templateUrl: 'addUserDialog.html'\n})\n\nexport class AddUserDialog implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<AddUserDialog>,\n    private api: ApiService,\n    private fb: UntypedFormBuilder,\n  ) { }\n\n  myRegform: any;\n  usergroupoptions = [{ name: 'Public Access', value: 'public' }, { name: 'KV Benutzer', value: 'kvuser' }];\n  userRights = [{ name: 'User', value: 'user' }, { name: 'Admin', value: 'admin' }, { name: 'Superadmin', value: 'superadmin' }]\n  salutations = ['Herr', 'Frau', 'Frau Dr.', 'Herr Dr.', 'Dr.', ' ']\n\n  ngOnInit(): void {\n    // this.currentuser = this.auth.getUserDetails();\n    this.buildForm();\n    this.getUserGroups()\n  }\n\n  addUser() {\n    const userDataAdd = this.myRegform.value;\n    this.api.postTypeRequest(\"newuser\", userDataAdd).subscribe(\n      data => { }\n    );\n  }\n\n  async getUserGroups(): Promise<void> {\n    const metaData: Array<any> = await this.api.getmetadata(\"metadata\")\n    const getLevelId = metaData.filter(item => item.varname === 'levelid')[0]\n    const levelRights = getLevelId.levelrights\n\n    if (levelRights) {\n      const getCustomerLevels = Object.keys(levelRights)\n        .filter((key) => !key.includes('kvuser') && !key.includes('public'))\n        .reduce((cur, key) => {\n          return Object.assign(cur, { [key]: levelRights[key] })\n        }, {})\n\n      const levelKeys = Object.keys(getCustomerLevels)\n\n      for (const level of levelKeys) {\n        this.usergroupoptions.push({ name: level, value: level })\n      }\n    }\n  }\n\n  buildForm() {\n    this.myRegform = new UntypedFormGroup({\n      anrede: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\n      firstname: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\n      lastname: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\n      email: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\n      roles: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\n      dataLevel: new UntypedFormControl({ value: '', disabled: false }, Validators.required),\n      password: new UntypedFormControl({ value: '', disabled: false }, [Validators.required, Validators.minLength(12)])\n    })\n\n    this.myRegform.patchValue({ \"password\": this.randomPassword() });\n  };\n\n  randomPassword() {\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close()\n  }\n}","<div fxLayout=\"row wrap\">\n  <div fxFlex=100>\n    <h2><strong>Nutzer hinzufügen</strong></h2>\n    <mat-card>\n      <form autocomplete=\"on\" [formGroup]=\"myRegform\">\n        <h2><strong>Informationen</strong></h2>\n        <h4><strong>Name</strong>:</h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-label>Anrede</mat-label>\n          <mat-select name=\"anredefeld\" formControlName=\"anrede\" required>\n            <mat-option *ngFor=\"let salutation of salutations\" [value]=\"salutation\">\n              {{ salutation === ' ' ? 'keine Anrede' : salutation }}\n            </mat-option>\n          </mat-select>\n          <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n          <mat-label>Vorname</mat-label>\n          <input matInput placeholder=\"First name\" name=\"fname\" formControlName=\"firstname\">\n          <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n          <mat-label>Nachname</mat-label>\n          <input matInput placeholder=\"Last Name\" name=\"lname\" formControlName=\"lastname\">\n          <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\n        </mat-form-field>\n        <h4><strong>E-Mail</strong> des neuen Nutzers</h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n          <mat-icon matSuffix>email</mat-icon>\n          <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\n        </mat-form-field>\n        <h4><strong>Rechte</strong></h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-select name=\"roles\" formControlName=\"roles\">\n            <mat-option *ngFor=\"let rights of userRights\" [value]=\"rights.value\">\n              {{ rights.name }}\n            </mat-option>\n          </mat-select>\n          <mat-error>Bitte wählen Sie eine Bereichtungsstufe aus.</mat-error>\n        </mat-form-field>\n        <h4><strong>Daten-Level</strong></h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-select multiple name=\"dataLevel\" formControlName=\"dataLevel\">\n            <mat-option *ngFor=\"let dataLevel of usergroupoptions\" [value]=\"dataLevel.value\">\n              {{ dataLevel.name }}\n            </mat-option>\n          </mat-select>\n          <mat-error>Bitte wählen Sie mindestens ein Datenlevel aus.</mat-error>\n        </mat-form-field>\n        <h4>Initiales <strong>Passwort</strong>:</h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-label>Passwort</mat-label>\n          <mat-error>Passwort zu kurz</mat-error>\n          <input matInput type=\"string\" formControlName=\"password\" required>\n          <mat-hint>Bitte kopieren Sie das Passwort</mat-hint>\n          <mat-hint *ngIf=\"this.myRegform.value.password.length<12\">Ihr Passwort (mindestens 12 Zeichen).\n          </mat-hint>\n        </mat-form-field>\n      </form>\n    </mat-card>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <button mat-raised-button (click)=\"onNoClick()\" color=\"warn\">Abbrechen</button>\n    <button [disabled]=\"this.myRegform.value.password.length<12\" mat-raised-button (click)=\"this.addUser();\"\n      color=\"primary\">Hinzufügen</button>\n  </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'deleteUserDialog',\n  templateUrl: 'deleteUserDialog.html'\n})\n\nexport class DeleteUserDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteUserDialog>,\n    private api: ApiService,\n    @Inject(MAT_DIALOG_DATA)\n    public data: any\n  ) { }\n\n  deletUser() {\n    alert('delete')\n    // open dialog to reinsure it wasn't a mistake\n    // this.api.deleteuser(user).subscribe(\n    //   data => { this.updateUserList() });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close()\n  }\n}","<h2><strong>Nutzer Löschen</strong></h2>\n<mat-card>\n  <p>Sind Sie sicher dass Sie den User {{ data.firstname }} löschen wollen?</p>\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <button mat-raised-button (click)=\"onNoClick()\">Abrechen</button>\n    <button mat-raised-button (click)=\"deletUser()\">Löschen</button>\n  </div>\n</mat-card>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'updateUserDialog',\n  templateUrl: 'updateUserDialog.html',\n  styleUrls: ['./updateUserDialog.scss']\n})\n\nexport class UpdateUserDialog implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<UpdateUserDialog>,\n    private api: ApiService,\n    private fb: UntypedFormBuilder,\n    @Inject(MAT_DIALOG_DATA)\n    public data: any\n  ) { }\n\n  users: any;\n  myRegform: any;\n  isPasswordChange: boolean = false\n  userGroupOptions = [{ name: 'Public Access', value: 'public', selected: false }, { name: 'KV Benutzer', value: 'kvuser', selected: false }];\n  userRights = [{ name: 'User', value: 'user', selected: false }, { name: 'Admin', value: 'admin', selected: false }, { name: 'Superadmin', value: 'superadmin', selected: false }]\n  salutations = ['Herr', 'Frau', 'Frau Dr.', 'Herr Dr.', 'Dr.', ' ']\n  strongPasswordRegx: RegExp = /^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\D*\\d).{8,}$/;\n\n  ngOnInit(): void {\n    // this.currentuser = this.auth.getUserDetails();\n    this.buildForm();\n    this.getUserGroups()\n  }\n\n  async getUserGroups(): Promise<void> {\n    const metaData: Array<any> = await this.api.getmetadata(\"metadata\")\n    const getLevelId = metaData.filter(item => item.varname === 'levelid')[0]\n    const levelRights = getLevelId.levelrights\n\n    if (levelRights) {\n      const getCustomerLevels = Object.keys(levelRights)\n        .filter((key) => !key.includes('kvuser') && !key.includes('public'))\n        .reduce((cur, key) => {\n          return Object.assign(cur, { [key]: levelRights[key] })\n        }, {})\n\n      const levelKeys = Object.keys(getCustomerLevels)\n\n      for (const level of levelKeys) {\n        this.userGroupOptions.push({ name: level, value: level, selected: false })\n      }\n    }\n\n    this.rights()\n    this.dataLevel()\n  }\n\n  rights() {\n    for (let role of this.data.roles) {\n      for (let rights of this.userRights) {\n        if (role === rights.value) {\n          rights.selected = true\n        }\n        if (this.data.is_admin && rights.value === 'admin') {\n          rights.selected = true\n        }\n      }\n    }\n\n    return this.userRights\n  }\n\n  dataLevel() {\n    for (let group of this.data.usergroups.smed_reporting) {\n      for (let group_ of this.userGroupOptions) {\n        if (group === group_.value) {\n          group_.selected = true\n        }\n      }\n    }\n\n    return this.userGroupOptions\n  }\n\n  updateUserRole(type, user, key, value) {\n    if (type === 'role') {\n      if (value === 'user') {\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\n\n        this.api.updateuser(user.email, value, !user['is_user']).subscribe()\n      }\n      if (value === 'admin') {\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\n\n        this.api.updateuser(user.email, value, !user['is_admin']).subscribe()\n      }\n      if (value === 'superadmin') {\n        this.userRights.filter(i => { if (i.value === value) i.selected = !i.selected })\n\n        this.api.updateuser(user.email, value, !user['is_superadmin']).subscribe()\n      }\n    }\n  }\n\n  updateUserDataLevel(type, user, key, value) {\n    let add = false\n\n    if (value !== 'public') {\n      add = true\n    }\n\n    this.userGroupOptions.filter(i => { if (i.value === value) i.selected = !i.selected })\n\n    this.api.updateuser(user, key, add, value).subscribe()\n  }\n\n  buildForm() {\n    this.myRegform = new UntypedFormGroup({\n      anrede: new UntypedFormControl({ value: this.data.anrede, disabled: true }),\n      firstname: new UntypedFormControl({ value: this.data.firstname, disabled: true }),\n      lastname: new UntypedFormControl({ value: this.data.lastname, disabled: true }),\n      password: new UntypedFormControl('', { validators: [Validators.required, Validators.pattern(this.strongPasswordRegx)] }),\n      email: new UntypedFormControl({ value: this.data.email, disabled: true }),\n      roles: new UntypedFormControl({ value: this.data.roles[this.data.roles.length - 1], disabled: false }),\n      dataLevel: new UntypedFormControl({ value: this.data.usergroups ? this.data.usergroups.smed_reporting : [], disabled: false }),\n    })\n  };\n\n  randomPassword() {\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\n  }\n\n  togglePasswordChange() {\n    this.isPasswordChange = !this.isPasswordChange\n  }\n\n  changePassword() {\n    const password = this.myRegform.value.password\n    \n    this.api.changeuserpwd(this.data.email, password).subscribe(data => { })\n    this.togglePasswordChange()\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close()\n  }\n}","<div fxLayout=\"row wrap\">\n  <div fxFlex=100>\n    <!-- {{ data | json }} -->\n    <h2><strong>Nutzer Bearbeiten</strong></h2>\n    <mat-card>\n      <form autocomplete=\"on\" [formGroup]=\"myRegform\">\n        <h2><strong>Informationen</strong></h2>\n        <h4><strong>Name</strong>:</h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-label>Anrede</mat-label>\n          <mat-select name=\"anredefeld\" formControlName=\"anrede\">\n            <mat-option *ngFor=\"let salutation of salutations\" [value]=\"salutation\">\n              {{ salutation === ' ' ? 'keine Anrede' : salutation }}\n            </mat-option>\n          </mat-select>\n          <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <mat-label>Vorname</mat-label>\n          <input matInput placeholder=\"First name\" name=\"fname\" formControlName=\"firstname\">\n          <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n          <mat-label>Nachname</mat-label>\n          <input matInput placeholder=\"Last Name\" name=\"lname\" formControlName=\"lastname\">\n          <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\n        </mat-form-field>\n        <h4><strong> E-Mail</strong></h4>\n        <mat-form-field appearance=\"fill\" class=\"full-width\">\n          <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n          <mat-icon matSuffix>email</mat-icon>\n          <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\n        </mat-form-field>\n        <div *ngIf=\"!isPasswordChange\">\n          <button mat-raised-button (click)=\"togglePasswordChange()\">Passwort ändern</button>\n        </div>\n        <div *ngIf=\"isPasswordChange\">\n          <mat-form-field appearance=\"fill\" class=\"full-width\">\n            <input matInput type=\"password\" placeholder=\"Passwort\" formControlName=\"password\">\n          </mat-form-field>\n          <div style=\"font-size: small; font-style: italic; color: gray;\">Passwort muss 8 Zeichen lang sein, min. einen\n            Groß.- und Kleinbuchstaben, eine Zahl und ein\n            Sonderzeichen enthalten.</div>\n          <button mat-raised-button (click)=\"togglePasswordChange()\">Abbrechen</button>\n          <button mat-raised-button (click)=\"changePassword()\">Ändern</button>\n        </div>\n        <h4><strong>Rechte</strong></h4>\n        <mat-chip-list class=\"smallchips\">\n          <mat-chip color=\"primary\" *ngFor=\"let right of userRights\" [value]=\"right.value\"\n            (click)=\"updateUserRole('role', data, 'user', right.value)\">\n            <mat-icon matListIcon *ngIf=\"right.selected\">check</mat-icon>\n            {{ right.name }}\n          </mat-chip>\n        </mat-chip-list>\n        <h4><strong>Daten-Level</strong></h4>\n        <mat-chip-list class=\"smallchips\">\n          <mat-chip color=\"primary\" *ngFor=\"let dataLevel of userGroupOptions\" [value]=\"dataLevel.value\"\n            (click)=\"updateUserDataLevel('dataLevel', data.email, 'usergroups', dataLevel.value)\">\n            <mat-icon matListIcon *ngIf=\"dataLevel.selected\">check</mat-icon>\n            {{ dataLevel.name }}\n          </mat-chip>\n        </mat-chip-list>\n      </form>\n    </mat-card>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <!-- <button mat-raised-button (click)=\"onNoClick()\" color=\"warn\">Abbrechen</button> -->\n    <button mat-raised-button (click)=\"onNoClick()\" color=\"primary\">Schließen</button>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core'; \nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \n\n \n@Component({ \n  selector: 'app-login', \n  templateUrl: './login.component.html', \n  styleUrls: ['./login.component.scss'] \n}) \nexport class LoginComponent implements OnInit { \n  form: UntypedFormGroup \n  constructor( \n    private _api : ApiService, \n    private _auth: AuthService, \n    private router: Router, \n    public fb: UntypedFormBuilder \n    \n    \n  ) { }\n  loggedin:boolean; \n  login_pending:boolean;\n  loginerror:boolean;\n\n\n \n  ngOnInit(): void { \n    this.login_pending = false;\n    this.form = this.fb.group({ \n      username: ['', Validators.required], \n      password:['', Validators.required] \n    }); \n    if(this._auth.getToken()){this.loggedin=true;}\n  } \n \n  login(){\n    this.login_pending = true;\n    this._auth.login(this.form.value).subscribe(data => {\n      setTimeout(()=>{\n        this.loggedin=true; \n        this.router.navigate(['/']);\n      },750);    \n      \n    },error => {\n      this.loginerror = true;\n    });\n    this.login_pending = false;\n  }\n  \n  logout(){\n    this._auth.logout();    \n    this.router.navigate(['/']);\n  }\n \n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div fxFlex=100 style=\"max-width: 500px;\" *ngIf=\"!this.loggedin\">\n        <mat-card>\n            <form  [formGroup]='form' (ngSubmit)='login()'>\n                <h1>Login</h1>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>E-Mail</mat-label>\n                    <input matInput type=\"email\" placeholder=\"Email\" name=\"email\" formControlName='username' autocomplete=\"false\" required>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>Kennwort</mat-label>\n                    <input matInput type=\"password\" name=\"current-password\" formControlName='password' required autocomplete=\"false\">\n                </mat-form-field>\n                <div *ngIf=\"!this.login_pending\" fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n                    <div>\n                        <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"logout()\">\n                            Abbrechen\n                        </button>\n                    </div>\n                    <div>\n                        <button mat-raised-button color=\"primary\" type='submit' [disabled]='!this.form.valid' >\n                            Login\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"this.login_pending\">\n                    ... in Bearbeitung ... \n                </div>\n                <div *ngIf=\"this.loginerror\">\n                    <p style=\"color:crimson;\">Falscher Benutzername/Falsches Kennwort</p>\n                </div>\n            </form>\n        </mat-card>\n    </div>\n\n    <div *ngIf=\"this.loggedin\">\n        You're in!\n        <button mat-raised-button color=\"accent\" (click)=\"logout()\">\n            Ausloggen\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CsvexportService } from 'src/app/services/csvexport.service';\n\n@Component({\n  selector: 'app-private',\n  templateUrl: './private.component.html',\n  styleUrls: ['./private.component.scss']\n})\nexport class PrivateComponent implements OnInit {\n  constructor(private api: ApiService, private auth: AuthService, private csv: CsvexportService) { }\n  tsquery = {};\n  tsqueryresult = {};\n  bevrefdata = {};\n  colorsscheme;\n  restablecols = [];\n  progress = false;\n  settings: any;\n  duration: number;\n  levelvalues = [\n    'Gesamt',\n    'Baden-Württemberg',\n    'Bayern',\n    'Berlin',\n    'Brandenburg',\n    'Bremen',\n    'Hamburg',\n    'Hessen',\n    'Mecklenburg-Vorpommern',\n    'Niedersachsen',\n    'Nordrhein-Westfalen',\n    'Nordrhein',\n    'Westfalen-Lippe',\n    'Rheinland-Pfalz',\n    'Saarland',\n    'Sachsen',\n    'Sachsen-Anhalt',\n    'Schleswig-Holstein',\n    'Thüringen'];\n  outcomes = [\n    //'Anteil Assessments', \n    'Anzahl Assessments',\n    //'Anzahl Assessments je 100 Tsd. Einw.', ## Not possible due to missing reference data\n    'Anzahl Beschwerden pro Assessment',\n    'Anzahl Fragen je Assessment',\n    'Mittlere Dauer je Assessment',\n    'Mittlere Dauer Disposition',\n    //'Anteil Assessment an Disposition',\n    //'Häufigste Beschwerden',\n    //'Häufigste Hauptbeschwerden'\n  ]\n\n  diffmerkmale = [\n    'KV',\n    'Alter',\n    'Geschlecht',\n    'Wochentag',\n    'Empfehlung Dringlichkeit',\n    'Empfehlung Ort',\n    'Entscheidung Dringlichkeit',\n    'Entscheidung Ort',\n    'Hauptbeschwerde',\n    'Beschwerde'\n  ];\n\n  diffvars = {\n    'KV': 'levelid',\n    'Alter': ['ALTER_id', 'ALTER_text'],\n    'Geschlecht': ['Geschlecht'],\n    'Wochentag': [],\n    'Empfehlung Dringlichkeit': ['TTTsmed_id', 'TTTsmed_text'],\n    'Empfehlung Ort': ['POCsmed_id', 'POCsmed_text'],\n    'Entscheidung Dringlichkeit': ['TTTdispo_id', 'TTTdispo_text'],\n    'Entscheidung Ort': ['POCdispo_id', 'POCdispo_text'],\n    'Hauptbeschwerde': ['Hauptbeschwerde'],\n    'Beschwerde': ['Beschwerden_gesamt']\n  }\n\n  SmED_Modul: string = \"Alle\";\n  SmED_Level: string = \"Alle\";\n\n  isSingleDayAnalyses = false\n\n  ngOnInit(): void {\n    this.colorsscheme = this.api.makescale(5);\n    //console.log('colors',this.colorsscheme);\n    this.settings = { 'analyzeall': true, 'level': 'KV', 'levelid': 'Gesamt', 'diffmerkmale': [] };\n    //testesttings\n    this.settings = {\n      \"analyzeall\": true, \"level\": \"KV\", \"levelid\": \"Gesamt\", \"diffmerkmale\": [],\n      \"start\": new Date(\"2022-01-02\"),\n      \"end\": new Date(\"2022-01-08\"), \"outcome\": \"Anzahl Assessments\"\n    };\n\n    this.timeseriesquery();\n  }\n\n  updatequery(key, value) {\n    //console.log(\"Settings changed\");\n    if (key != \"__change\" && key != \"diffmerkmale\") { this.settings[key] = value };\n\n    if (key == \"levelid\" && value == \"Gesamt\") { this.settings['analyzeall'] = true; };\n\n    if (key == 'outcome' && value == 'Anzahl Assessments je 100 Tsd. Einw.') {\n      this.settings['diffmerkmale'] = [];\n    }\n\n    if (key == 'diffmerkmale') {\n      if (this.settings['diffmerkmale'].includes(value)) {\n        this.settings['diffmerkmale'] = this.settings['diffmerkmale'].filter(function (item) { return item !== value });\n      }\n      else {\n        if (!this.settings['diffmerkmale'].includes(value) && this.settings['diffmerkmale'].length < 2) {\n          if (!((this.settings['outcome'] == 'Anzahl Assessments je 100 Tsd. Einw.') && ['Alter', 'Geschlecht'].includes(value)))\n            this.settings['diffmerkmale'].push(value);\n        };\n      };\n    }\n\n    if (key == 'SmED_Modul') {\n      this.SmED_Modul = value;\n    }\n\n    if (key == 'SmED_Level') {\n      this.SmED_Level = value;\n    }\n\n    if (this.checkparams()) {\n      this.timeseriesquery();\n    }\n  }\n\n  checkparams() {\n    let res = true;\n    this.duration = 0;\n\n    if (this.settings['start'] && this.settings['end']) {\n      this.duration = (this.settings['end'] - this.settings['start']) / 1000 / 60 / 60 / 24;\n    };\n\n    if (this.duration == 0 || this.duration > 90) {\n      res = false;\n    };\n\n    if (!this.settings['outcome']) {\n      res = false;\n    }\n\n    return res;\n  }\n\n  timeseriesquery() {\n    this.progress = true;\n    this.tsqueryresult = [];\n\n    let _start = new Date(this.settings['start'])\n    let _end = new Date(this.settings['end'])\n\n    if(this.isSingleDayAnalyses) {\n      _end = _start\n    }\n    \n    function setDate(date) {\n      const minutesOffset = new Date(date.setMinutes(date.getMinutes() - date.getTimezoneOffset()))\n      \n      return minutesOffset.toISOString().substring(0, 10);\n    }\n    \n    let start = \"\";\n    \n    if (this.settings['start']) { start = setDate(_start) };\n    \n    let end = \"\";\n\n    if (this.settings['end']) { end = setDate(_end) };\n\n    this.tsqueryresult = {};\n    this.bevrefdata = {};\n    this.tsquery = {\n      \"startdate\": start.slice(0, 10),\n      \"stopdate\": end.slice(0, 10),\n      \"timeframe\": \"none\",\n      \"outcome\": NaN,\n      \"filterlist\":\n        { 'level': 'KV' }\n      ,\n      \"subgroups\": [],\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID\n    };\n\n    if (this.settings['levelid'] != \"Gesamt\") { this.tsquery['filterlist']['levelid'] = this.settings['levelid'] };\n\n    for (let item of this.settings['diffmerkmale']) {\n      this.tsquery['subgroups'] = this.tsquery['subgroups'].concat(this.diffvars[item]);\n    };\n\n    if (this.settings['diffmerkmale'].includes('Wochentag')) {\n      this.tsquery['timeframe'] = 'weekday';\n    };\n\n    if ('Anzahl Beschwerden pro Assessment' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"Anzahl_Beschwerden\";\n    };\n\n    if ('Anzahl Fragen je Assessment' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"Anzahl_Fragen\";\n    };\n\n    if ('Mittlere Dauer je Assessment' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"DAUERsmed\";\n    };\n\n    if ('Mittlere Dauer Disposition' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"DAUERdispo\";\n      this.tsquery[\"filterlist\"]['DAUERdispo'] = { $gte: 0 }\n    };\n\n    if ('Anteil Assessment an Disposition' == this.settings['outcome']) {\n      // later 2 Queries need to be done, one for DAUERsmed and one DAUERdispo\n      // console.log(\"Not implemented yet!\");\n    };\n\n    if ('Häufigste Beschwerden' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"Beschwerden_gesamt\";\n    };\n    \n    if ('Häufigste Hauptbeschwerden' == this.settings['outcome']) {\n      this.tsquery['outcome'] = \"Hauptbeschwerde\";\n    };\n\n    this.restablecols = this.settings['diffmerkmale'].concat([this.tsquery['outcome'], 'Anzahl', 'Anteil']);\n\n    if (!this.tsquery['outcome']) {\n      this.restablecols = this.settings['diffmerkmale'].concat(['Anzahl', 'Anteil']);\n    }\n\n    // Level/Modul\n    if (this.SmED_Level != \"Alle\") {\n      if (this.SmED_Level != \"Patient\") {\n        this.tsquery[\"filterlist\"]['SMED_Level'] = this.SmED_Level;\n      }\n      else {\n        this.tsquery[\"filterlist\"]['SMED_Level'] = 'pubusersmed';\n      }\n    }\n\n    if (this.SmED_Modul != \"Alle\") {\n      this.tsquery[\"filterlist\"]['SMED_Modul'] = this.SmED_Modul;\n    }\n\n    this.api.postTypeRequest('get_data/', {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {\n        \"level\": \"KV\", \"levelid\": this.settings['levelid'],\n        \"Jahr\": parseInt(this.tsquery['stopdate'].slice(0, 4)),\n        \"Monat\": parseInt(this.tsquery['stopdate'].slice(5, 7))\n      },\n      \"showfields\": ['level', 'levelid', 'Jahr', 'Monat', 'KM6Versicherte', 'BEVSTAND']\n    }).subscribe(data => {\n      this.bevrefdata = data['data'][0];\n      this.api.postTypeRequest('analytics/timeseries/', this.tsquery).subscribe(data => { this.tsqueryresult = this.preparedata(data); });\n    });\n  }\n\n  preparedata(input) {\n    let output = [];\n\n    if (input.length > 0) {\n      let allitems = this.api.sumArray(this.api.getValues(input, 'count'));\n\n      for (let item of input) {\n        //item['Bev']=this.bevrefdata['BEVSTAND'];        \n        if (parseFloat(item['count']) > 0) {\n          item['Anzahl'] = item['count'];\n          item['Anteil'] = Math.round(1000 * item['count'] / allitems) / 1000;\n        }\n\n        //item['Je100Tsd']=Math.round(1e6*item['count']/item['Bev'])/10;\n        item['Alter'] = item['ALTER_text'];\n        item['Wochentag'] = this.api.getweekdayname(item['timeframe'], true);\n        item['KV'] = item['levelid'];\n\n        if (item['POCsmed_text']) {\n          item['Empfehlung Ort'] = item['POCsmed_text'];\n        };\n\n        if (item['TTTsmed_text']) {\n          item['Empfehlung Dringlichkeit'] = item['TTTsmed_text'];\n        };\n\n        if (item['POCdispo_text']) {\n          item['Entscheidung Ort'] = item['POCdispo_text'];\n        };\n\n        if (item['TTTdispo_text']) {\n          item['Entscheidung Dringlichkeit'] = item['TTTdispo_text'];\n        };\n\n        if (item['Beschwerden_gesamt']) {\n          item['Beschwerde'] = item['Beschwerden_gesamt'];\n          delete item['Beschwerden_gesamt'];\n        };\n\n        if (item['Anzahl']) {\n          output.push(item);\n        };\n      }\n\n      if (this.settings['diffmerkmale'].includes('Alter')) {\n        output = this.api.sortArray(output, 'ALTER_id');\n      }\n    }\n\n    this.progress = false;\n\n    return output;\n  }\n\n  exportascsv(name, data) {\n    this.csv.exportToCsv(name, data);\n    this.csv.exportToCsv(name + \"_settings.csv\", [this.settings]);\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"30px\">\n  <div>\n    <h1 ngClass.lt-sm=\"mobileheading\">Tool für erweiterte Analysen</h1>\n    <p class=\"lightgreycolor\">In diesem Bereich nur für KV-Mitarbeiter ist ein Zugriff auf faktisch anonymisierte\n      Individualdatensätze möglich.\n      <span style=\"color:white;\">Bitte beachten Sie, dass die unstandardisierten Abfragen in diesem Bereich ggf. etwas\n        länger dauern.</span>.\n    </p>\n  </div>\n  <div *ngIf=\"true\">\n    <div>\n      <div>\n        <mat-form-field appearance=\"fill\" *ngIf=\"!this.isSingleDayAnalyses\">\n          <mat-label>Analysezeitraum</mat-label>\n          <mat-date-range-input [rangePicker]=\"picker\">\n            <input matStartDate placeholder=\"Beginn\" (dateChange)=\"this.updatequery('__change',true)\"\n              [(ngModel)]=\"this.settings['start']\">\n            <input matEndDate placeholder=\"Ende\" (dateChange)=\"this.updatequery('__change',true)\"\n              [(ngModel)]=\"this.settings['end']\">\n          </mat-date-range-input>\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-date-range-picker #picker></mat-date-range-picker>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" *ngIf=\"this.isSingleDayAnalyses\">\n          <mat-label>Analysezeitraum</mat-label>\n          <input matInput [matDatepicker]=\"picker\" (dateChange)=\"this.updatequery('__change',true)\"\n            [(ngModel)]=\"this.settings['start']\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-slide-toggle [(ngModel)]=\"isSingleDayAnalyses\" style=\"padding-bottom: 15px;\">\n          ein Tag Analyse\n        </mat-slide-toggle>\n      </div>\n      <p *ngIf=\"this.duration>64\" class=\"accentcolor\">\n        Die maximale Länge des Analysezeitraums beträgt 64 Tage. Ihre Anfrage kann nicht ausgeführt werden.\n      </p>\n      <p *ngIf=\"(this.duration>7 && this.duration<=64) && (this.settings['levelid']=='Gesamt')\"\n        class=\"mat-caption greycolor\">\n        Bitte beachten Sie, aufgrund der großen Zahl betroffener Datensätze kann es zu einer verzögerten Auswertung\n        kommen.\n      </p>\n    </div>\n    <div>\n      <h3>Region</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.updatequery('levelid',item);\" *ngFor=\"let item of this.levelvalues\"\n            [selected]=\"(this.settings['levelid']==item)\" color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div>\n      <h3>Level</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.updatequery('SmED_Level',item);\"\n            *ngFor=\"let item of ['Alle','Telefon','Tresen','Patient']\" [selected]=\"(this.SmED_Level==item)\"\n            color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n      <p class=\"mat-caption lightgreycolor\" *ngIf=\"this.SmED_Level=='Patient'\">Hinweis Assessments mit SmED-Patient sind\n        ab dem 6.12.21 enthalten. Sie können aktuell noch nicht KVen zugeordnet werden. Bitte wählen Sie \"Gesamt\" als\n        Region aus.</p>\n      <h3>Modul</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.updatequery('SmED_Modul',item);\"\n            *ngFor=\"let item of ['Alle','SmED-Triage','SmED-COVID-kurz','SmED-COVID-integriert','SmED-Kontakt+']\"\n            [selected]=\"(this.SmED_Modul==item)\" color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div>\n      <h3>Outcome</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.updatequery('outcome',item);\" *ngFor=\"let item of this.outcomes\"\n            [selected]=\"(this.settings['outcome']==item)\" color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div *ngIf=\"this.settings['outcome']\">\n      <h3>Differenzierungsmerkmale <span class=\"lightgreycolor\">(max. 2 Merkmale möglich)</span></h3>\n      <p>\n        <mat-chip-list multiple>\n          <mat-chip (click)=\"this.updatequery('diffmerkmale',item);\" *ngFor=\"let item of this.diffmerkmale\"\n            [selected]=\"(this.settings['diffmerkmale'].includes(item))\" color=\"primary\">\n            {{item}}\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div *ngIf=\"this.progress\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <div *ngIf=\"this.tsqueryresult.length==0\">\n      <p>Keine Ergebnisse zur Anzeige</p>\n    </div>\n    <div *ngIf=\"this.settings['diffmerkmale'].length==0 && this.tsqueryresult.length>0\">\n\n\n      <div>\n        <app-box [value]=\"this.tsqueryresult[0]['count']\" [numberformat]=\"'1.0-0'\"\n          [maincolor]=\"this.colorsscheme[4].concat('80')\"\n          [description]=\"'Assessments in '.concat(this.settings['levelid'])\"></app-box>\n      </div>\n      <div *ngIf=\"this.tsqueryresult[0]['DAUERsmed']\">\n        <app-box [value]=\"this.tsqueryresult[0]['DAUERsmed']\" [numberformat]=\"'1.0-0'\"\n          [maincolor]=\"this.colorsscheme[2].concat('80')\" [description]=\"'Mittlere Dauer SmED'\"></app-box>\n      </div>\n      <div *ngIf=\"this.tsqueryresult[0]['DAUERdispo']\">\n        <app-box [value]=\"this.tsqueryresult[0]['DAUERdispo']\" [numberformat]=\"'1.0-0'\"\n          [maincolor]=\"this.colorsscheme[2].concat('80')\" [description]=\"'Mittlere Dauer Disposition'\"></app-box>\n      </div>\n      <div *ngIf=\"this.tsqueryresult[0]['Anzahl_Fragen']\">\n        <app-box [value]=\"this.tsqueryresult[0]['Anzahl_Fragen']\" [numberformat]=\"'1.0-0'\"\n          [maincolor]=\"this.colorsscheme[1].concat('80')\" [description]=\"'Mittlere Anzahl Fragen SmED'\"></app-box>\n      </div>\n\n\n\n\n    </div>\n    <div *ngIf=\"this.settings['diffmerkmale'].length==1 && this.tsqueryresult.length>0\" fxLayout=\"row wrap\">\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n        <mat-card>\n          <h3>Anzahl Assessments</h3>\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n            [outcomes]=\"['count']\" plottype=\"bar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n        <mat-card>\n          <h3>Anteil Assessments</h3>\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"['#d0f321']\" [outcomes]=\"['Anteil']\" [percent]=\"true\" plottype=\"bar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"(this.tsqueryresult.length>0) && \n                    (this.tsquery['outcome']) || (this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                    || (this.settings['diffmerkmale'].includes('Beschwerde'))\n                    \">\n        <mat-card>\n          <h3>{{this.settings['outcome']}}</h3>\n          <ng-container *ngIf=\"!(this.settings['diffmerkmale'].includes('Hauptbeschwerde')) &&\n                        !(this.settings['diffmerkmale'].includes('Beschwerde'))\">\n            <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n              [colorscheme]=\"['orange']\" [outcomes]=\"[this.tsquery['outcome']]\" plottype=\"bar\"></app-plot>\n          </ng-container>\n          <ng-container *ngIf=\"(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                        || (this.settings['diffmerkmale'].includes('Beschwerde'))\">\n            <app-table [(data)]=\"this.tsqueryresult\" [outcomes_rate]=\"['Anteil']\"\n              [columns]=\"this.restablecols\"></app-table>\n          </ng-container>\n\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n\n\n\n\n    </div>\n    <div *ngIf=\"this.settings['diffmerkmale'].length==2 && this.tsqueryresult.length>0\" fxLayout=\"row wrap\">\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n        <mat-card>\n          <h3>Anzahl Assessments</h3>\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n            [outcomes]=\"['count']\" [colorby]=\"this.settings['diffmerkmale'][1]\" plottype=\"bar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.tsqueryresult\">\n        <mat-card>\n          <h3>Anteil Assessments</h3>\n          <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"['#d0f321']\" [colorby]=\"this.settings['diffmerkmale'][1]\" [outcomes]=\"['Anteil']\"\n            [percent]=\"true\" plottype=\"bar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"(this.tsqueryresult.length>0) && (this.tsquery['outcome']\n                    || ((this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                    || (this.settings['diffmerkmale'].includes('Beschwerde')))\n                    )\">\n        <mat-card>\n          <h3>{{this.settings['outcome']}}</h3>\n          <ng-container *ngIf=\"!(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                        && !(this.settings['diffmerkmale'].includes('Beschwerde'))\">\n            <app-plot [(data)]=\"this.tsqueryresult\" [xvalue]=\"this.settings['diffmerkmale'][0]\"\n              [colorby]=\"this.settings['diffmerkmale'][1]\" [fontcolor]=\"'white'\" [colorscheme]=\"['orange']\"\n              [outcomes]=\"[this.tsquery['outcome']]\" plottype=\"bar\"></app-plot>\n          </ng-container>\n          <ng-container *ngIf=\"(this.settings['diffmerkmale'].includes('Hauptbeschwerde'))\n                            || (this.settings['diffmerkmale'].includes('Beschwerde'))\">\n            <app-table [(data)]=\"this.tsqueryresult\" [outcomes_rate]=\"['Anteil']\"\n              [columns]=\"this.restablecols\"></app-table>\n          </ng-container>\n\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p>\n                    <a (click)=\"this.exportascsv('daten.csv',this.tsqueryresult)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Es liegt aktuell keine Indikatorenbeschreibung vor</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n\n\n\n\n    </div>\n  </div>\n\n\n</div>","<div class=\"profile-wrapper\">\n    <mat-card class=\"profile-container\">\n        <mat-card-header class=\"profile-header\">\n            <mat-card-title>Nutzer Profil</mat-card-title>\n            <mat-card-subtitle>Hier können Sie ihr Nutzer Profil bearbeiten</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content class=\"profile-content\">\n            <label for=\"username\">Name: <input id=\"username\" name=\"username\"\n                    [value]=\"user.anrede + ' ' + user.firstname + ' ' + user.lastname\" disabled /></label>\n            <label for=\"email\">E-Mail: <input id=\"email\" name=\"email\" [value]=\"user.email\" disabled /></label>\n            <label for=\"roles\">Rolle(n): <input id=\"roles\" name=\"roles\" [value]=\"user.roles\" disabled /></label>\n        </mat-card-content>\n        <mat-card-actions class=\"actions\">\n            <button mat-raised-button color=\"primary\" (click)=\"openChangePassword()\">Password ändern</button>\n        </mat-card-actions>\n    </mat-card>\n    <mat-card class=\"change-password-container\" *ngIf=\"isChangePassword\">\n        <mat-card-header>\n            <mat-card-title>Passwort ändern</mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"change-password-content\">\n            <label for=\"oldPassword\">Altes Passwort:\n                <div class=\"input-wrapper\">\n                    <input type=\"password\" id=\"password\" name=\"oldPassword\" required\n                        [(ngModel)]=\"passwordChangeRequest.oldpwd\" />\n                    <button mat-icon-button class=\"icon-button\" (click)=\"showPassword('password', '1icon')\">\n                        <mat-icon>\n                            <span id=\"1icon\" class=\"material-symbols-rounded\">\n                                visibility\n                            </span>\n                        </mat-icon>\n                    </button>\n                </div>\n            </label>\n            <label for=\"password\">Neues Passwort:\n                <div class=\"input-wrapper\">\n                    <input type=\"password\" id=\"new-password\" name=\"password\" required (change)=\"validatePassword()\"\n                        [disabled]=\"!passwordChangeRequest.oldpwd\" [(ngModel)]=\"passwordChangeRequest.newpwd\" />\n                    <button mat-icon-button class=\"icon-button\" (click)=\"showPassword('new-password', '2icon')\">\n                        <mat-icon>\n                            <span id=\"2icon\" class=\"material-symbols-rounded\">\n                                visibility\n                            </span>\n                        </mat-icon>\n                    </button>\n                </div>\n                <mat-hint *ngIf=\"!isPasswordValid\">{{ passwordValidateError }}</mat-hint>\n            </label>\n            <label for=\"repeate-password\">Passwort wiederholen:\n                <div class=\"input-wrapper\">\n                    <input type=\"password\" id=\"repeat-password\" name=\"repeat-password\" required\n                        [disabled]=\"!passwordChangeRequest.newpwd || !isPasswordValid\"\n                        [(ngModel)]=\"passwordChangeRequest.newpwd_confirm\" (change)=\"checkPasswordMatch()\" />\n                    <button mat-icon-button class=\"icon-button\" (click)=\"showPassword('repeat-password', '3icon')\">\n                        <mat-icon>\n                            <span id=\"3icon\" class=\"material-symbols-rounded\">\n                                visibility\n                            </span>\n                        </mat-icon>\n                    </button>\n                </div>\n            </label>\n            <mat-hint *ngIf=\"isPasswordMatchError\" class=\"password-match-error\">{{ passwordMatchError }}</mat-hint>\n        </mat-card-content>\n        <mat-card-actions class=\"actions\">\n            <button mat-raised-button color=\"warn\" (click)=\"closeChangePassword()\">Abbrechen</button>\n            <button mat-raised-button color=\"primary\"\n                [disabled]=\"isPasswordMatchError || !(passwordChangeRequest.newpwd_confirm && passwordChangeRequest.oldpwd)\"\n                (click)=\"changePassword()\">Änderung bestätigen</button>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(\n    private auth: AuthService,\n    private api: ApiService,\n    private router: Router\n  ) { }\n\n  user: any = {}\n  isChangePassword: boolean = false\n  passwordChangeRequest: any = { 'oldpwd': '', 'newpwd': '', 'newpwd_confirm': '' }\n  deleteAccountRequest: any = { 'pwd': '' }\n  error: any = {}\n  isPasswordMatchError: boolean = false\n  passwordMatchError: string = 'Die Passwörter stimmen nicht überein.'\n  isPasswordValid: boolean = false\n  passwordValidateError: string = 'Das Passwort muss mindestens 8 Zeichen lang sein, eine Zahl, einen Großbuchstaben enthalten'\n\n  ngOnInit(): void {\n    this.user = this.getUser()\n  }\n\n  async getUser() {\n    this.user = await this.auth.getUserDetails()\n  }\n\n  openChangePassword() {\n    this.isChangePassword = true\n  }\n\n  closeChangePassword() {\n    this.passwordChangeRequest = { 'oldpwd': '', 'newpwd': '', 'newpwd_confirm': '' }\n    this.isChangePassword = false\n  }\n\n  changePassword() {\n    if (!this.isPasswordMatchError) {\n      this.api.changeuserpwd(this.user.email, this.passwordChangeRequest.newpwd, this.passwordChangeRequest.oldpwd).subscribe(data => {\n        this.isChangePassword = false\n        this.auth.logout()\n        window.location.reload();\n        this.router.navigate(['/'])\n        alert('Passwort wurde geändert. Bitte loggen Sie sich mit ihrem neuen Passwort ein.')\n      }, error => {\n        this.isChangePassword = false\n        this.error = error.error.error\n        alert(this.error)\n      })\n    }\n  }\n\n  checkPasswordMatch() {\n    this.isPasswordMatchError = this.passwordChangeRequest.newpwd !== this.passwordChangeRequest.newpwd_confirm\n  }\n\n  validatePassword() {\n    // Password must be atleast 8 characters long\n    if (this.passwordChangeRequest.newpwd.length < 8) {\n      this.isPasswordValid = false\n      return\n    }\n\n    // Password must contain at least one uppercase letter\n    if (!/[A-Z]/.test(this.passwordChangeRequest.newpwd)) {\n      this.isPasswordValid = false\n      return\n    }\n\n    // Password must contain at least one number\n    if (!/\\d/.test(this.passwordChangeRequest.newpwd)) {\n      this.isPasswordValid = false\n      return\n    }\n\n    // Password must not contain whitespace\n    if (/\\s/.test(this.passwordChangeRequest.newpwd)) {\n      this.isPasswordValid = false\n      return\n    }\n\n    this.isPasswordValid = true;\n    return\n  }\n\n  showPassword(id: string, iconId: string) {\n    const passwordField = document.getElementById(id) as HTMLInputElement;\n    const icon = document.getElementById(iconId) as HTMLInputElement;\n\n    if (passwordField.type === \"password\") {\n      icon.innerText = 'visibility_off'\n      passwordField.type = \"text\";\n    } else {\n      icon.innerText = 'visibility'\n      passwordField.type = \"password\";\n    }\n  }\n\n  deleteAccount() {\n    // this.api.deleteUser(this.user.email, this.deleteAccountRequest.pwd).subscribe(data => {\n    //   this.auth.logout()\n    //   this.router.navigate(['/'])\n    // }, error => {\n    //   this.error = error.error.error\n    //   alert(this.error)\n    // })\n  }\n\n}\n\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAllign=\"space-around\">\n  <div>\n    <p *ngIf=\"this.currentuser\" class=\"mat-caption lightgreycolor right\">\n      Angemeldet als <span> {{this.currentuser.anrede?this.currentuser.anrede+\"\n        \"+this.currentuser.lastname:\"\" }}</span></p>\n    <div *ngIf=\"!isExtern\" class=\"brandingpicture\"\n      [ngClass]=\"{'smallheader': this.currentuser || this.summaryinfo['done']}\">\n      <h1>Akut- und Notfälle bei der 116117</h1>\n    </div>\n    <div *ngIf=\"isExtern\" class=\"brandingpicture\"\n      [ngClass]=\"{'smallheader': this.currentuser || this.summaryinfo['done']}\">\n      <h1>Ersteinschätzung von Akut- und Notfällen mit SmED</h1>\n    </div>\n    <ng-container *ngIf=\"this.metadata && !this.currentuser\">\n      <!-- Text anpassen -->\n      <ng-container *ngIf=\"(this.timetogo<0)\">\n        <p>Auf diesem Portal stellt das Zentralinstitut für die kassenärztliche Versorgung in Deutschland (<strong><a\n              style=\"color:white;\" href=\"https://www.zi.de\">Zi</a></strong>) Informationen\n          zu\n          ambulanten Akut- und Notfällen in Deutschland zur Verfügung. Aktuell basieren die Auswertungen auf den\n          SmED-Daten,\n          die von den 116117-Leitstellen der Kassenärztlichen Vereinigungen übermittelt wurden. Bei\n          <strong>SmED</strong> (Strukturierte\n          medizinische Ersteinschätzung in Deutschland) handelt es sich um eine Ersteinschätzungssoftware, die den\n          Anwender\n          bei der Einschätzung der Beschwerden eines Patienten unterstützen kann. Durch <strong>SmED</strong> wird das\n          medizinische\n          Fachpersonal bei der systematischen Abfrage von Symptomen in Kombination mit allgemeinen und\n          symptomspezifischen\n          Risikofaktoren (z.B. Alter, Geschlecht, Begleitbeschwerden) sowie bei der Entscheidung, welches die passende\n          Versorgungsmöglichkeit für den Anrufenden ist, unterstützt. Die SmED-Empfehlungen der Software stellen dabei\n          eine\n          Entscheidungshilfe für den Anwender dar. Weitere Informationen zu <strong>SmED</strong> finden Sie\n          <strong><a href=\"https://www.zi.de/smed\">hier</a></strong>.\n        </p>\n        <p>Zukünftig soll das Portal um Informationen aus weiteren Quellen (wie beispielsweise die Abrechnungsdaten) für\n          ambulante Akut- und Notfälle ergänzt werden.</p>\n        <h1 class=\"lightgreycolor\" *ngIf=\"this.timetogo<=0\">Zeit bis zum Start<br>{{counterstring(this.timetogo)}}</h1>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"(this.timetogo>=0) || this.currentuser\">\n      <ng-container *ngIf=\"((this.timetogo>=0) || this.currentuser) && !this.isExtern\">\n        <p class=\"lightgreycolor\"> Dashboard des Zentralinstituts für die kassenärztliche Versorgung in Deutschland\n          (<strong><a style=\"color:white;\" href=\"https://www.zi.de\">Zi</a></strong>) mit aktuellen Ergebnissen aus der\n          Strukturierten medizinischen Ersteinschätzung in Deutschland\n          (<strong><a style=\"color:white;\" href=\"https://www.zi.de/smed\">SmED</a></strong>) im Rahmen von Anrufen bei\n          der\n          Rufnummer (<strong><a style=\"color:white;\" href=\"https://www.116117.de\">116117</a></strong>). Bei jeder\n          Ersteinschätzung werden die Inhalte und Empfehlungen strukturiert protokolliert (Assessments). <span\n            *ngIf=\"this.summaryinfo && this.levelsettings['resolution']=='weekly'\">Daten für vollständige\n            Kalenderwochen beginnend mit der Woche vom {{this.summaryinfo[\"Beginn\"] | date}} bis zur Woche beginnend am\n            {{this.summaryinfo[\"Ende\"] | date}}.</span></p>\n        <p class=\"lightgreycolor\" *ngIf=\"this.currentuser\">Als registrierter Nutzer steht Ihnen unser <a\n            routerLink=\"/private\">interner Analysebereich</a> zur Verfügung.</p>\n      </ng-container>\n      <ng-container *ngIf=\"((this.timetogo>=0) || this.currentuser) && this.isExtern\">\n        <p class=\"lightgreycolor\"> Dashboard mit aktuellen Ergebnissen aus der Strukturierten medizinischen\n          Ersteinschätzung in Deutschland (SmED) im Rahmen der Anwendung am eigenen Standort. </p>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div *ngIf=\"(this.timetogo>=0) || this.currentuser\">\n    <div *ngIf=\"this.currentuser\">\n      <div *ngIf=\"this.isExtern; then rkiUser else kvUser\"></div>\n      <ng-template #kvUser>\n        <h3>Bundesland</h3>\n        <p>\n          <mat-chip-list>\n            <mat-chip (click)=\"this.setlevel('levelvalues',item);\" *ngFor=\"let item of this.levelvalues\"\n              [selected]=\"(this.levelsettings['levelvalues']==item)\" color=\"primary\">\n              {{item.replace('KV ','')}}\n            </mat-chip>\n          </mat-chip-list>\n        </p>\n      </ng-template>\n      <ng-template #rkiUser>\n        <h3>Einsatzort</h3>\n        <p>\n          <mat-chip-list>\n            <mat-chip (click)=\"this.setlevel('levelvalues',item); chipSelectedIndex = index;\"\n              *ngFor=\"let item of this.externLevelValues; let index = index\" [selected]=\"index === chipSelectedIndex\"\n              color=\"primary\">\n              {{item}}\n            </mat-chip>\n          </mat-chip-list>\n        </p>\n      </ng-template>\n    </div>\n    <h3>Analysezeitraum</h3>\n    <p>\n      <mat-chip-list>\n        <mat-chip (click)=\"this.setlevel('zeitraum',item);\" *ngFor=\"let item of this.zeitaumoptions\"\n          [selected]=\"(this.levelsettings['zeitraum']==item)\" color=\"primary\">\n          {{item}}\n        </mat-chip>\n      </mat-chip-list>\n    </p>\n    <div>\n      <h3>Zeitliche Auflösung</h3>\n      <p>\n        <mat-chip-list>\n          <mat-chip (click)=\"this.setlevel('resolution','weekly');\"\n            [selected]=\"(this.levelsettings['resolution']=='weekly')\" color=\"primary\">\n            Kalenderwochen\n          </mat-chip>\n          <mat-chip (click)=\"this.setlevel('resolution','monthly');\"\n            [selected]=\"(this.levelsettings['resolution']=='monthly')\" color=\"primary\">\n            Monate\n          </mat-chip>\n        </mat-chip-list>\n      </p>\n    </div>\n    <div *ngIf=\"this.progress\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <div *ngIf=\"!this.summaryinfo && !this.progress\">\n      <p>\n        Keine Daten verfügbar\n      </p>\n    </div>\n    <div *ngIf=\"this.summaryinfo['done']\" fxLayout=\"row wrap\">\n      <mat-card *ngIf=\"this.summaryinfo['Assessments Gesamt']\" class=\"key-wrapper\">\n        <div class=\"card-wrapper\">\n          <app-box class=\"app-box\" [value]=\"this.summaryinfo['Assessments Gesamt']\" [textbehind]=\"true\" title=\"\"\n            [numberformat]=\"'1.0-0'\" [maincolor]=\"this.colorsscheme[4].concat('80')\"\n            [description]=\"'Gesamtanzahl der Assessments'\"></app-box>\n          <app-box class=\"app-box\" [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\" [maincolor]=\"this.colorsscheme[3].concat('80')\"\n            [value]=\"this.summaryinfo['Mittlere Dauer']\" description=\"Mittlere Dauer pro Assessment (in Sekunden)\"></app-box>\n          <app-box class=\"app-box\" [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\n            [maincolor]=\"this.colorsscheme[2].concat('80')\" [value]=\"this.summaryinfo['Anzahl Beschwerden']\"\n            description=\"Mittlere Anzahl Beschwerden pro Asssessment\">\n          </app-box>\n          <app-box class=\"app-box\" [textbehind]=\"true\" title=\"\" [numberformat]=\"'1.1-1'\"\n            [maincolor]=\"this.colorsscheme[1].concat('80')\" [value]=\"this.summaryinfo['Anzahl Fragen']\"\n            description=\"Mittlere Anzahl beantworteter Fragen pro Asssessment\">\n          </app-box>\n        </div>\n      </mat-card>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n        <mat-card>\n          <div class=\"sliderHeader\">\n            <h3>SmED Assessments </h3>\n            <mat-slide-toggle *ngIf=\"!this.isExtern\" input [(ngModel)]=\"absoluteNumbers\">Absolute\n              Zahlen</mat-slide-toggle>\n          </div>\n          <br><span *ngIf=\"!absoluteNumbers\" class=\"lightgreycolor\">pro 100.000 Einwohner</span>\n          <span class=\"lightgreycolor\" *ngIf=\"absoluteNumbers\">Absolute Zahlen</span>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\"\n            [outcomes]=\"!absoluteNumbers ? ['Assessments pro 100 Tsd. Einw.'] : ['totaleNumbers']\" [sortx]=\"true\"\n            [fontcolor]=\"'white'\" plottype=\"area\" [resolution]=\"this.levelsettings['resolution']\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <div class=\"mat-caption\">\n                <p *ngIf=\"this.currentuser\">\n                  <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                    <mat-icon inline=true>file_download</mat-icon>\n                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                  </a>\n                </p>\n                <h3> Weitere Informationen zum Indikator</h3>\n                <p></p>\n                <p *ngIf=\"!absoluteNumbers && !isExtern\">Anzahl der SmED-Assessments pro 100.000 Einwohner, die im\n                  Rahmen von Anrufen\n                  bei der 116117 {{ this.levelsettings['resolution'] === 'weekly' ? 'wöchentlich' : 'monatlich' }}\n                  durchgeführt wurden.</p>\n                <p *ngIf=\"absoluteNumbers && !isExtern\">\n                  Anzahl der SmED-Assessments (in Tausend), die im Rahmen von Anrufen\n                  bei der 116117 {{ this.levelsettings['resolution'] === 'weekly' ? 'wöchentlich' : 'monatlich' }}\n                  durchgeführt wurden.\n                </p>\n                <p *ngIf=\"this.isExtern\">\n                  Anzahl der SmED-Assessments pro {{ this.levelsettings['resolution'] === 'weekly' ? 'Kalenderwoche' :\n                  'Monat' }}.\n                </p>\n              </div>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts && (!this.isExtern)\">\n        <mat-card>\n          <h3>Aktivität respiratorischer Erkrankungen<br><span class=\"lightgreycolor\">Abweichung von der\n              Hintergrundaktivität in Prozent</span></h3>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\"\n            [outcomes]=\"['Anteil ARE Assessments']\" [sortx]=\"true\" [fontcolor]=\"'white'\" [colorscheme]=\"['crimson']\"\n            plottype=\"area\" [resolution]=\"this.levelsettings['resolution']\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <div class=\"mat-caption\">\n                <p *ngIf=\"this.currentuser\">\n                  <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                    <mat-icon inline=true>file_download</mat-icon>\n                    Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                  </a>\n                </p>\n                <h3> Weitere Informationen zum Indikator</h3>\n                <p>Anzahl der Assessments mit typischen Symptomen von Akuten Respiratorischen Erkrankungen (ARE)\n                  ausgewiesen als prozentuale Abweichung von ARE Hintergrundaktivität (erwartet werden 25%\n                  ARE-Assessments).\n                  Berücksichtigt wurden folgende SmED-Beschwerdebilder: Atembeschwerden, Covid 19, Erkältung/Grippaler\n                  Infekt, Fieber, Hals-/Rachenschmerzen, Husten, Kopfschmerzen, Ohrenschmerzen und Schluckbeschwerden\n                  (Liste ist aktuell noch in Entwicklung, Änderungen sind möglich).</p>\n              </div>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div [fxFlex]=\"isExtern ? 50 : 100\" fxFlex.lt-md=100 *ngIf=\"this.symptoms_list\">\n        <mat-card *ngIf=\"this.symptoms_list.length>0\">\n          <h3>Häufigste Beschwerden</h3>\n          <br>\n          <span class=\"lightgreycolor\">Anteil Assessments mit angezeigter Beschwerde an allen Assessments in\n            Prozent</span>\n          <app-plot [(data)]=\"this.symptoms_list\" [xvalue]=\"'Sympt'\" [percent]=\"true\" [fontcolor]=\"'white'\"\n            (clicked)=\"handleklick('Beschwerden',$event);\" [outcomes]=\"['Anteil']\" [sort]=\"true\"\n            plottype=\"hbar\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('symptome.csv',this.symptoms_list_export)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Darstellung der prozentuellen Häufigkeit der im Rahmen der SmED-Assessments dokumentierten\n                    Beschwerden. Die Beschwerden sind sortiert nach der Häufigkeit und werden anteilig an allen\n                    SmED-Assessments, in denen eine Angabe zur Beschwerde vorliegt, angezeigt. Insgesamt sind über 100\n                    verschiedene Beschwerden über SmED verzeichnet worden. Bisher nicht enthalten sind Beschwerden, die\n                    im Rahmen der Abfrage von lebensbedrohlichen Situationen (Vortriage) erfasst wurden.</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.utiltimes['z']\">\n        <ng-container *ngIf=\"this.utiltimes['z'].length>0\">\n          <mat-card>\n            <h3>Aufkommen nach Tag und Uhrzeit<br><span class=\"lightgreycolor\">Anteil Assessments zum angegebenen\n                Zeitintervall an allen Assessments in Prozent</span>\n              <span class=\"lightgreycolor mat-caption\">(grün:hoch, blau:niedrig)</span>\n            </h3>\n            <app-plot [(data)]=\"this.utiltimes\" [fontcolor]=\"'white'\" plottype=\"heatmap\">\n            </app-plot>\n            <div>\n              <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n                (closed)=\"panelOpenState = false\">\n                <mat-expansion-panel-header>\n                  <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n                </mat-expansion-panel-header>\n                <mat-panel-description>\n                  <div class=\"mat-caption\">\n                    <p *ngIf=\"this.currentuser\">\n                      <a (click)=\"this.exportascsv('zeiten.csv',this.utiltimes)\">\n                        <mat-icon inline=true>file_download</mat-icon>\n                        Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                      </a>\n                    </p>\n                    <h3> Weitere Informationen zum Indikator</h3>\n                    <p>Prozentuale Verteilung der SmED-Assessments nach Wochentag und Uhrzeit\n                      (Drei-Stunden-Intervalle).​\n                      Grüne Flächen zeigen ein hohes Aufkommen, blaue ein niedriges Aufkommen an durchgeführten\n                      Assessments.\n                    </p>\n                  </div>\n                </mat-panel-description>\n              </mat-expansion-panel>\n            </div>\n          </mat-card>\n        </ng-container>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.timetotreat\">\n        <mat-card *ngIf=\"this.timetotreat.length>0\">\n          <h3>SmED Empfehlungen zur Dringlichkeit<br><span class=\"lightgreycolor\">Anteil Assessments mit angegebener\n              Dringlichkeit an allen Assessments in Prozent</span>\n          </h3>\n          <app-plot [(data)]=\"this.timetotreat\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"false\"\n            [outcomes]=\"['Anteil']\" [custommargins]=\"{ l: 50, r: 0, b: 0, t: 0 }\" plottype=\"hbar\">\n          </app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('empfehlung.csv',this.timetotreat)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Prozentuale Verteilung der SmED-Assessments nach der von SmED empfohlenen Versorgungsdringlichkeit.\n                    Die Versorgungsdringlichkeit gibt an, innerhalb welcher Zeitspanne der Anrufer medizinisch versorgt\n                    werden sollte.\n                  </p>\n                  <ol type=\"1\">\n                    <li>Notfall:</li>\n                    <p>Es besteht ein potentiell lebensbedrohlicher Zustand. Die ärztliche Behandlung muss unverzüglich\n                      erfolgen.</p>\n                    <li>Schnellstmögliche ärztliche Versorgung:</li>\n                    <p>Die ärztliche Behandlung soll schnellstmöglich erfolgen, muss jedoch nicht unmittelbar\n                      stattfinden.</p>\n                    <li>Ärztliche Behandlung innerhalb von 24 h:</li>\n                    <p>Die ärztliche Behandlung soll innerhalb von 24 Stunden erfolgen.</p>\n                    <li>Ärztliche Behandlung nicht innerhalb von 24 h erforderlich:</li>\n                    <p>Die ärztliche Behandlung eilt nicht. Falls die Beschwerden in den nächsten 2 Tagen nicht\n                      abklingen, ist eine ärztliche Behandlung in jedem Fall angezeigt.</p>\n                  </ol>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n        <mat-card>\n          <h3>Mittlere Dauer <br><span class=\"lightgreycolor\">Dauer in Sekunden pro Assessment</span></h3>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"[this.colorsscheme[3]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Dauer (Sek.)']\"\n            plottype=\"tsline\" [resolution]=\"this.levelsettings['resolution']\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Angaben zur Dauer liegen erst seit Mai 2020 vor. In die Berechnung der Dauer fließen nur\n                    Assessments ein, die mit dem klassischen SmED-Modul (nicht COVID-spezifische Module) erfasst wurden.\n                    Weiterhin wurden Assessments mit einer Dauer von über 1000 Sekunden ausgeschlossen, da bei diesen\n                    Assessments davon auszugehen ist, dass diese nicht ordnungsgemäß abgeschlossen wurden.</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.stats_ts\">\n        <mat-card>\n          <h3>Mittlere Anzahl Beschwerden<br><span class=\"lightgreycolor\">Mittlere Anzahl unterschiedlicher Beschwerden\n              pro Assessment</span></h3>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"[this.colorsscheme[2]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Anzahl Beschwerden']\"\n            plottype=\"tsline\" [resolution]=\"this.levelsettings['resolution']\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Die Anzahl der Beschwerden umfasst die im Rahmen eines SmED-Assessments dokumentierten vorliegenden\n                    Beschwerden der Anrufenden. Bisher nicht enthalten sind Beschwerden, die im Rahmen der Abfrage von\n                    lebensbedrohlichen Situationen (Vortriage) erfasst wurden.</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.stats_ts && this.currentuser\">\n        <mat-card>\n          <h3>Mittlere Anzahl Fragen<br><span class=\"lightgreycolor\">Mittlere Anzahl beantworteter Fragen pro\n              Assessment</span>\n            <mat-icon class=\"backgroundicon\">lock_open</mat-icon>\n          </h3>\n          <app-plot [(data)]=\"this.stats_ts\" xtickformat=\"%d.%m.<br>%Y\" [xvalue]=\"'Datum'\" [fontcolor]=\"'white'\"\n            [colorscheme]=\"[this.colorsscheme[1]]\" [sortx]=\"true\" [outcomes]=\"['Mittlere Anzahl Fragen']\"\n            plottype=\"tsline\" [resolution]=\"this.levelsettings['resolution']\"></app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('zeitreihe.csv',this.stats_ts)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Die Anzahl der Fragen umfasst die im Rahmen eines SmED-Assessments dokumentierten beantworteten\n                    Fragen (inklusive Fragen zu Alter, Geschlecht, Schwangerschaft, lebensbedrohlicher Situation,\n                    Beschwerden, chronischen Erkrankungen, Begleitumständen usw.).</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.currentuser && this.decisions_pocvsttt\">\n        <mat-card *ngIf=\"this.decisions_pocvsttt.length>0\">\n          <h3>Empfehlung Behandlungsort nach Dringlichkeit <br><span class=\"lightgreycolor\">Anzahl Assessment<mat-icon\n                class=\"backgroundicon\">lock_open\n              </mat-icon></span>\n          </h3>\n          <div>\n            <app-plot [(data)]=\"this.decisions_pocvsttt\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\"\n              [showlegend]=\"false\" [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\"\n              plottype=\"stackedbar\" [colorby]=\"'POCsmed_text'\">\n            </app-plot>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('timetotreat.csv',this.decisions_pocvsttt)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Prozentuale Verteilung der SmED-Assessments nach der von SmED empfohlenen Versorgungsebene\n                    (Behandlungsort) und Versorgungsdringlichkeit.</p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=100 fxFlex.lt-md=100 *ngIf=\"this.timetotreat && this.currentuser\">\n        <mat-card *ngIf=\"this.timetotreat.length>0\">\n          <h3>SmED-Assessments nach QM-Kategorien<br><span class=\"lightgreycolor\">Anteil Assessments in der angegebenen\n              QM-Kategorie an allen Assessments in Prozent, basierend auf Daten seit 14.04.2023, ohne\n              COVID-Module</span>\n          </h3>\n          <app-plot [(data)]=\"this.qmCases\" [xvalue]=\"'text'\" [fontcolor]=\"'white'\" [showlegend]=\"false\"\n            [outcomes]=\"['data']\" [custommargins]=\"{ l: 50, r: 0, b: 0, t: 0 }\" plottype=\"hbar\">\n          </app-plot>\n          <div>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('empfehlung.csv',this.qmCases)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Prozentuale Verteilung der SmED-Assessments nach QM-Kategorie.</p>\n                  <ol type=\"1\">\n                    <li>Vortriage:</li>\n                    <p>Im Rahmen der Abfrage einer lebensbedrohlichen Situation (Vortriage) wurde ein Notfall\n                      festgestellt.</p>\n                    <li>Nur Notfall ausgeschlossen:</li>\n                    <p>Im Rahmen der Vortriage wurde ein Notfall ausgeschlossen, es wurde aber nicht weiter ins\n                      Assessment eingestiegen.</p>\n                    <li>Assessment vollständig:</li>\n                    <p>SmED-Assessment durchgeführt, SmED-Empfehlung zur Dringlichkeit liegt vor, es wurden alle\n                      farbigen Fragen beantwortet.</p>\n                    <li>Assessment abgekürzt:</li>\n                    <p>SmED-Assessment durchgeführt, SmED-Empfehlung zur Dringlichkeit liegt vor, jedoch nicht alle\n                      farbigen Fragen beantwortet.</p>\n                    <li>SmED nicht anwendbar:</li>\n                    <p>Die Anwendung von SmED resultierte nicht in einer SmED-Empfehlung zur Dringlichkeit der\n                      Behandlung. Dies kann folgende Gründe haben: (a) Es wurden zu wenige Angaben gemacht, (b) es\n                      wurden zu viele unklare Antworten gegeben.</p>\n                  </ol>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"(this.currentuser && this.decisions_ttt) && (!this.isExtern)\">\n        <mat-card *ngIf=\"this.decisions_ttt.length>0\">\n          <h3>Abgleich Empfehlung vs. Entscheidung Dringlichkeit<br><span class=\"lightgreycolor\">Anzahl\n              Assessment<mat-icon class=\"backgroundicon\">lock_open\n              </mat-icon></span>\n          </h3>\n          <div>\n            <app-plot [(data)]=\"this.decisions_ttt\" [xvalue]=\"'TTTsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"true\"\n              [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\" plottype=\"stackedbar\"\n              [colorby]=\"'TTTdispo_text'\">\n            </app-plot>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('decisions_ttt.csv',this.decisions_ttt)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Abgleich der SmED-Empfehlung mit der Entscheidung des/der Disponent*in hinsichtlich der\n                    Versorgungsdringlichkeit.\n                    Die Entscheidung des/der Disponent*in wird in SmED bisher nur bei einem kleinen Anteil der\n                    SmED-Assessments dokumentiert.\n                    Es wird an einer Übermittlung der entsprechenden Angaben aus der Dispositionssoftware gearbeitet.\n                    Dieser Prozess ist bisher\n                    mit einigen wenigen KVen etabliert. </p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n      <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"(this.decisions_poc && this.currentuser) && (!this.isExtern)\">\n        <mat-card *ngIf=\"this.decisions_poc.length>0\">\n          <h3>Abgleich Empfehlung vs. Entscheidung Behandlungsort <br><span class=\"lightgreycolor\">Anzahl\n              Assessment<mat-icon class=\"backgroundicon\">lock_open\n              </mat-icon></span>\n          </h3>\n          <div>\n            <app-plot [(data)]=\"this.decisions_poc\" [xvalue]=\"'POCsmed_text'\" [fontcolor]=\"'white'\" [showlegend]=\"true\"\n              [outcomes]=\"['Anzahl']\" [custommargins]=\"{ l: 50, r: 50, b: 150, t: 0 }\" plottype=\"stackedbar\"\n              [colorby]=\"'POCdispo_text'\">\n            </app-plot>\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" class=\"mat-elevation-z0\"\n              (closed)=\"panelOpenState = false\">\n              <mat-expansion-panel-header>\n                <mat-icon *ngIf=\"!panelOpenState\">info_outline</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-panel-description>\n                <div class=\"mat-caption\">\n                  <p *ngIf=\"this.currentuser\">\n                    <a (click)=\"this.exportascsv('decisions_poc.csv',this.decisions_poc)\">\n                      <mat-icon inline=true>file_download</mat-icon>\n                      Angezeigte Daten als CSV-Datei herunterladen &nbsp;\n                    </a>\n                  </p>\n                  <h3> Weitere Informationen zum Indikator</h3>\n                  <p>Abgleich der SmED-Empfehlung mit der Entscheidung des/der Disponent*in hinsichtlich der\n                    Versorgungsebene.\n                    Die Entscheidung des/der Disponent*in wird in SmED bisher nur bei einem kleinen Anteil der\n                    SmED-Assessments dokumentiert.\n                    Es wird an einer Übermittlung der entsprechenden Angaben aus der Dispositionssoftware gearbeitet.\n                    Dieser Prozess ist bisher\n                    mit einigen wenigen KVen etabliert. </p>\n                </div>\n              </mat-panel-description>\n            </mat-expansion-panel>\n          </div>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SmedAggregationService } from 'src/app/services/smed-aggregation.service';\nimport { CsvexportService } from 'src/app/services/csvexport.service';\nimport { DBService } from 'src/app/services/dbservice.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n  constructor(private db: DBService, private csv: CsvexportService,\n    private api: ApiService, private auth: AuthService, private smed: SmedAggregationService,\n    private router: Router) { }\n  metadata = [];\n  progress: boolean;\n  metadataok: boolean;\n  mapdata: any;\n  mapdatafor: string;\n  sortdata = [];\n  level: any;\n  levelvalues = [\n    'Gesamt',\n    'Baden-Württemberg',\n    'Bayern',\n    'Berlin',\n    'Brandenburg',\n    'Bremen',\n    'Hamburg',\n    'Hessen',\n    'Mecklenburg-Vorpommern',\n    'Niedersachsen',\n    'Nordrhein-Westfalen',\n    'Nordrhein',\n    'Westfalen-Lippe',\n    'Rheinland-Pfalz',\n    'Saarland',\n    'Sachsen',\n    'Sachsen-Anhalt',\n    'Schleswig-Holstein',\n    'Thüringen'\n  ];\n  externLevelValues = [\n  ]\n  subgroups: any;\n  outcomes: any;\n  determinants: any;\n  levelsettings = {};\n  data: any;\n  datakeys: any;\n  currentuser: any;\n  data_rate: any;\n  data_number: any;\n  geojson_available: any;\n  colorsscheme: any;\n  levelid: string;\n  datakeystable: any;\n  debug = false;\n  // SMED\n  stats_ts: any = [];\n  symptoms_list: any;\n  symptoms_list_export: any;\n  summaryinfo = {};\n  smedrange = {};\n  zeitaumoptions = [\"Letzte 12 Monate\", \"Letztes Jahr\", \"Gesamt\"];\n  allpublicfields = ['stats', 'mainsymptoms_ts', 'timetotreat', 'timestats', 'qmCases'];\n  ts_results = {};\n  utiltimes = {};\n  timetotreat: any;\n  qmCases: any;\n  decisions_ttt: any;\n  decisions_poc: any;\n  decisions_pocvsttt: any;\n  timetogo: number;\n  absoluteNumbers: boolean = false\n  isRKIUser: boolean = false\n  isRKIKVUser: boolean = false\n  isExtern: boolean = false\n  chipSelectedIndex: number = 0\n\n  ngOnInit(): void {\n    this.levelsettings = { \"level\": \"KV\", \"levelvalues\": \"Gesamt\", \"zeitraum\": \"Letzte 12 Monate\", 'resolution': 'monthly' };\n    this.summaryinfo[\"done\"] = false;\n    this.colorsscheme = this.api.makescale(5);\n    this.mapdatafor = \"\";\n    this.mapdata = [];\n    this.levelsettings = this.smed.updatestartstop(this.levelsettings);\n    this.auth.currentUser.subscribe(data => { this.currentuser = data; });\n\n    this.isRKIUser = this.auth.isRKIUser()\n    this.isRKIKVUser = this.auth.isRKIKVUser()\n    this.isExtern = this.auth.isExtern()\n    this.buildLevelValuesForCustomers()\n\n    if (this.isExtern) {\n      this.levelsettings['level'] = 'customer'\n      this.levelsettings['levelvalues'] = this.externLevelValues[0]\n\n      this.absoluteNumbers = true\n    }\n\n    this.updatemetadata();\n    window.scroll(0, 0);\n    this.setlevel(\"__init\", \"\");\n    // fix long loading\n    setTimeout(() => {\n      if (this.stats_ts.length == 0) {\n        this.setlevel(\"__init\", \"\");\n      };\n    }, 1500);\n\n    // counter\n    this.timetogo = this.check_portal_online();\n    if ((this.timetogo < 0) && !this.currentuser) {\n      setInterval(() => {\n        this.timetogo = this.check_portal_online();\n        if (this.timetogo >= 0) {\n          this.router.navigate(['/']);\n        }\n      }, 500);\n    };\n  }\n\n  ngOnDestroy() {\n    this.mapdata = [];\n  }\n\n  buildLevelValuesForCustomers() {\n    if (this.isExtern) {\n      for (const item of this.currentuser.usergroups.smed_reporting) {\n        if (item === 'kvuser') continue\n\n        this.externLevelValues.push(item)\n      }\n\n      if (this.isRKIKVUser) {\n        for (const item of this.levelvalues) {\n          this.externLevelValues.push(item)\n        }\n      }\n    }\n  }\n\n  async setlevel(level, value) {\n    if (!this.currentuser && (this.timetogo < 0)) {\n      return null;\n    }\n\n    this.levelsettings[\"resolution\"] = this.isExtern ? 'weekly' : this.levelsettings[\"resolution\"];\n\n    if (level !== \"__init\") {\n      this.levelsettings[level] = value;\n      this.levelsettings = this.smed.updatestartstop(this.levelsettings);\n    };\n\n    this.summaryinfo = [];\n    this.stats_ts = [];\n    this.utiltimes = {};\n    this.decisions_ttt = [];\n    this.decisions_poc = [];\n    this.decisions_pocvsttt = [];\n    this.timetotreat = NaN;\n    this.qmCases = NaN;\n\n    if (this.metadata.length == 0) {\n      this.updatemetadata();\n      return null;\n    }\n\n    if (this.levelsettings['start'] && this.levelsettings['stop']) {\n      this.progress = true;\n      await this.querydatasmed();\n      if (this.currentuser) {\n        await this.querydatasmed('decisions');\n      };\n    }\n  }\n\n  async updatemetadata() {\n    if (this.api.getmetadata(\"metadata\")) {\n      this.metadata = await this.api.getmetadata(\"metadata\");\n      // Performance optimization - use only if needed by app\n      // this.sortdata = this.api.getmetadata(\"sortdata\");\n      // this.geojson_available = this.api.getmetadata(\"geodata\");\n    }\n\n    if (this.metadata) {\n      if (this.metadata.length > 0) {\n        this.dometasettings();\n      }\n    } else {\n      this.metadata = [];\n      setTimeout(() => {\n        if ((this.metadata !== undefined) && (this.sortdata !== undefined)) {\n          if (this.metadata.length > 0) {\n            this.dometasettings();\n          }\n        }\n        else {\n          this.metadataok = false;\n          this.metadata = [];\n        }\n      }, 1500);\n    };\n  }\n\n  handleklick(plot, event) {\n  }\n\n  dometasettings() {\n    this.level = this.api.filterArray(this.metadata, \"type\", \"level\")[0][\"varname\"];\n    this.levelid = this.api.filterArray(this.metadata, \"type\", \"levelid\")[0]['varname'];\n    this.subgroups = [\"Keine\"].concat(this.api.getValues(this.api.filterArray(this.metadata, \"type\", \"group\"), \"varname\"));\n    this.metadataok = true;\n  }\n\n  async querydatasmed(thefield = \"\") {\n    let now: Date = new Date();\n    let oldstand: Date = new Date();\n    let dataage = 0; // 0 hours old     \n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {}\n    };\n    query[\"groupinfo\"][\"level\"] = (this.isExtern) && this.levelsettings['levelvalues'] !== 'Gesamt' ? \"customer\" : \"KV\"\n    query[\"groupinfo\"][\"levelid\"] = this.levelsettings[\"levelvalues\"];\n    query[\"groupinfo\"][\"timeframe\"] = this.levelsettings[\"resolution\"];\n    query[\"groupinfo\"][\"Jahr\"] = {\n      \"$gte\": parseInt(this.levelsettings[\"start\"].slice(0, 4)),\n      \"$lte\": parseInt(this.levelsettings[\"stop\"].slice(0, 4))\n    };\n\n    if (thefield != \"\") {\n      query[\"showfields\"] = [thefield, 'KM6Versicherte', 'BEVSTAND'];\n    }\n    else {\n      query[\"showfields\"] = this.allpublicfields.concat(['KM6Versicherte', 'BEVSTAND']);\n    };\n\n    let dbdaterange;\n\n    if (thefield != \"\") {\n      await this.db.querydatadates(\n        this.levelsettings['level'], this.levelsettings[\"levelvalues\"], thefield, this.levelsettings[\"resolution\"]).then(data => {\n          if (data.length > 0) { dbdaterange = Object.create(data[0]); }\n        }\n        );\n    }\n    else {\n      await this.db.querydatadates(\n        this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.allpublicfields[0], this.levelsettings[\"resolution\"]).then(data => {\n          if (data.length > 0) { dbdaterange = Object.create(data[0]); }\n        });\n    };\n\n    if (!dbdaterange) {\n      dbdaterange = { 'startdate': '2000-01-01', 'stopdate': '2000-01-01' };\n    }\n    else {\n      oldstand = new Date(dbdaterange['Stand']);\n      dataage = (now.getTime() - oldstand.getTime()) / (1000 * 60 * 60);\n    };\n    if ((dbdaterange['startdate'] <= this.levelsettings[\"start\"]) && (dbdaterange['stopdate'] >= this.levelsettings[\"stop\"]) &&\n      (dataage < 6)\n    ) {\n      if (thefield != \"\") {\n        this.makesmeditems(thefield);\n      }\n      else {\n        for (let fielditem of this.allpublicfields) {\n          this.makesmeditems(fielditem);\n        };\n      };\n    }\n    else {\n      await this.api.postTypeRequest('get_data/', query).subscribe(\n        data => {\n          let res = data[\"data\"];\n\n          if (thefield === \"\") {\n            for (const item of res) {\n              if (!item.mainsymptoms_ts) {\n                item.mainsymptoms_ts = []\n              }\n            }\n          }\n\n          if (thefield != \"\" && res.length > 0) {\n            this.db.deletewhere(thefield, this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.levelsettings[\"resolution\"],\n              this.levelsettings[\"start\"], this.levelsettings[\"stop\"],\n            ).then(() => {\n              this.updatedb(res, thefield)\n            });\n\n            this.db.storestand(thefield, this.levelsettings['level'],\n              this.levelsettings[\"levelvalues\"], now.toISOString(),\n              this.levelsettings[\"start\"], this.levelsettings[\"stop\"], this.levelsettings[\"resolution\"]);\n          };\n\n          if (thefield == \"\" && res.length > 0) {\n            for (let fielditem of this.allpublicfields) {\n              this.db.deletewhere(fielditem, this.levelsettings['level'], this.levelsettings[\"levelvalues\"], this.levelsettings[\"resolution\"],\n                this.levelsettings[\"start\"], this.levelsettings[\"stop\"], this.levelsettings['zeitraum']\n              ).then(() => {\n                this.updatedb(res, fielditem)\n              });\n\n              this.db.storestand(fielditem, this.levelsettings['level'],\n                this.levelsettings[\"levelvalues\"], now.toISOString(),\n                this.levelsettings[\"start\"], this.levelsettings[\"stop\"], this.levelsettings[\"resolution\"]);\n            };\n          };\n        },\n        error => { });\n    };\n  }\n\n  async updatedb(data, thefield) {\n    await this.smed.newcombine(data, thefield);\n    await this.makesmeditems(thefield);\n  }\n\n  exportascsv(name, data) {\n    console.log(\"exportascsv name\", name);\n    console.log(\"exportascsv data\", data);\n    this.csv.exportToCsv(name, data);\n    this.csv.exportToCsv(name + \"_settings.csv\", [this.levelsettings]);\n  }\n\n  async makesmeditems(thefield) {\n    this.levelsettings = this.smed.updatestartstop(this.levelsettings);\n    let startdate = this.levelsettings['startdate'];\n    let enddate = this.levelsettings['enddate'];\n\n    if (thefield == \"stats\") {\n      this.stats_ts = [];\n      this.summaryinfo = [];\n      let statswdate = await this.db.listdata('stats', this.levelsettings['level'],\n        this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true,\n        this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\n\n      if (statswdate.length > 0) {\n\n        for (let item of statswdate) {\n          item[\"Mittlere Dauer (Sek.)\"] = (item[\"DAUERsmed\"] / item[\"DAUERsmedFaelle\"]);\n\n          if (item[\"Dauer_sek\"] == 0) {\n            item[\"Mittlere Dauer (Sek.)\"] = null;\n          }\n\n          item[\"Mittlere Anzahl Beschwerden\"] = item[\"Anzahl_Beschwerden\"] / item[\"Assessments\"];\n          item[\"Mittlere Anzahl Fragen\"] = item[\"Anzahl_Fragen\"] / item[\"Assessments\"];\n\n          if (item[\"Anzahl_Beschwerden\"] == 0) {\n            item[\"Mittlere Anzahl Beschwerden\"] = null;\n          }\n\n          item[\"Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments\"] / (item[\"BEVSTAND\"] / 1e5);\n          // item[\"ARE Assessments pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE\"] / (item[\"BEVSTAND\"] / 1e5);\n          // item[\"ARE Assessments (v2) pro 100 Tsd. Einw.\"] = item[\"Assessments_mit_ARE_v2\"] / (item[\"BEVSTAND\"] / 1e5);\n          item[\"Anteil ARE Assessments\"] = (100 * ((item[\"Assessments_mit_ARE_v3\"] / item[\"Assessments\"]) / .25)) - 100;\n\n          item['totaleNumbers'] = item['Assessments']\n        };\n\n        this.stats_ts = statswdate;\n        let theid = this.stats_ts[0]['levelid'];\n\n        if (theid != \"Gesamt\") { this.summaryinfo[\"levelid\"] = \" in \".concat(theid); }\n        else { this.summaryinfo[\"levelid\"] = \" in Deutschland\"; };\n\n        this.summaryinfo[\"Assessments Gesamt\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Assessments\"));\n        this.summaryinfo[\"Assessments pro Woche\"] = this.summaryinfo[\"Assessments Gesamt\"] / this.api.getValues(this.stats_ts, \"Assessments\").length;\n        this.summaryinfo[\"Mittlere Dauer\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"DAUERsmed\")) / this.api.sumArray(this.api.getValues(this.stats_ts, \"DAUERsmedFaelle\"));\n        this.summaryinfo[\"Anzahl Beschwerden\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Anzahl_Beschwerden\")) / this.summaryinfo[\"Assessments Gesamt\"];\n        this.summaryinfo[\"Anzahl Fragen\"] = this.api.sumArray(this.api.getValues(this.stats_ts, \"Anzahl_Fragen\")) / this.summaryinfo[\"Assessments Gesamt\"];\n        let sorteddates = this.api.getValues(this.stats_ts, \"Datum\").sort();\n        this.summaryinfo[\"Beginn\"] = new Date(sorteddates[0]);\n        this.summaryinfo[\"Ende\"] = new Date(sorteddates.pop());\n        this.summaryinfo[\"done\"] = true;\n        // only here signal for loading done:\n        this.progress = false;\n      }\n    };\n\n    if (thefield == \"mainsymptoms_ts\") {\n      let symptoms_list = [];\n\n      symptoms_list = await this.db.listdata('mainsymptoms_ts', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\n      symptoms_list = this.api.getValues(symptoms_list, 'data');\n\n      this.symptoms_list_export = this.api.sortArray(this.api.groupbysum(symptoms_list, 'Sympt', '', 'n'), 'n', \"descending\");\n\n      for (let item of this.symptoms_list_export) {\n        let anzahl_symptome = this.api.sumArray(this.api.getValues(this.symptoms_list_export, \"n\"));\n        item[\"Anteil\"] = Math.round(1000 * item['n'] / anzahl_symptome) / 10;\n      }\n\n      this.symptoms_list = this.symptoms_list_export.slice(0, 15);\n    };\n\n    if (thefield == \"timestats\") {\n      let utiltimes = [];\n      let dbutiltimes = await this.db.listdata('timestats', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], false, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\n      dbutiltimes = this.api.getValues(dbutiltimes, 'data');\n      utiltimes = this.api.groupbysum(dbutiltimes, \"wt\", \"h\", \"n\");\n      let ntotal = this.api.sumArray(this.api.getValues(utiltimes, 'n'));\n      dbutiltimes = [];\n\n      for (let item of utiltimes) {\n        item[\"Wochentag\"] = this.api.getweekdayname(item[\"wt\"]);\n        item['Anzahl'] = item['n'];\n        item['Anteil'] = 0.1 * Math.round(1000 * item['n'] / ntotal);\n        item['TimeLabel'] = item['h'] + \"-\" + (item['h'] + 2) + 'h';\n        delete item['n'];\n      }\n      this.utiltimes = this.api.makeheatmapdata(utiltimes, \"wt\", \"h\", 'Anteil', 'Wochentag', 'TimeLabel');\n    };\n\n    if (thefield == \"timetotreat\") {\n      let result = [];\n      let standardSort = [\n        {\n          TTTsmed_text: undefined,\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'Notfall',\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'schnellstmögliche ärztliche Behandlung',\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'Ärztliche Behandlung innerhalb von 24h',\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'Ärztliche Behandlung nicht innerhalb von 24h erforderlich',\n          Anzahl: 0,\n          Anteil: 0\n        },\n        {\n          TTTsmed_text: 'k.A./Befragung unklar',\n          Anzahl: 0,\n          Anteil: 0\n        }\n      ]\n\n      result = await this.db.listdata('timetotreat', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\n      result = this.api.groupbysum(result, 'TTTsmed_text', '', 'Anzahl');\n      const total = this.api.sumArray(this.api.getValues(result, 'Anzahl'));\n\n      for (let item of result) {\n        item['Anteil'] = Math.round(1000 * item['Anzahl'] / total) / 10;\n      }\n\n      if (!this.isRKIUser || !this.isRKIKVUser) {\n        if (result[0].TTTsmed_text !== undefined) {\n          result.push({ TTTsmed_text: undefined, Anzahl: 0, Anteil: 0 })\n        }\n      }\n\n      this.timetotreat = createStandardSort(result);\n\n      function createStandardSort(data) {\n        const result = []\n\n        for (const item of standardSort) {\n          for (const _item of data) {\n            if (item.TTTsmed_text === _item.TTTsmed_text) {\n              item.Anteil = _item.Anteil\n              item.Anzahl = _item.Anzahl\n            }\n          }\n          result.push(item)\n        }\n        return result.reverse()\n      }\n    }\n\n    if (thefield == \"decisions\") {\n      let decisions = [];\n      decisions = await this.db.listdata('decisions', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\n      let total = this.api.sumArray(this.api.getValues(decisions, 'Anzahl'));\n      this.decisions_ttt = this.api.replacemissing(this.api.groupbysum(decisions, 'TTTsmed_text', \"TTTdispo_text\", 'Anzahl'), 'TTTdispo_text', \"Keine Daten\");\n      this.decisions_poc = this.api.replacemissing(this.api.groupbysum(decisions, 'POCsmed_text', \"POCdispo_text\", 'Anzahl'), 'POCdispo_text', \"Keine Daten\");;\n      this.decisions_pocvsttt = this.api.groupbysum(decisions, 'TTTsmed_text', \"POCsmed_text\", 'Anzahl').reverse();\n    }\n\n    if (thefield === \"qmCases\") {\n      let standardSort = [\n        {\n          text: \"Vortriage\",\n          data: 0,\n        },\n        {\n          text: 'nur Notfall ausgeschlossen',\n          data: 0,\n        },\n        {\n          text: 'Assessment vollständig',\n          data: 0,\n        },\n        {\n          text: 'Assessement abgekürzt',\n          data: 0,\n        },\n        {\n          text: 'SmED nicht anwendbar',\n          data: 0,\n        },\n      ]\n\n      const data = await this.db.listdata('stats', this.levelsettings['level'], this.levelsettings['levelvalues'], this.levelsettings['start'], this.levelsettings['stop'], true, this.levelsettings[\"resolution\"], this.levelsettings['zeitraum']);\n      let total = 0\n\n      if (data.length > 0) {\n        for (const item of data) {\n          if (item[\"QMFaelle\"]) {\n            total += item[\"QMFaelle\"]\n            for (const _item of standardSort) {\n              if (_item.text === \"Vortriage\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Vortriage\")))\n                }\n              }\n              if (_item.text === \"nur Notfall ausgeschlossen\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_nur_Notfall_ausgeschlossen\")))\n                }\n              }\n              if (_item.text === \"Assessment vollständig\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Assessment_vollst\")))\n                }\n              }\n              if (_item.text === \"Assessement abgekürzt\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_Assessment_abgekuerzt\")))\n                }\n              }\n              if (_item.text === \"SmED nicht anwendbar\") {\n                if (_item.data === 0) {\n                  _item.data = (this.api.sumArray(this.api.getValues(data, \"QM_Kat_SmED_nicht_anwendbar\")))\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (standardSort) {\n        for (const item of standardSort) {\n          item.data = inPercent(item.data, total)\n        }\n      }\n\n      this.qmCases = standardSort.reverse()\n\n      function inPercent(x, y) {\n        const result = Math.round(1000 * x / y) / 10\n\n        return result\n      }\n    }\n  }\n\n  // Pre Launch Counter\n  check_portal_online() {\n    let date1 = new Date(\"2022-03-14 08:00:00\".replace(/-/g, \"/\")); // DUE TO BAD SAFARI IMPLEMENTATION!\n    let date2 = new Date();\n    let timediff = date2.getTime() - date1.getTime();\n    return timediff;\n  }\n\n  counterstring(timediff) {\n    if (timediff >= 0) {\n      return \"\";\n    }\n\n    let Tage = Math.floor(-timediff / (1000 * 60 * 60 * 24));\n    let Stunden = Math.floor(-timediff / (1000 * 60 * 60));\n    Stunden = Math.floor((Stunden / 24 - Math.floor(Stunden / 24)) * 24);\n    let Minuten = Math.floor(-timediff / (1000 * 60));\n    Minuten = Math.floor((Minuten / 60 - Math.floor(Minuten / 60)) * 60);\n    let Sekunden = Math.floor(-timediff / (1000));\n    Sekunden = Math.floor((Sekunden / 60 - Math.floor(Sekunden / 60)) * 60);\n    return Tage + ' Tage ' + Stunden + \" Stunden \" + Minuten + \" Minuten \" + Sekunden + \" Sekunden\";\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { retry, timeout } from 'rxjs/operators';\nimport * as chroma from \"chroma-js\";\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public itsatest = false;\n  public REST_API_SERVER = \"https://api.zidatasciencelab.de/\"; // \"https://barebonedashboardapi.azurewebsites.net/\"; \"https://dashboardapi.ziapp.de/\"; \"http://localhost:8000/\"; \n  public REST_API_SERVER_CLIENTID = \"smed_reporting\";\n  public primarycolor = '#3c9bfa' //\"#2196f3\"; // \"#e91e63\";\n  public accentcolor = '#2dcd73' //\"#e3714e1\";\n  public warncolor = '#f0194b' //\"#e1149b\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getTypeRequest(url) {\n    return this.httpClient.get(this.REST_API_SERVER + url).pipe(map(res => {\n      return res;\n    })).pipe(/*timeout(3500),*/retry(3));\n  }\n\n  public postTypeRequest(url, payload) {\n    return this.httpClient.post(this.REST_API_SERVER + url, payload).pipe(map(res => {\n      return res;\n    })).pipe(/*timeout(15000),*/retry(3));;\n  }\n\n  public getTypeRequestnotimeout(url) {\n    return this.httpClient.get(this.REST_API_SERVER + url).pipe(map(res => {\n      return res;\n    })).pipe(retry(3));\n  }\n\n  public postTypeRequestnotimeout(url, payload) {\n    return this.httpClient.post(this.REST_API_SERVER + url, payload).pipe(map(res => {\n      return res;\n    })).pipe(retry(3));;\n  }\n\n\n  // Specific Requests\n\n  public updateuser(user, setting, value, usergroups = \"\") {\n    let payload = { 'email': user, 'key': setting, 'value': value };\n    if (usergroups != \"\") {\n      payload['usergroups'] = usergroups;\n    }\n    return this.postTypeRequest('userstatus/', payload);\n  }\n\n  public deleteuser(user, password = \"\") {\n    let payload = { \"email\": user };\n    if (password != \"\") { payload[\"password\"] = password };\n    return this.postTypeRequest('deleteuser', payload);\n  }\n\n  public changeuserpwd(user, newpwd, oldpwd = \"\") {\n    let payload = { \"newpassword\": newpwd, email: user };\n    if (oldpwd != \"\") {\n      payload[\"oldpassword\"] = oldpwd;\n    }\n    return this.postTypeRequest('changepwd', payload);\n  }\n\n  countView(url) {\n    // Privacy preserving Webcounter, see Documentation here https://github.com/zidatalab/ziwebcounter\n    this.httpClient.get('https://analytics.api.ziapp.de/view/ambulante_notfaelle/data?pageid=' + url + '&cookiedissent=' + true, { withCredentials: false }).subscribe();\n  }\n\n  // Data APIs\n  public getValues(array, key) {\n    let values = [];\n    for (let item of array) {\n      values.push(item[key]);\n    }\n    return values;\n  }\n  public getKeys(array) {\n    return Object.keys(array[0]);\n  }\n\n  objectkeystocolumns(array, targetData) {\n    for (let item of array) {\n      let obj = item[targetData];\n\n      for (let key of Object.keys(obj)) {\n        item[key] = obj[key];\n      }\n\n      obj[targetData] = NaN;\n      delete obj[targetData];\n    }\n\n    return array;\n  }\n\n  public getOptions(array, key) {\n    return array.map(item => item[key])\n      .filter((value, index, self) => self.indexOf(value) === index)\n  }\n\n  public filterArray(array, key, value) {\n    let i = 0\n    let result = []\n    if (!Array.isArray(array)) {\n      return result;\n    }\n    for (let item of array) {\n      if (item[key] == value) { result.push(item) };\n      i = i + 1\n    }\n    return result\n  }\n\n  public filterNAArray(array, key) {\n    let i = 0\n    let result = []\n    for (let item of array) {\n      if (item[key] && (item[key] !== null) && (!isNaN(item[key]))) {\n        result.push(item)\n      };\n      i = i + 1\n    }\n    return result\n  }\n\n  public filterNA(array) {\n    let result = []\n    for (let item of array) {\n      if (!isNaN(item)) {\n        result.push(item)\n      };\n    }\n    return result\n  }\n\n  public filterArraybyList(array, key, list) {\n    let i = 0\n    let result = []\n    for (let item of array) {\n      if (list.indexOf(item[key]) >= 0) { result.push(item) };\n      i = i + 1\n    }\n    return result\n  }\n\n  public async getmetadata(name) {\n    return JSON.parse(localStorage.getItem(name));\n  }\n\n  public sortArray(array, key, order = \"ascending\") {\n    let result = array;\n    if (order == \"ascending\") {\n      return result.sort((a, b) => (a[key] < b[key] ? -1 : 1));\n    }\n    else {\n      return result.sort((a, b) => (a[key] > b[key] ? -1 : 1));\n    }\n\n\n\n  }\n\n  public sumArray(array) {\n    var total = 0;\n    for (var obj of array) {\n      if (parseFloat(obj)) { total += +obj; }\n    };\n\n    return total;\n  }\n\n  public getuniqueValues(array, key) {\n    let items = this.getValues(array, key);\n    return [...new Set(items)];\n  }\n\n\n  public groupbysum(array, key1, key2 = \"\", outcome) {\n    let result = [];\n    let valueskey1 = this.getuniqueValues(array, key1);\n    let valueskey2 = [];\n    if (key2 != \"\") {\n      valueskey2 = this.getuniqueValues(array, key2);\n    }\n\n    for (let value of valueskey1) {\n      let keyvalues = this.filterArray(array, key1, value);\n\n      if (key2 == \"\") {\n        let topush = {};\n        topush[key1] = value;\n        topush[outcome] = this.sumArray(this.getValues(keyvalues, outcome));\n        result.push(topush);\n      }\n      if (key2 !== \"\") {\n        for (let k2value of valueskey2) {\n          let topush = {};\n          topush[key1] = value;\n          topush[key2] = k2value;\n          topush[outcome] = this.sumArray(this.getValues(this.filterArray(keyvalues, key2, k2value), outcome));\n          result.push(topush);\n        }\n\n      };\n    }\n    return result;\n  }\n\n  public getweekdayname(dayofweek, mongo = false) {\n    let days = [\"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\", \"Sonntag\"];\n    if (mongo) {\n      days = [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"];\n    }\n    return days[dayofweek - 1];\n  }\n\n  public splitarraybykey(array, splitkey) {\n    let res = []\n    let splitvalues = this.getuniqueValues(array, splitkey);\n    for (let value of splitvalues) {\n      res.push(this.filterArray(array, splitkey, value));\n    }\n    return res = [];\n  }\n\n  public makescale(bins = 5) {\n    return chroma.scale([chroma(this.primarycolor).set('hsl.h', +70), this.primarycolor]).colors(bins);\n  };\n\n  public stringwrap(string, maxlength = 30) {\n    let newstring = \"\";\n    let wordsarray = string.split(\" \");\n    let fulllength = string.length\n    let linelength = 0\n    for (let word of wordsarray) {\n      let wordlen = word.length;\n      if ((linelength + wordlen) < maxlength) {\n        newstring = newstring + \" \" + word;\n        linelength = linelength + wordlen;\n      }\n      else {\n        newstring = newstring + \"<br>\" + word;\n        linelength = wordlen;\n      };\n    }\n    return newstring;\n  };\n\n  public makeheatmapdata(array, xname, yname, valuename, xlabel = \"\", ylabel = \"\") {\n    let res = {};\n    res['x'] = this.getuniqueValues(array, xname).sort(function (a, b) { return a - b });\n    res['y'] = this.getuniqueValues(array, yname).sort(function (a, b) { return a - b });\n    res['z'] = [];\n    for (let yitem of res['y']) {\n      let topush = [];\n      for (let xitem of res['x']) {\n        try {\n          topush.push(this.filterArray(this.filterArray(array, xname, xitem), yname, yitem)[0][valuename]);\n        }\n        catch {\n          topush.push(NaN);\n        };\n      }\n      res['z'].push(topush);\n    }\n    if (xlabel != \"\") {\n      let xlab = [];\n      for (let item of res['x']) {\n        try { xlab.push(this.filterArray(array, xname, item)[0][xlabel]) }\n        catch { xlab.push(\"\") };\n      }\n      res['x'] = xlab;\n    };\n    if (ylabel != \"\") {\n      let ylab = [];\n      for (let item of res['y']) {\n        try { ylab.push(this.filterArray(array, yname, item)[0][ylabel]) }\n        catch { ylab.push(\"\") };\n      }\n      res['y'] = ylab;\n    };\n\n    return res;\n  };\n\n  public replacemissing(array, key, replacement = \"Fehlend\") {\n    for (let item of array) {\n      if (!item[key]) {\n        item[key] = replacement;\n      }\n    }\n    return array;\n  }\n\n  public arrayintersect(a, b) {\n    var setA = new Set(a);\n    var setB = new Set(b);\n    var intersection = new Set([...setA].filter(x => setB.has(x)));\n    return Array.from(intersection);\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\nconstructor(\n    private _authService: AuthService,\n    private _router: Router\n  ) { }\n\n\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    let isExtern = this._authService.isExtern()\n    if (userdata && !isExtern) {\n      result = true;\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n  canActivateAdmin(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    if (userdata){\n    if (userdata[\"is_admin\"] || userdata[\"is_superadmin\"]) {\n      result = true;\n    }\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Observer, fromEvent, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(\n    private http: HttpClient,\n    private _api: ApiService,\n    private router: Router) {\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('userInfo')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): any {\n    return this.currentUserSubject.value;\n  }\n\n  OnlineStatus() {\n    return merge<boolean>(\n      fromEvent(window, 'offline').pipe(map(() => false)),\n      fromEvent(window, 'online').pipe(map(() => true)),\n      new Observable((sub: Observer<boolean>) => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n  }\n\n  login(formdata) {\n    let b = formdata;\n    const payload = new HttpParams()\n      .set('username', b.username)\n      .set('password', b.password)\n      .set('client_id', this._api.REST_API_SERVER_CLIENTID);\n    return this._api.postTypeRequestnotimeout('login/', payload).pipe(map(user => {\n      return this.logintasks(user);\n    }));\n  }\n\n  logintasks(user) {\n    this.setDataInLocalStorage('refresh_token', user.refresh_token);\n    this.setDataInLocalStorage('access_token', user.access_token);\n    this.storeUserDetails(user.user);\n    this.currentUserSubject.next(user.user);\n    return user;\n  }\n\n  adduser(data) {\n    return this._api.postTypeRequest('newuser', data);\n  }\n\n  refreshToken() {\n    return this.http.post(this._api.REST_API_SERVER + 'login/refresh/', { refresh: true }).subscribe(\n      data => {\n        let result: any = data;\n        this.setDataInLocalStorage('access_token', result.access_token);\n\n      },\n      error => { }\n    )\n  }\n\n  storeUserDetails(data) {\n    return localStorage.setItem('userInfo', JSON.stringify(data));\n  }\n\n  public getUserDetails() {\n    return localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : false;\n  }\n\n  setDataInLocalStorage(variableName, data) {\n    localStorage.setItem(variableName, data);\n  }\n\n  public getToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  public getRefreshToken() {\n    return localStorage.getItem('refresh_token');\n  }\n\n  public logout() {\n    localStorage.clear();\n    this.currentUserSubject.next(null);\n  }\n\n  public updateUserData() {\n    return this._api.getTypeRequest('users/profile/')\n  }\n\n  public gettokeninfo() {\n    let token = this.getToken();\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  };\n\n  public getUserReportingGroup() {\n    if (this.currentUserValue) {\n\n      return this.currentUserValue.usergroups.smed_reporting\n    }\n\n    return []\n  }\n\n  public isRKIUser() {\n    if(this.currentUserValue) {\n      const userGroup = this.currentUserValue.usergroups.smed_reporting\n      \n      if(userGroup.includes('rki') && !(userGroup.includes('kvuser'))) {\n        return true\n      }\n\n      return false\n    }\n\n    return false\n  }\n\n  public isRKIKVUser() {\n    if(this.currentUserValue) {\n      const userGroup = this.currentUserValue.usergroups.smed_reporting\n      \n      if(userGroup.includes('rki') && userGroup.includes('kvuser')) {\n        return true\n      }\n\n      return false\n    }\n\n    return false\n  }\n\n  public isExtern() {\n    if(this.currentUserValue) {\n      const usergroup = this.currentUserValue.usergroups.smed_reporting\n\n      if(!usergroup.includes('kvuser')) {\n        return true\n      }\n\n      return false\n    }\n\n    return false\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvexportService {\n\n  public exportToCsv(filename: string, rows: object[]) {\n    if (!rows ) {\n      return;\n    }\n    if (rows && !rows.length ) {\n      rows=[rows];\n    }\n    const separator = ',';\n    const keys = Object.keys(rows[0]);\n    const csvContent =\n      keys.join(separator) +\n      '\\n' +\n      rows.map(row => {\n        return keys.map(k => {\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\n          cell = cell instanceof Date\n            ? cell.toLocaleString()\n            : cell.toString().replace(/\"/g, '\"\"');\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\n            cell = `\"${cell}\"`;\n          }\n          return cell;\n        }).join(separator);\n      }).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      if (link.download !== undefined) {\n        // Browsers that support HTML5 download attribute\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', filename);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      \n    }\n  }\n}","import Dexie, { Table } from 'dexie';\n\nexport class DataItem {\n  level: string;\n  levelid: string;\n  Jahr: number;\n  Monat: number;\n  KW: number;\n  Datum:string;\n  Indicator:string;\n  timeframe:string;\n  data:any;\n}\n\nexport class StandItem {\n  level: string;\n  levelid: string;\n  Stand:string;\n  Indicator:string;\n  startdate:string;\n  stopdate:string;\n  timeframe:string;\n}\n\nexport class AppDB extends Dexie {\n  public datadb: Table<DataItem, number>;\n  public standdb: Table<StandItem, number>;\n\n  constructor() { \n    super('smeddb');\n    var db = this;\n    db.on(\"versionchange\", function (event) {\n      db.close();        \n    });\n    db.version(11).stores({\n      datadb: 'id++,[level+levelid+Indicator+timeframe+Datum],[level+levelid+Indicator+timeframe],[level+levelid+Indicator+timeframe+Jahr]',\n      standdb: 'id++,[level+levelid+Indicator+timeframe]',\n    }); \n    db.datadb.mapToClass(DataItem); \n    db.standdb.mapToClass(StandItem); \n  }\n\n  \n\n\n}\n\nexport var db = new AppDB();","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { db, StandItem } from './db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DBService {\n\n  constructor(private api: ApiService) { }\n\n  async storestand(Indicator, level, levelid, Stand, mindate, maxdate, resolution) {\n    await db.standdb\n      .where('[level+levelid+Indicator+timeframe]')\n      .equals([level, levelid, Indicator, resolution])\n      .delete();\n    db.standdb.put({\n      'level': level,\n      'levelid': levelid,\n      'Stand': Stand,\n      'Indicator': Indicator,\n      'startdate': mindate,\n      'stopdate': maxdate,\n      'timeframe': resolution\n    });\n  };\n\n  getstand(Indicator, level, levelid, resolution) {\n    return db.standdb\n      .where('[level+levelid+Indicator+timeframe]')\n      .equals([level, levelid, Indicator, resolution]).first();\n  }\n\n  listdata(Indicator, level, levelid, start = \"\", stop = \"\", expand = true, resolution, timeframe = '') {\n    let tosearch = {\n      Indicator: Indicator,\n      level: level,\n      levelid: levelid\n    }\n\n    // Can be implemented later to restrict results\n    if (start !== \"\" && stop !== \"\" && expand == true) {\n      if (timeframe === 'Letztes Jahr') {\n        const lastYear = Number(start.slice(0, 4))\n        return db.datadb.where('[level+levelid+Indicator+timeframe+Jahr]').equals([level, levelid, Indicator, resolution, lastYear]).toArray()\n          .then(data => {\n            return this.api.objectkeystocolumns(data, 'data')\n          });\n      }\n\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe+Datum]')\n        .between([level, levelid, Indicator, resolution, start], [level, levelid, Indicator, resolution, stop])\n        .toArray()\n        .then(data => this.api.objectkeystocolumns(data, 'data'));\n    }\n\n    if (expand == true) {\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray().then(data => this.api.objectkeystocolumns(data, 'data'));\n    }\n\n    if (expand == false) {\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray();\n    };\n  }\n\n  async querydatadates(level, levelid, Indicator, resolution = \"monthly\") {\n    let res = await db.standdb.where('[level+levelid+Indicator+timeframe]').equals([level, levelid, Indicator, resolution]).toArray();\n\n    return res\n  }\n\n  deletewhere(Indicator, level, levelid, resolution = \"monthly\", start = \"\", stop = \"\", timeframe = \"\") {\n    let tosearch = {\n      Indicator: Indicator,\n      level: level,\n      levelid: levelid,\n      timeframe: resolution\n    }\n\n    // Can be implemented later to restrict results\n    if (start !== \"\" && stop !== \"\") {\n      const lastYear = Number(start.slice(0, 4))\n\n      if (timeframe === 'Letztes Jahr') {\n        return db.datadb\n          .where('[level+levelid+Indicator+timeframe+Jahr]').equals(\n            [level, levelid, Indicator, resolution, lastYear]).delete();\n      }\n\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe+Datum]').between(\n          [level, levelid, Indicator, resolution, start],\n          [level, levelid, Indicator, resolution, stop]).delete();\n    }\n    else {\n      return db.datadb\n        .where('[level+levelid+Indicator+timeframe]').equals(\n          [level, levelid, Indicator, resolution]).delete();\n    }\n  }\n\n  adddatabulk(array) {\n    return db.datadb.bulkPut(array);\n  };\n\n  async adddata({ level, levelid, Jahr, Monat, KW, Datum, Indicator, data, KM6Versicherte, BEVSTAND, resolution }) {\n    return await db.datadb\n      .put({\n        Indicator: Indicator,\n        level: level,\n        levelid: levelid,\n        Jahr: Jahr,\n        Monat: Monat,\n        KW: KW,\n        Datum: Datum,\n        data: data,\n        timeframe: resolution\n      });\n  };\n\n  clean() {\n    db.delete();\n    db.open();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { ApiService } from './api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService {\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(\n    private router: Router,\n    private _auth: AuthService,\n    private _api: ApiService\n  ) {\n  }\n  apiurl = this._api.REST_API_SERVER;\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (request.url.includes(this.apiurl) && !request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getToken()}`\n        }\n\n      });\n    }\n    if (request.url.includes(this.apiurl) && request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getRefreshToken()}`\n        }\n\n      });\n    }\n\n\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n\n        // Refresh if token has expired and Userdetails not null\n        if (request.url.includes(this.apiurl) && (this._auth.getUserDetails()[\"email\"].length>0) &&\n          error.status == 401) {\n          this._auth.refreshToken();\n        }\n\n        // Logout on Refresh error\n        if (request.url.includes(this.apiurl) &&  request.url.includes(\"login/refresh\") && error.status == 422) {\n          this.refreshTokenInProgress = false;\n          this._auth.logout();\n          this.router.navigate([\"/\"]);\n        }\n        else {\n          this.refreshTokenInProgress = false;\n        };\n\n        return throwError(error);\n      }\n\n      ))\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'replace'})\nexport class ReplacePipe implements PipeTransform {\n  transform(value: string, strToReplace: string, replacementStr: string): string {\n\n    if(!value || ! strToReplace || ! replacementStr)\n    {\n      return value;\n    }\n\n return value.replace(new RegExp(strToReplace, 'g'), replacementStr);\n  }\n}","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { DBService } from 'src/app/services/dbservice.service';\nimport { DataItem } from 'src/app/services/db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmedAggregationService {\n\n  constructor(private db: DBService, private api:ApiService) { }\n\n// Query Methods\n\n\n\nasync newcombine(array,fieldname){\n  //if (fieldname==\"stats\"){console.log(\"newcombine\",fieldname,array);};\n  let dbarray=[];\n  if (array.length==0){return []};\n  for (let item of array){\n    if (!item[fieldname]){return [];}\n    else {\n    for (let fielditem of item[fieldname]){\n      let topush = new DataItem;\n      topush['level']=item['level'];\n      topush['levelid']=item['levelid'];\n      topush['Jahr']=item['Jahr'];\n      topush['Monat']=item['Monat'];\n      topush['KM6Versicherte']=item['KM6Versicherte'];\n      topush['BEVSTAND']=item['BEVSTAND'];\n      topush['KW']=fielditem['KW'];\n      topush['Datum']=fielditem['Datum']\n      delete fielditem['KW'];\n      topush['data']=fielditem;\n      topush['Indicator']=fieldname;\n      topush['timeframe']=item['timeframe'];\n      dbarray.push(topush);\n    }\n  };\n  }\n  //if (fieldname==\"stats\"){console.log(\"newcombine res\",fieldname,dbarray);};\n  await this.db.adddatabulk(dbarray);\n}\n\nquerysmedts(groupvars=[],outcome=\"\",levelsettings,sort=false,topx:any=false,filtervar=\"\",filtervalues=[],topxvar=\"\"){\n  if (levelsettings[\"zeitraum\"]!==\"Gesamt\") {\n  let query = {\n    \"startdate\": levelsettings['start'].toISOString().slice(0,10),\n    \"stopdate\": levelsettings['end'].toISOString().slice(0,10),\n    \"subgroups\": groupvars    ,\n    \"filterlist\": []\n  }\n  query[\"filterlist\"].push({\"level\":levelsettings['level']});\n  if (levelsettings[\"levelvalues\"]!==\"Gesamt\"){\n    query[\"filterlist\"].push({\"levelid\":levelsettings[\"levelvalues\"]});\n  }\n  if (outcome!=\"\"){\n    query[\"outcome\"]=outcome;\n  }\n  let tofilter = false;\n  if (filtervar!==\"\" && filtervalues.length>0){tofilter=true};\n  return this.api.postTypeRequest('analytics/timeseries/', query).subscribe(\n    data => {\n      let res = data[\"result\"];\n      if (sort){\n        res = this.api.sortArray(res,\"count\",\"descending\");\n      }\n      if (topx && topxvar==''){\n        res = res.slice(0,topx);\n      }\n      if (tofilter){\n        res = this.api.filterArraybyList(res,filtervar,filtervalues);\n      }\n      if (topx && topxvar!==''){\n        let keycounts = {};\n        for (let item of res){\n          if (keycounts[item[topxvar]] && Math.round(item['count'])){\n            keycounts[item[topxvar]]=keycounts[item[topxvar]]+item['count'];\n          }\n          if (!keycounts[item[topxvar]] && Math.round(item['count'])) {\n            keycounts[item[topxvar]]=item['count'];\n          }\n        }\n        let keycountsarray= [];\n        for (let key of Object.keys(keycounts)){\n          keycountsarray.push({\"name\":key,\"count\":keycounts[key]})\n        }\n        let filterlist = this.api.getValues(this.api.sortArray(keycountsarray,'count',\"descending\").slice(0,topx),\"name\");\n        res= this.api.filterArraybyList(res,topxvar,filterlist);\n      }\n      return res;\n\n    },\n    error => {return [];});\n  }\n  else {\n    return [];\n  };\n}\n\n// Aggregation Functions\n\n\nadddate(Array,yearvar,isoweekvar){\n  for (const item of Array){\n    item[\"Datum\"]=this.getDateOfISOWeek(item[isoweekvar],item[yearvar]);\n  }\n  return Array;\n}\n\nadddatemonth(Array,yearvar,monthvar){\n  for (const item of Array){\n    item[\"Datum\"]=new Date(item[yearvar]+\"-\"+item[monthvar]+\"-01\");\n  }\n  return Array;\n}\n\ngetDateOfISOWeek(w, y) {\n  let millisperday = 1000*60*60*24;\n  let yearstart = new Date(y+\"-01-01\");\n  yearstart=new Date(yearstart.getTime()-(yearstart.getDay()-1)*millisperday)\n  let ISOweekStart = new Date(yearstart.getTime()+millisperday*7*(w+1));\n  return ISOweekStart;\n}\n\naggsymptoms(symptomsobject){\n  let inputarray = [];\n  let output = {};\n  let res = [];\n  for (let item of symptomsobject){\n    inputarray=inputarray.concat(item[\"Symptome\"])\n  }\n\n  for (let item of inputarray){\n    if (output[item.name]!==undefined){\n      output[item.name]=output[item.name]+item[\"n\"];\n    }\n    else {\n      output[item.name]=item[\"n\"];\n    }\n  }\n  output[\"Keine Angabe\"]=output[\"\"];\n  delete output[\"\"];\n  for (let thekey in Object.keys(output)){\n    res.push({\"name\":Object.keys(output)[thekey],\"n\":Object.values(output)[thekey]});\n  }\n\n  return this.api.sortArray(res,\"n\",\"descending\");\n\n\n}\n\nupdatestartstop(levelsettings){\n  // Appply date filters\n  let tzoffset = (new Date()).getTimezoneOffset() * 60000;\n  let today = new Date();\n  let startdate = \"2019-04-01\";\n  let enddate = today.getFullYear()+\"-12-31\";\n  if (levelsettings[\"zeitraum\"]==\"Letzte 12 Monate\"){\n    startdate = new Date(today.getFullYear()-1+today.toISOString().slice(4,8)+\"01\").toISOString().slice(0,10);\n    enddate = today.toISOString().slice(0,10)\n  };\n  if (levelsettings[\"zeitraum\"]==\"Aktuelles Jahr\"){\n    startdate = new Date(today.getFullYear()+\"-01-01\").toISOString().slice(0,10);\n    enddate = new Date(today.getFullYear()+\"-12-31\").toISOString().slice(0,10)\n    };\n    if (levelsettings[\"zeitraum\"]==\"Letztes Jahr\"){\n      startdate = new Date(today.getFullYear()-1+\"-01-01\").toISOString().slice(0,10);\n      enddate = new Date(today.getFullYear()-1+\"-12-31\").toISOString().slice(0,10);\n    };\n    let millisperday = 1000*60*60*24;\n    if (levelsettings[\"zeitraum\"]==\"Letzte 4 Wochen\"){\n      enddate = new Date(today.getTime() - today.getDay()*millisperday).toISOString().slice(0,10);\n      startdate = new Date(today.getTime()-((4*7)-1)*millisperday).toISOString().slice(0,10);\n    };\n    if (levelsettings[\"zeitraum\"]==\"Letzte Woche\"){\n      enddate = new Date(today.getTime() - today.getDay()*millisperday).toISOString().slice(0,10);\n      startdate = new Date(today.getTime()-((6))*millisperday).toISOString().slice(0,10);\n    };\n    if (levelsettings[\"zeitraum\"]==\"Detailliert\"){\n      let newstart= (new Date(levelsettings['start_picker'] - tzoffset)).toISOString().slice(0,10);\n      let newstop = (new Date(levelsettings['stop_picker'] - tzoffset)).toISOString().slice(0,10);\n      //console.log(\"Detailliert\",levelsettings['start_picker'],newstart,levelsettings['stop_picker'],newstop);\n      levelsettings[\"start\"]=newstart;\n      levelsettings[\"stop\"]=newstop;\n    }\n    if (levelsettings[\"zeitraum\"]!=\"Detailliert\"){\n      levelsettings[\"start\"]=startdate;\n      levelsettings[\"stop\"]=enddate;\n    }\n    else {\n\n\n    };\n    return levelsettings;\n}\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSliderModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule,\n    MatExpansionModule\n\n\n  ],\n  exports: [\n    MatSidenavModule,\n    MatSliderModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule,\n    MatExpansionModule\n\n\n  ]\n})\nexport class MaterialModule { }\n\n"],"names":["BrowserModule","MaterialModule","AppRoutingModule","AppComponent","BrowserAnimationsModule","StartComponent","PlotlyJS","PlotlyModule","DeLocale","FlexLayoutModule","MapComponent","PlotComponent","TableComponent","BoxComponent","registerLocaleData","locales","LoginComponent","ProfileComponent","FormsModule","ReactiveFormsModule","HttpClientModule","HTTP_INTERCEPTORS","InterceptorService","PrivateComponent","AdminComponent","ReplacePipe","AddUserDialog","UpdateUserDialog","DeleteUserDialog","plotlyjs","AppModule","constructor","plotlyService","setupPlotly","plotly","getPlotly","register","setPlotConfig","locale","i0","bootstrap","provide","useClass","multi","imports","declarations","Renderer2","EventEmitter","L","icon","Marker","chroma","http","renderer","api","ngOnInit","debug","console","log","id","getValues","basemap","data","sortArray","Outcome","resetprops","clickedvalue","binmethod","ngAfterViewInit","initMap","containername","ngOnChanges","changes","selectmap","checkallok","ngOnDestroy","map","Math","round","random","toString","Zoom","center","getcenter","opacity","customlabels","res","length","features","preparedom","divid","document","getElementById","remove","mapcontainer","createElement","setProperty","addClass","appendChild","mymap","mapok","colors","colorscale","cutoffs","cutofflist","thedata","Object","assign","propname","feature","theid","theopacity","basestyle","weight","dashArray","firstload","removed","zoom","e","iconRetinaUrl","iconUrl","shadowUrl","iconDefault","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","prototype","options","theprovider","useprovider","tiles","tileLayer","providers","maxZoom","attribution","attributions","addTo","attributionControl","setPrefix","getContainer","className","geojsonFeature","percent","item","value","filterArray","properties","makecutoffs","bins","makescale","myStyle","thevalue","i","result","thecolor","colorcode","info","control","layers","onAdd","_div","DomUtil","create","update","props","innerHTML","toLocaleString","removeClass","featLayer","geoJSON","style","onEachFeature","layer","on","mouseover","highlightFeature","mouseout","resetFeature","click","zoomToFeature","resetStyle","labels","legend","position","legendtitle","stringwrap","_ldiv","selectarea","target","setStyle","fillOpacity","array","method","minv","min","maxv","max","steps","push","sortedarray","filterNA","sort","a","b","parseFloat","arraylength","groupsize","floor","thebin","Array","apply","Number","call","newclick","fitBounds","getBounds","clicked","emit","scale","primarycolor","set","coords","area","geometry","coordinates","subarea","reduce","pv","cv","donothing","selectors","inputs","nacolor","outputs","decls","vars","consts","template","Validators","UntypedFormGroup","UntypedFormControl","dialogRef","fb","name","buildForm","getUserGroups","addUser","userDataAdd","myRegform","postTypeRequest","subscribe","metaData","getmetadata","getLevelId","filter","varname","levelRights","levelrights","getCustomerLevels","keys","key","includes","cur","levelKeys","level","usergroupoptions","anrede","disabled","required","firstname","lastname","email","roles","dataLevel","password","minLength","patchValue","randomPassword","slice","onNoClick","close","ctx","MAT_DIALOG_DATA","ctx_r13","right_r11","ctx_r17","dataLevel_r15","selected","userGroupOptions","rights","role","userRights","is_admin","group","usergroups","smed_reporting","group_","updateUserRole","type","user","updateuser","updateUserDataLevel","add","validators","pattern","strongPasswordRegx","togglePasswordChange","isPasswordChange","changePassword","changeuserpwd","ctx_r0","auth","router","getUser","getUserDetails","openChangePassword","isChangePassword","closeChangePassword","passwordChangeRequest","isPasswordMatchError","newpwd","oldpwd","logout","window","location","reload","navigate","alert","error","checkPasswordMatch","newpwd_confirm","validatePassword","isPasswordValid","test","showPassword","iconId","passwordField","innerText","deleteAccount","item_r23","ctx_r29","item_r27","_r20","_r18","item_r31","ctx_r34","ctx_r57","ctx_r35","ctx_r65","ctx_r36","ctx_r74","$event","ctx_r84","ctx_r93","ctx_r101","ctx_r40","ctx_r109","ctx_r41","ctx_r117","ctx_r42","ctx_r126","ctx_r135","ctx_r144","ctx_r153","db","csv","smed","levelsettings","summaryinfo","colorsscheme","mapdatafor","mapdata","updatestartstop","currentUser","currentuser","isRKIUser","isRKIKVUser","isExtern","buildLevelValuesForCustomers","externLevelValues","absoluteNumbers","updatemetadata","scroll","setlevel","setTimeout","stats_ts","timetogo","check_portal_online","setInterval","levelvalues","utiltimes","decisions_ttt","decisions_poc","decisions_pocvsttt","timetotreat","NaN","qmCases","metadata","progress","querydatasmed","dometasettings","undefined","sortdata","metadataok","handleklick","plot","event","levelid","subgroups","concat","thefield","now","Date","oldstand","dataage","query","REST_API_SERVER_CLIENTID","parseInt","allpublicfields","dbdaterange","querydatadates","then","getTime","makesmeditems","fielditem","mainsymptoms_ts","deletewhere","updatedb","storestand","toISOString","newcombine","exportascsv","exportToCsv","startdate","enddate","statswdate","listdata","sumArray","sorteddates","pop","symptoms_list","symptoms_list_export","groupbysum","anzahl_symptome","dbutiltimes","ntotal","getweekdayname","makeheatmapdata","standardSort","TTTsmed_text","Anzahl","Anteil","total","createStandardSort","_item","reverse","decisions","replacemissing","text","inPercent","x","y","date1","replace","date2","timediff","counterstring","Tage","Stunden","Minuten","Sekunden","HttpClient","retry","ApiService","httpClient","getTypeRequest","url","get","REST_API_SERVER","pipe","payload","post","getTypeRequestnotimeout","postTypeRequestnotimeout","setting","deleteuser","countView","withCredentials","values","getKeys","objectkeystocolumns","targetData","obj","getOptions","index","self","indexOf","isArray","filterNAArray","isNaN","filterArraybyList","list","JSON","parse","localStorage","getItem","order","getuniqueValues","items","Set","key1","key2","outcome","valueskey1","valueskey2","keyvalues","topush","k2value","dayofweek","mongo","days","splitarraybykey","splitkey","splitvalues","string","maxlength","newstring","wordsarray","split","fulllength","linelength","word","wordlen","xname","yname","valuename","xlabel","ylabel","yitem","xitem","xlab","ylab","replacement","arrayintersect","setA","setB","intersection","has","from","factory","providedIn","DBService","Indicator","Stand","mindate","maxdate","resolution","standdb","where","equals","delete","put","getstand","first","start","stop","expand","timeframe","tosearch","lastYear","datadb","toArray","between","adddatabulk","bulkPut","adddata","Jahr","Monat","KW","Datum","KM6Versicherte","BEVSTAND","clean","open","DataItem","SmedAggregationService","fieldname","dbarray","querysmedts","groupvars","topx","filtervar","filtervalues","topxvar","tofilter","keycounts","keycountsarray","filterlist","adddate","yearvar","isoweekvar","getDateOfISOWeek","adddatemonth","monthvar","w","millisperday","yearstart","getDay","ISOweekStart","aggsymptoms","symptomsobject","inputarray","output","thekey","tzoffset","getTimezoneOffset","today","getFullYear","newstart","newstop"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}