{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/infobox/box/box.component.html","./src/app/components/leafletmap/map/map.component.html","./src/app/components/plotly/plot/plot.component.html","./src/app/components/table/table/table.component.html","./src/app/pages/admin/admin.component.html","./src/app/pages/login/login.component.html","./src/app/pages/private/private.component.html","./src/app/pages/profile/profile.component.html","./src/app/pages/start/start.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/infobox/box/box.component.scss","./src/app/components/infobox/box/box.component.ts","./src/app/components/leafletmap/map/map.component.scss","./src/app/components/leafletmap/map/map.component.ts","./src/app/components/plotly/plot/plot.component.scss","./src/app/components/plotly/plot/plot.component.ts","./src/app/components/table/table/table.component.scss","./src/app/components/table/table/table.component.ts","./src/app/pages/admin/admin.component.scss","./src/app/pages/admin/admin.component.ts","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/private/private.component.scss","./src/app/pages/private/private.component.ts","./src/app/pages/profile/profile.component.scss","./src/app/pages/profile/profile.component.ts","./src/app/pages/start/start.component.scss","./src/app/pages/start/start.component.ts","./src/app/services/api.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/interceptor-service.service.ts","./src/app/services/replace_pipe.ts","./src/app/services/smed-aggregation.service.ts","./src/environments/environment.ts","./src/main.ts","./src/material/material.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-sidenav-container autosize=\\\"true\\\" scrollable=\\\"false\\\">\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"transparent\\\">\\n      <button (click)=\\\"drawer.toggle()\\\" mat-icon-button class=\\\"example-icon\\\"\\n        aria-label=\\\"Example icon-button with menu icon\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <!-- <span>{{this.title}}</span> -->\\n      <span class=\\\"example-spacer\\\"></span>\\n      <div fxShow=\\\"true\\\" fxHide.lt-sm=\\\"true\\\">  \\n       <img src=\\\"./assets/branding/logo_project.png\\\"\\n      class=\\\"brandinglogo\\\" >\\n      <a href=\\\"https://www.zi.de\\\">\\n        <img src=\\\"https://ziwebstorage.blob.core.windows.net/appradar/assets/logo_zi_small_transparent.png\\\"\\n          class=\\\"brandinglogo\\\">       \\n      </a>\\n      </div>\\n      <div fxShow=\\\"false\\\" fxShow.lt-sm=\\\"true\\\">  \\n<!--          <img  src=\\\"./assets/branding/logo_project.png\\\"\\n        class=\\\"brandinglogotiny\\\" >  -->\\n        <a href=\\\"https://www.zi.de\\\">\\n          <img src=\\\"https://ziwebstorage.blob.core.windows.net/appradar/assets/logo_zi_small_transparent.png\\\"\\n            class=\\\"brandinglogotiny\\\">       \\n        </a>\\n        </div>\\n    </mat-toolbar>\\n    <main>\\n      <section class=\\\"mat-typography\\\">\\n        <mat-drawer-container autosize>\\n          <mat-drawer #drawer mode=\\\"push\\\" position=\\\"start\\\" autoFocus=\\\"false\\\">\\n            <div class=\\\"menucontainer\\\">\\n\\n              <ng-container>\\n                <p class=\\\"primarycolor\\\"><strong>Navigation</strong></p>\\n              </ng-container>\\n\\n\\n\\n              <div>\\n\\n                <a mat-icon-button (click)=\\\"drawer.toggle()\\\" routerLink=\\\"/\\\">\\n                  <mat-icon class=\\\"icon\\\">home</mat-icon>\\n                  <span>Startseite</span>\\n                </a>\\n\\n              </div>\\n              <div *ngIf=\\\"this.loginoption && !this.loginstatus\\\" >\\n\\n                <a mat-icon-button (click)=\\\"drawer.toggle()\\\" routerLink=\\\"/login\\\">\\n                  <mat-icon class=\\\"icon\\\">login</mat-icon>\\n                  <span>Anmelden</span>\\n                </a>\\n\\n              </div>\\n<!--               <div *ngIf=\\\"this.loginstatus\\\">\\n\\n                <a mat-icon-button (click)=\\\"drawer.toggle();\\\" routerLink=\\\"/private\\\">\\n                  <mat-icon class=\\\"icon\\\">lock_open</mat-icon>\\n                  <span>Interne Tools</span>\\n                </a>\\n\\n              </div> -->\\n              <div *ngIf=\\\"this.loginstatus\\\">\\n\\n                <a mat-icon-button (click)=\\\"drawer.toggle();\\\" routerLink=\\\"/profile\\\">\\n                  <mat-icon class=\\\"icon\\\">account_box</mat-icon>\\n                  <span>Benutzerprofil</span>\\n                </a>\\n\\n              </div>\\n              <div *ngIf=\\\"this.adminstatus\\\">\\n\\n                <a mat-icon-button (click)=\\\"drawer.toggle();\\\" routerLink=\\\"/admin\\\">\\n                  <mat-icon class=\\\"icon\\\">admin_panel_settings</mat-icon>\\n                  <span>Administration</span>\\n                </a>\\n\\n              </div>\\n              \\n              <div *ngIf=\\\"this.loginstatus\\\">\\n\\n                <a mat-icon-button (click)=\\\"drawer.toggle();logout();\\\" href=\\\"./\\\">\\n                  <mat-icon class=\\\"icon\\\">logout</mat-icon>\\n                  <span>Ausloggen</span>\\n                </a>\\n\\n              </div>\\n\\n\\n            </div>\\n          </mat-drawer>\\n          <mat-drawer-content>\\n            <!-- Offline message-->\\n            <div class=\\\"offlinemsg\\\" *ngIf=\\\"false\\\"><strong>Keine Internetverbindung</strong><br>Dieses Portal benötigt\\n              eine aktive Internetverbindung.</div>\\n            <router-outlet></router-outlet>\\n          </mat-drawer-content>\\n        </mat-drawer-container>\\n      </section>\\n    </main>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\\n<!-- Footer nur für Desktop Screen -->\\n<footer >\\n  <div class=\\\"footerstyle\\\">\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"0.5rem\\\">\\n\\n      <div fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"space-around start\\\">\\n        <div fxflex=28 fxHide.xs>\\n          <p>\\n            <mat-list style=\\\"color:white;\\\">\\n              <mat-list-item>\\n                <p style=\\\"color:white;\\\"><strong>Navigation</strong></p>\\n              </mat-list-item>\\n              <mat-list-item><a style=\\\"color:white;\\\" href=\\\"https://www.zi.de/meta/impressum\\\">Impressum</a>\\n              </mat-list-item>\\n              <mat-list-item><a style=\\\"color:white;\\\"\\n                  href=\\\"https://www.zi.de/footer/datenschutzhinweis\\\">Datenschutzhinweise</a></mat-list-item>\\n            </mat-list>\\n\\n          </p>\\n\\n        </div>\\n\\n        <div fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between end\\\">\\n          <div fxFlex>\\n            <br>\\n          </div>\\n          <div style=\\\"padding:0.5rem;text-align: center;\\\">\\n            <p>© {{this.currentdate | date:'Y'}} Zentralinstitut für die kassenärztliche Versorgung in der Bundesrepublik\\n              Deutschland</p>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n</footer>\";","export default \"<mat-card [style.background-color]=\\\"this.itemcolor\\\">\\n    <div fxLayout=\\\"row\\\">\\n    <div fxFlex>\\n    <h1 *ngIf=\\\"!this.textbehind\\\">{{this.title}}{{this.value |  number: this.numberformat}}</h1>\\n    <h1 *ngIf=\\\"this.textbehind\\\">{{this.value |  number: this.numberformat}} {{this.title}}</h1>\\n    <p><span>{{this.description}}</span> </p>\\n    </div>\\n    <div fxFlex *ngIf=\\\"this.maticon\\\">\\n        <span class=\\\"mat-headline\\\"><mat-icon inline=true >{{this.maticon}}</mat-icon></span>\\n    </div>\\n    </div>\\n</mat-card>\\n\";","export default \"<ng-container *ngIf=\\\"!(this.basemap)\\\">\\n  <mat-spinner color=\\\"primary\\\"></mat-spinner>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"(this.basemap)\\\">\\n<div  class=\\\"map-container\\\">\\n    <div id=\\\"map-frame\\\" class=\\\"map-frame\\\">\\n      \\n    </div>    \\n    <mat-spinner *ngIf=\\\"!this.mapok\\\" color=\\\"primary\\\"></mat-spinner>\\n  </div>\\n</ng-container>\\n\";","export default \"\\n<ng-container *ngIf=\\\"!(this.plotdata && this.mainconfig && this.plotlayout)\\\">\\n    <mat-spinner color=\\\"primary\\\"></mat-spinner>\\n</ng-container>\\n<ng-container *ngIf=\\\"this.plotdata && this.mainconfig && this.plotlayout\\\">\\n    \\n<plotly-plot class=\\\"plotlydiv\\\"\\n[data]=\\\"this.plotdata\\\" [divId]=\\\"this.divid\\\" [debug]=\\\"true\\\"\\n[layout]=\\\"this.plotlayout\\\" [config]=\\\"this.mainconfig\\\"\\n[useResizeHandler]=\\\"true\\\" [style]=\\\"{position: 'relative', width: '100%', height: '100%'}\\\"\\n></plotly-plot>  \\n\\n</ng-container>\\n\\n\";","export default \"<ng-container *ngIf=\\\"this.addfilter\\\">\\n  <mat-form-field appearance=\\\"outline\\\" >\\n    <mat-label>Suche</mat-label>\\n    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Suche...\\\" #input>\\n  </mat-form-field>\\n</ng-container>\\n\\n<mat-table [(dataSource)]=\\\"this.datasource\\\" matSort class=\\\"mat-elevation-z0\\\">\\n\\n <ng-container *ngFor=\\\"let thecol of displayedColumns\\\">\\n  <ng-container [matColumnDef]=\\\"thecol\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{thecol}} </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> \\n      <span *ngIf=\\\"this.outcomes_rate.indexOf(thecol)>=0\\\">{{element[thecol] | percent }}</span>\\n      <span *ngIf=\\\"this.outcomes_numeric.indexOf(thecol)>=0\\\">{{element[thecol] | number }}</span>\\n      <span *ngIf=\\\"(this.outcomes_rate.indexOf(thecol)<0) && (this.outcomes_numeric.indexOf(thecol)<0)\\\">{{element[thecol]}}</span>\\n    </mat-cell >\\n  </ng-container>\\n</ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n<mat-paginator [pageSizeOptions]=\\\"this.pagesizes\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"1rem\\\">\\n    <h1 ngClass.lt-sm=\\\"mobileheading\\\">Administration</h1>\\n    <p *ngIf=\\\"this.backenddoc && this.appversion\\\" class=\\\"mat-caption greycolor\\\"> Frontend Version: {{this.appversion}}, Backend Version: {{this.backenddoc['info']['version']}}</p>\\n    <div *ngIf=\\\"!this.adduser && !this.adddata\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"1rem\\\"\\n        fxLayoutAlign=\\\"start space-between\\\">\\n        <div fxFlex=100>\\n            <h2>Administrationsaufgaben</h2>\\n            <p class=\\\"mat-caption greycolor\\\">In diesem Bereich können Dashboard Administratoren (\\\"Admin\\\") und \\n                Zi-Administratoren (\\\"Superadmin\\\") Daten oder Nutzer*innen hinzufügen.</p>\\n        </div>\\n        <div>\\n            <button mat-raised-button (click)=\\\"this.adduser=!this.adduser\\\" color=\\\"primary\\\">Nutzer hinzufügen</button>\\n        </div>\\n        <div fxShow.lt-md=false>\\n            <button mat-raised-button (click)=\\\"this.adddata=!this.adddata\\\" color=\\\"primary\\\">Daten</button>\\n        </div>\\n\\n    </div>\\n    <div fxShow=false fxShow.lt-md=true>\\n        <h4>Hinweis:</h4>\\n        <p>Daten und Metadaten können nur auf großen Bildschirmen bearbeitet werden.</p>\\n    </div>\\n\\n    <div *ngIf=\\\"!this.adduser && !this.adddata\\\">\\n        <h2>Nutzerliste</h2>\\n        <p class=\\\"mat-caption greycolor\\\">In diesem Bereich können Nutzerberechtigungen geändert werden.</p>\\n        <mat-list>\\n            <ng-container *ngFor=\\\"let user of this.users\\\">\\n                <mat-list-item>\\n                    <mat-icon color=\\\"primary\\\" fxHide.lt-md=true *ngIf=\\\"user['roles'].indexOf('superadmin')>=0\\\"\\n                        mat-list-icon>admin_panel_settings\\n                    </mat-icon>\\n                    <mat-icon fxHide.lt-md=true *ngIf=\\\"user['roles'].indexOf('superadmin')<0\\\" mat-list-icon>\\n                        account_circle</mat-icon>\\n                    <div mat-line><strong>{{!user.lastname? 'k.A.': user.anrede+\\\" \\\"+user.lastname }} </strong>\\n                        ({{user.email\\n                        }})\\n                        <a *ngIf=\\\"this.currentuser['is_superadmin']\\\" (click)=\\\"user.stammdaten=!user.stammdaten\\\"> ></a>\\n                    </div>\\n                    <div mat-line>\\n                        <mat-chip-list *ngIf=\\\"!user.stammdaten\\\">\\n                            <mat-chip color=\\\"primary\\\" (click)=\\\"this.updateuser(user.email,'user',!user['is_user'])\\\"\\n                                [selected]=\\\"user['is_user']\\\">User</mat-chip>\\n                            <mat-chip color=\\\"primary\\\" (click)=\\\"this.updateuser(user.email,'admin',!user['is_admin'])\\\"\\n                                [selected]=\\\"user['is_admin']\\\">Admin</mat-chip>\\n                            <mat-chip color=\\\"primary\\\"\\n                                (click)=\\\"this.updateuser(user.email,'superadmin',!user['is_superadmin'])\\\"\\n                                [selected]=\\\"user['is_superadmin']\\\">Superadmin</mat-chip>\\n                        </mat-chip-list>\\n                        <div *ngIf=\\\"user.stammdaten\\\" mat-line>\\n                            <span style=\\\"color: lightgray;\\\">Nur für Admins</span>\\n                            <mat-chip-list class=\\\"add-margin\\\" *ngIf=\\\"user.stammdaten\\\">\\n                                <mat-chip *ngIf=\\\"!user.chpwd\\\" color=\\\"primary\\\" (click)=\\\"this.deletuser(user.email)\\\"\\n                                    selected>löschen</mat-chip>\\n                                <mat-chip *ngIf=\\\"!user.chpwd\\\" color=\\\"accent\\\"\\n                                    (click)=\\\"user.chpwd=!user.chpwd;user.rndpwd=this.rndpwd();\\\" selected>password\\n                                    zurücksetzen</mat-chip>\\n                                <div class=\\\"add-margin\\\" *ngIf=\\\"user.chpwd\\\">\\n                                    <p>Neues Password:</p>\\n                                    <p><strong>{{user.rndpwd}}</strong> <a class=\\\"add-margin\\\"\\n                                            (click)=\\\"this.copy(user.rndpwd)\\\">\\n                                            <mat-icon>content_copy</mat-icon>\\n                                        </a></p>\\n                                    <p>\\n                                        <mat-chip color=\\\"accent\\\" (click)=\\\"user.chpwd=!user.chpwd;\\\" selected>abbrechen\\n                                        </mat-chip>&nbsp;&nbsp;<mat-chip color=\\\"primary\\\"\\n                                            (click)=\\\"chpwd(user.email,user.rndpwd)\\\" selected>passwort setzen</mat-chip>\\n                                    </p>\\n                                </div>\\n                            </mat-chip-list>\\n                        </div>\\n                        <div mat-line></div>\\n                        <div fxHide.gt-sm=true mat-line></div>\\n                    </div>\\n                </mat-list-item>\\n            </ng-container>\\n        </mat-list>\\n    </div>\\n\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"this.adduser\\\">\\n\\n\\n        <div fxFlex=100>\\n            <h2><strong>Nutzer hinzufügen</strong></h2>\\n            <mat-card>\\n                <form autocomplete=\\\"on\\\" [formGroup]=\\\"myRegform\\\">\\n                    <h2><strong>Informationen</strong></h2>\\n                    <h4><strong>Name</strong>:</h4>\\n                    <mat-form-field appearance=\\\"fill\\\" class=\\\"full-width\\\">\\n                        <mat-label>Anrede</mat-label>\\n                        <mat-select name=\\\"anredefeld\\\" formControlName=\\\"anrede\\\" required>\\n                            <mat-option value=\\\"Herr\\\">Herr</mat-option><br>\\n                            <mat-option value=\\\"Frau\\\">Frau</mat-option><br>\\n                            <mat-option value=\\\"Frau Dr.\\\">Frau Dr.</mat-option><br>\\n                            <mat-option value=\\\"Herr Dr.\\\">Herr Dr.</mat-option><br>\\n                            <mat-option value=\\\"Dr.\\\">Dr.</mat-option><br>\\n                            <mat-option value=\\\" \\\">Kein Anrede</mat-option><br>\\n                        </mat-select>\\n                        <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance=\\\"fill\\\" class=\\\"full-width\\\" required>\\n                        <mat-label>Vorname</mat-label>\\n                        <input matInput placeholder=\\\"First name\\\" name=\\\"fname\\\" formControlName=\\\"firstname\\\">\\n                        <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance=\\\"fill\\\" class=\\\"full-width\\\" required>\\n                        <mat-label>Nachname</mat-label>\\n                        <input matInput placeholder=\\\"Last Name\\\" name=\\\"lname\\\" formControlName=\\\"lastname\\\">\\n                        <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\\n                    </mat-form-field>\\n                    <h4>Initiales <strong>Passwort</strong>:</h4>\\n                    <mat-form-field appearance=\\\"fill\\\" class=\\\"full-width\\\">\\n                        <mat-label>Passwort</mat-label>\\n                        <mat-error>Passwort zu kurz</mat-error>\\n                        <input matInput type=\\\"string\\\" formControlName=\\\"password\\\" required>\\n                        <mat-hint>Bitte kopieren Sie das Passwort</mat-hint>\\n                        <mat-hint *ngIf=\\\"this.myRegform.value.password.length<12\\\">Ihr Passwort (mindestens 12 Zeichen).\\n                        </mat-hint>\\n                    </mat-form-field>\\n                    <br><br><br>\\n                    <h4><strong>E-Mail</strong> des neuen Nutzers</h4>\\n                    <mat-form-field appearance=\\\"fill\\\" class=\\\"full-width\\\">\\n                        <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n                        <mat-icon matSuffix>email</mat-icon>\\n                        <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\\n                    </mat-form-field>\\n                </form>\\n            </mat-card>\\n\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxFlex=20><button [disabled]=\\\"this.myRegform.value.password.length<12\\\" mat-raised-button\\n                    (click)=\\\"this.addusernow();\\\" color=\\\"accent\\\">Hinzufügen</button></div>\\n            <div fxFlex=20><button mat-raised-button (click)=\\\"this.adduser=!this.adduser;\\\"\\n                    color=\\\"primary\\\">Abbrechen</button></div>\\n        </div>\\n\\n    </div>\\n    <div *ngIf=\\\"this.adddata\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxShow.lt-md=false>\\n        <h2><strong>Daten hinzufügen</strong></h2>\\n        <p>Mehr Informationen <a href=\\\"./assets/docs/Upload_Dateien.html\\\">hier</a></p>\\n        <mat-card>\\n            <div>\\n                <h3><strong>Was soll hochgeladen werden?</strong></h3>\\n                <mat-radio-group [(ngModel)]=\\\"this.dataintend\\\">\\n                    <mat-radio-button value=\\\"dataupload\\\">Daten hinzufügen&nbsp;&nbsp;</mat-radio-button>\\n                    <mat-radio-button *ngIf=\\\"this.areavalues\\\" value=\\\"geodataupload\\\">Geodaten hinzufügen&nbsp;\\n                    </mat-radio-button>\\n                </mat-radio-group>\\n                <br><br>\\n            </div>\\n            <div *ngIf=\\\"this.dataintend=='geodataupload'\\\" fxLayout=\\\"column\\\">\\n                <div fxFlex=100>\\n                    <h3><strong>1. GEOJSON Datei hochladen</strong> <span *ngIf=\\\"this.geojsonfile\\\">\\n                            <mat-icon color=\\\"primary\\\">check_circle</mat-icon>\\n                        </span></h3>\\n                </div>\\n                <div *ngIf=\\\"!this.geojsonfile\\\" fxFlex.lt-md=100 fxFlex=50 fxLayout=\\\"column\\\">\\n                    <div fxFlex=100>\\n                        <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"true\\\">\\n                            <mat-label>Gebiet für Geodatendatei festlegen</mat-label>\\n                            <mat-select [(value)]=\\\"this.uploadarea\\\">\\n                                <mat-option *ngFor=\\\"let option of this.areavalues\\\" [value]=\\\"option\\\">{{option}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n\\n                    </div>\\n                    <div fxFlex=100>\\n                        <input type=\\\"file\\\" accept='.geojson' style=\\\"display: none\\\"\\n                            (change)=\\\"this.changeListenerGEOJSON($event);\\\" #dataInput>\\n                        <br><br>\\n                        <button [disabled]=\\\"!this.uploadarea\\\" mat-raised-button color=\\\"primary\\\"\\n                            (click)=\\\"dataInput.click()\\\">Daten\\n                            Auswählen</button>\\n                    </div>\\n                   \\n                </div>\\n                <div *ngIf=\\\"this.geojsonfile\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n                    <div fxFlex=100>\\n                        <h3><strong>2. GEOJSON beschreiben</strong> <span *ngIf=\\\"this.geodatafile\\\">\\n                                <mat-icon color=\\\"primary\\\">check_circle</mat-icon>\\n                            </span></h3>                            \\n                    </div>\\n                    <div fxFlex=100>\\n                        <p>Die Datei hat {{this.geojsonfile['features'].length | number}} Regionen.</p>\\n                        <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"true\\\">\\n                            <mat-label>Wie lautet die Bezeichnung Regionen im geojson?</mat-label>\\n                            <mat-select [(value)]=\\\"this.uploadareaid\\\">\\n                                <mat-option *ngFor=\\\"let option of this.areafeatures\\\" [value]=\\\"option\\\">{{option}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"this.dataintend=='dataupload'\\\">\\n\\n                <h3><strong>1. CSV Datei hochladen</strong> <span *ngIf=\\\"this.datafile\\\">\\n                        <mat-icon color=\\\"primary\\\">check_circle</mat-icon>\\n                    </span></h3>\\n\\n                <div *ngIf=\\\"!this.datafile\\\" fxFlex.lt-md=100 fxFlex=50>\\n\\n                    <input type=\\\"file\\\" accept='.csv' style=\\\"display: none\\\"\\n                        (change)=\\\"this.datafile=this.changeListener($event);\\\" #dataInput>\\n                    <br><br>\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"dataInput.click()\\\">Daten\\n                        Auswählen</button>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <mat-card *ngIf=\\\"this.metadatafile && this.dataintend=='dataupload'\\\">\\n            <div>\\n\\n                <h3><strong>2. Daten beschreiben</strong><span *ngIf=\\\"this.metadone\\\">\\n                        <mat-icon color=\\\"primary\\\">check_circle</mat-icon>\\n                    </span></h3>\\n                <p>Bitte prüfen Sie die initinale Zuordnung sorgfältig. Jeder Upload muss mindestens zwei Variablen vom\\n                    Bereich \\\"ordering\\\" enthalten\\n                    (Typen: level,levelid). Ebenso sollten alle Subgruppenvariablen vom Typ Gruppe sein. Jede Variable\\n                    aus den Bereichen \\\"ordering\\\" oder \\\"sungroups\\\" muss Angaben zur Referenzkategorie machen.\\n                    Zellen für diese Kategorie müssen auch in der Tabelle zu finden sein. Die Variablen aus den\\n                    Bereichen Outcomes oder\\n                    Demography sollten vom Typ 'rate' oder 'number' sein. Das Hinzufügen einer Indikatorenbeschreibung\\n                    ist optional.</p>\\n            </div>\\n            <div *ngIf=\\\"(this.datacheck.length>0)\\\">\\n                <mat-list>\\n                    <h3 matSubheader><strong>Gefundene Fehler:</strong></h3>\\n                    <mat-list-item *ngFor=\\\"let hinweis of this.datacheck\\\">\\n                        <mat-icon color=\\\"primary\\\" mat-list-icon>error</mat-icon>\\n                        <div mat-line><span class=\\\"primarycolor\\\">{{hinweis}}</span></div>\\n                    </mat-list-item>\\n                </mat-list>\\n            </div>\\n            <div class=\\\"smalltab\\\" *ngIf=\\\"this.metadatafile && !this.metadone\\\" fxflex=100>\\n\\n                <div class=\\\"tabheader\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\n                    <div fxFlex=15>Name</div>\\n                    <div fxFlex=20>Thema</div>\\n                    <div fxFlex=20>Typ</div>\\n                    <div fxFlex>Referenzkategorie</div>\\n                    <div fxFlex=15></div>\\n\\n                </div>\\n\\n                <div class=\\\"tabvalues primarycolor\\\" *ngFor=\\\"let row of this.metadatafile\\\" fxLayout=\\\"row wrap\\\"\\n                    fxLayoutGap=\\\"10px\\\">\\n                    <div fxFlex=15><br>{{row.varname}}</div>\\n                    <div fxFlex=20>\\n                        <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"true\\\">\\n                            <mat-label>Bereich</mat-label>\\n                            <mat-select [(value)]=\\\"row.topic\\\" (selectionChange)=\\\"this.checkmetadata()\\\">\\n                                <mat-option *ngFor=\\\"let option of this.topicoptions\\\" [value]=\\\"option\\\">{{option}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex=20>\\n                        <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"true\\\">\\n                            <mat-label>Art</mat-label>\\n                            <mat-select [(value)]=\\\"row.type\\\" (selectionChange)=\\\"this.checkmetadata()\\\">\\n                                <mat-option *ngFor=\\\"let option of this.typeoptions\\\" [value]=\\\"option\\\">{{option}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex>\\n                        <ng-container *ngIf=\\\"['ordering','subgroups'].indexOf(row.topic)>=0\\\">\\n                            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"true\\\">\\n                                <mat-label>Referenzkategorie</mat-label>\\n                                <mat-select [(value)]=\\\"row.allforlevel\\\" (selectionChange)=\\\"this.checkmetadata()\\\">\\n                                    <mat-option *ngFor=\\\"let option of this.getrefvalues(row.varname)\\\" [value]=\\\"option\\\">\\n                                        {{option}}</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"row.type=='level'\\\">\\n                                <mat-label>Öffentliche Raumebenen</mat-label>\\n                                <mat-select [(value)]=\\\"row.publiclevels\\\" (selectionChange)=\\\"this.checkmetadata()\\\" multiple>\\n                                    <mat-option *ngFor=\\\"let option of this.getrefvalues(row.varname)\\\" [value]=\\\"option\\\">\\n                                        {{option}}</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"['ordering','subgroups'].indexOf(row.topic)<0\\\">\\n\\n                        </ng-container>\\n\\n                    </div>\\n                    <div fxFlex=15>\\n                        <mat-chip-list>\\n                            <mat-chip color=\\\"primary\\\" (change)=\\\"this.checkmetadata()\\\" [selected]=\\\"row.public\\\"\\n                                (click)=\\\"row.public=!row.public\\\">\\n                                <span *ngIf=\\\"row.public\\\">Öffentlich</span>\\n                                <span *ngIf=\\\"!row.public\\\">Privat</span>\\n                            </mat-chip>\\n                            <mat-chip color=\\\"primary\\\" [selected]=\\\"row.adddescr\\\" (click)=\\\"row.adddescr=!row.adddescr\\\">\\n                                Beschreibung\\n                            </mat-chip>\\n                        </mat-chip-list>\\n                    </div>\\n                    <div *ngIf=\\\"row.adddescr\\\" fxFlex=100>\\n                        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\n                            <mat-label>Indikatorenbeschreibung</mat-label>\\n                            <textarea style=\\\"color:black\\\" [(ngModel)]=\\\"row.description\\\" matInput rows=\\\"10\\\"\\n                                cols=\\\"40\\\"></textarea>\\n                        </mat-form-field>\\n\\n                    </div>\\n                </div>\\n                <div>\\n                    <div><button mat-raised-button [disabled]=\\\"!(this.datacheck.length==0)\\\" (click)=\\\"this.metadone=true\\\"\\n                            color=\\\"accent\\\">Beschreibung\\n                            Fertig</button></div>\\n\\n                </div>\\n\\n            </div>\\n        </mat-card>\\n\\n        <div *ngIf=\\\"this.metadone\\\">\\n            <mat-card>\\n                <h3><strong>3. Sollen die aktuellen Daten überschrieben werden?</strong></h3>\\n                <p>\\n                    <mat-slide-toggle [(ngModel)]=\\\"this.replacedata\\\"></mat-slide-toggle>\\n                    <span style=\\\"color:crimson;\\\" *ngIf=\\\"this.replacedata\\\">überschreiben</span>\\n                    <span *ngIf=\\\"!this.replacedata\\\">nicht überschreiben.</span>\\n\\n                </p>\\n                <p *ngIf=\\\"!this.replacedata\\\"><em>Achtung: Das Ergänzen der Daten ist aufwändig und erfordert ggf. viel\\n                        Zeit. Bitte ergänzen Sie nur kleine Datenkörper!</em></p>\\n            </mat-card>\\n        </div>\\n\\n\\n\\n        <div class=\\\"add-margin\\\" fxLayoutAlign=\\\"space-between\\\" \\n        *ngIf=\\\"(!this.uploadres || this.uploadres=='error')\\\">\\n            <div><button mat-raised-button (click)=\\\"uploadnewdata()\\\" [disabled]=\\\"(!this.metadone) && (!this.uploadareaid)\\\"\\n                    color=\\\"accent\\\">Hinzufügen\\n\\n                </button></div>\\n            <div><button mat-raised-button (click)=\\\"this.resetall();\\\" color=\\\"primary\\\">Abbrechen</button></div>\\n        </div>\\n        <div *ngIf=\\\"this.uploadres\\\">\\n            <mat-card>\\n                <h1>Datenupload</h1>\\n                <mat-spinner *ngIf=\\\"this.uploadres=='pending'\\\" [diameter]=\\\"50\\\"></mat-spinner>\\n                <p *ngIf=\\\"this.uploadres=='pending'\\\">Hinweis: Bitte haben Sie Geduld: Es kann etwas dauern wenn viele\\n                    Daten aktualisiert oder gelöscht werden müssen.</p>\\n                <p *ngIf=\\\"this.uploadres=='success'\\\">\\n                    <strong>Upload erfolgreich!</strong>\\n                </p>\\n                <p *ngIf=\\\"this.uploadres=='error'\\\">\\n                    <strong>Fehler beim Upload</strong> Fehlermeldung: <span\\n                        class=\\\"primarycolor\\\">{{this.uploaderror}}</span>\\n                </p>\\n            </mat-card>\\n        </div>\\n    </div>\\n   \\n</div>\";","export default \"<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"1rem\\\">\\n    <div fxFlex=100 style=\\\"max-width: 500px;\\\" *ngIf=\\\"!this.loggedin\\\">\\n        <mat-card>\\n            <form  [formGroup]='form' (ngSubmit)='login()'>\\n                <h1>Login</h1>\\n                <mat-form-field appearance=\\\"fill\\\" class=\\\"full-width\\\">\\n                    <mat-label>E-Mail</mat-label>\\n                    <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" formControlName='username' autocomplete=\\\"false\\\" required>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\" class=\\\"full-width\\\">\\n                    <mat-label>Kennwort</mat-label>\\n                    <input matInput type=\\\"password\\\" name=\\\"current-password\\\" formControlName='password' required autocomplete=\\\"false\\\">\\n                </mat-form-field>\\n                <div *ngIf=\\\"!this.login_pending\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"1rem\\\" fxLayoutAlign=\\\"space-between\\\">\\n                    <div>\\n                        <button mat-raised-button color=\\\"primary\\\" type='submit' [disabled]='!this.form.valid' >\\n                            Login\\n                        </button>\\n                    </div>\\n                    <div>\\n                        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"logout()\\\">\\n                            Abbrechen\\n                        </button>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"this.login_pending\\\">\\n                    ... in Bearbeitung ... \\n                </div>\\n                <div *ngIf=\\\"this.loginerror\\\">\\n                    <p style=\\\"color:crimson;\\\">Falscher Benutzername/Falsches Kennwort</p>\\n                </div>\\n            </form>\\n        </mat-card>\\n    </div>\\n\\n    <div *ngIf=\\\"this.loggedin\\\">\\n        You're in!\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"logout()\\\">\\n            Ausloggen\\n        </button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"30px\\\">\\n    <div>\\n        <h1 ngClass.lt-sm=\\\"mobileheading\\\">Interne Tools</h1>\\n        <mat-chip-list>\\n            <mat-chip *ngFor=\\\"let action of this.actions\\\" color=\\\"primary\\\" [selected]=\\\"this.action==this.intend\\\"\\n                (click)=\\\"this.intend=action\\\">{{action}}</mat-chip>\\n        </mat-chip-list>\\n    </div>\\n    <div *ngIf=\\\"this.intend=='Regionen beschreiben'\\\">\\n        <div>\\n            <mat-chip-list>\\n                <ng-container *ngFor=\\\"let item of this.levelvalues\\\">\\n                    <mat-chip (click)=\\\"this.newlevel(item)\\\" [selected]=\\\"this.currentlevel==item\\\" color=\\\"primary\\\">\\n                        {{item}}\\n                    </mat-chip>\\n                </ng-container>\\n            </mat-chip-list>\\n        </div>\\n        <div *ngIf=\\\"this.mapdata\\\" fxLayoutGap=\\\"15px\\\">\\n            <div class=\\\"add-margin\\\">\\n                <h3 *ngIf=\\\"!this.currentregion\\\">Bitte wählen Sie eine Region</h3>\\n            </div>\\n            <div>\\n                <app-map [containername]=\\\"'mapdiv'\\\" [basemap]=\\\"this.mapdata\\\" [id]=\\\"this.levelid\\\" opacity=.8 Zoom=10\\n                    selectmap=\\\"true\\\" (clicked)=\\\"changeregion($event)\\\"></app-map>\\n            </div>\\n            <div *ngIf=\\\"this.regiondata && this.overalldata\\\">\\n                <div class=\\\"add-margin\\\">\\n                    <h1 *ngIf=\\\"this.currentregion\\\">{{this.currentregion}}</h1>\\n                </div>\\n                <h2>Sozialindikatoren</h2>\\n                <div class=\\\"add-margin\\\" class=\\\"greycolor\\\">\\n                    <div class=\\\"add-margin\\\" fxFlexAlign=\\\"start\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\n                        <div fxFlex=60>Merkmal</div>\\n                        <div fxFlex fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n                            <div fxFlex=50 fxFlexAlign=\\\"start start\\\">\\n                                Ausprägung\\n                            </div>\\n                            <div fxFlex>\\n                                Vergleich mit Durchschnitt\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"add-margin\\\">\\n                    <ng-container *ngFor=\\\"let item of this.metadata\\\">\\n                        <div *ngIf=\\\"item.topic=='demography'\\\" fxFlexAlign=\\\"start\\\" fxLayout=\\\"row wrap\\\"\\n                            fxLayoutGap=\\\"10px\\\">\\n                            <div fxFlex=60><strong>{{item.varname  | replace : '[_]' : '.'}}</strong></div>\\n                            <div fxFlex fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n                                <div fxFlex=50 fxFlexAlign=\\\"start start\\\">\\n                                    <span class=\\\"primarycolor\\\" *ngIf=\\\"item.type=='rate'\\\">{{this.regiondata[item.varname]\\n                                        | percent }}</span>\\n                                    <span class=\\\"primarycolor\\\"\\n                                        *ngIf=\\\"item.type!=='rate'\\\">{{this.regiondata[item.varname] | number }}</span>\\n                                </div>\\n                                <div fxFlex>\\n                                    <span class=\\\"accentcolor\\\"\\n                                        *ngIf=\\\"this.regiondata[item.varname]<((1/1.5)*this.overalldata[item.varname])\\\">\\n                                        <mat-icon>remove_circle</mat-icon>\\n                                    </span>\\n                                    <span class=\\\"accentcolor\\\"\\n                                        *ngIf=\\\"this.regiondata[item.varname]<((1/2.5)*this.overalldata[item.varname])\\\">\\n                                        <mat-icon>remove_circle</mat-icon>\\n                                    </span>\\n                                    <span class=\\\"primarycolor\\\"\\n                                        *ngIf=\\\"this.regiondata[item.varname]>=(1.5*this.overalldata[item.varname])\\\">\\n                                        <mat-icon>add_circle</mat-icon>\\n                                    </span>\\n                                    <span class=\\\"primarycolor\\\"\\n                                        *ngIf=\\\"this.regiondata[item.varname]>=(2.5*this.overalldata[item.varname])\\\">\\n                                        <mat-icon>add_circle</mat-icon>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                    </ng-container>\\n\\n                </div>\\n                <h2>Gesundheitsindikatoren</h2>\\n                <div class=\\\"add-margin\\\" class=\\\"greycolor\\\">\\n                    <div class=\\\"add-margin\\\" fxFlexAlign=\\\"start\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\n                        <div fxFlex=60>Merkmal</div>\\n                        <div fxFlex fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n                            <div fxFlex=50 fxFlexAlign=\\\"start start\\\">\\n                                Ausprägung\\n                            </div>\\n                            <div fxFlex>\\n                                Vergleich mit Durchschnitt\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"add-margin\\\">\\n\\n                    <ng-container *ngFor=\\\"let item of this.metadata\\\">\\n                        <div *ngIf=\\\"item.topic=='outcomes'\\\" fxFlexAlign=\\\"start\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"15px\\\">\\n                            <div fxFlex=60><strong>{{item.varname  | replace : '[_]' : '.'}}</strong></div>\\n                            <div fxFlex fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n                                <div fxFlex=50 fxFlexAlign=\\\"start start\\\">\\n                                    <span class=\\\"primarycolor\\\" *ngIf=\\\"item.type=='rate'\\\">{{this.regiondata[item.varname]\\n                                        | percent }}</span>\\n                                    <span class=\\\"primarycolor\\\"\\n                                        *ngIf=\\\"item.type!=='rate'\\\">{{this.regiondata[item.varname] | number }}</span>\\n                                </div>\\n                                <div fxFlex>\\n                                    <span class=\\\"accentcolor\\\"\\n                                        *ngIf=\\\"this.regiondata[item.varname]<((1/1.5)*this.overalldata[item.varname])\\\">\\n                                        <mat-icon>remove_circle</mat-icon>\\n                                    </span>\\n                                    <span class=\\\"accentcolor\\\"\\n                                        *ngIf=\\\"this.regiondata[item.varname]<((1/2.5)*this.overalldata[item.varname])\\\">\\n                                        <mat-icon>remove_circle</mat-icon>\\n                                    </span>\\n                                    <span class=\\\"primarycolor\\\"\\n                                        *ngIf=\\\"this.regiondata[item.varname]>=(1.5*this.overalldata[item.varname])\\\">\\n                                        <mat-icon>add_circle</mat-icon>\\n                                    </span>\\n                                    <span class=\\\"primarycolor\\\"\\n                                        *ngIf=\\\"this.regiondata[item.varname]>=(2.5*this.overalldata[item.varname])\\\">\\n                                        <mat-icon>add_circle</mat-icon>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div *ngIf=\\\"this.intend=='Analysen'\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\n        <div *ngIf=\\\"this.levelvalues\\\">\\n            <mat-chip-list>\\n                <ng-container *ngFor=\\\"let item of this.levelvalues\\\">\\n                    <mat-chip (click)=\\\"this.currentlevel=item;this.getregionandata();this.getregresults();\\\"\\n                        [selected]=\\\"this.currentlevel==item\\\" color=\\\"primary\\\">\\n                        {{item  | replace : '[_]' : '.'}}\\n                    </mat-chip>\\n                </ng-container>\\n            </mat-chip-list>\\n        </div>\\n        <div *ngIf=\\\"this.outcomes && this.currentlevel\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"15px\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxFlex=45 fxFlex.lt-md=100>\\n                <h4><strong>Gesundheitsindikator</strong>:</h4>\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                    <mat-label>Variablenauswahl</mat-label>\\n                    <mat-select [(value)]=\\\"this.outcome\\\" (selectionChange)=\\\"this.getregionandata();this.getregresults();\\\">\\n                        <mat-option value=\\\"\\\">Keine Auswahl</mat-option><br>\\n                        <ng-container *ngFor=\\\"let item of this.outcomes\\\">\\n                            <mat-option [value]=\\\"item.varname\\\"><strong>{{item.varname  | replace : '[_]' : '.'}}</strong></mat-option><br>\\n                        </ng-container>\\n                    </mat-select>\\n                </mat-form-field>\\n                <mat-error *ngIf=\\\"this.determinant && !this.outcome\\\">Bitte wählen Sie ein Outcome aus</mat-error>\\n            </div>\\n            <div fxFlex=45 fxFlex.lt-md=100>\\n                <h4><strong>Erklärende Variable</strong>:</h4>\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                    <mat-label>Variablenauswahl</mat-label>\\n                    <mat-select [(value)]=\\\"this.determinant\\\" (selectionChange)=\\\"this.getregionandata();this.getregresults();\\\">\\n                        <mat-option value=\\\"\\\">Keine Auswahl</mat-option><br>\\n                        <ng-container *ngFor=\\\"let item of this.outcomes.concat(this.determinants)\\\">\\n                            <ng-container *ngIf=\\\"item.varname!=this.outcome\\\">\\n                                <mat-option [value]=\\\"item.varname\\\">{{item.varname  | replace : '[_]' : '.'}}</mat-option><br>\\n                            </ng-container>\\n                        </ng-container>\\n                    </mat-select>\\n                </mat-form-field>\\n                <mat-error *ngIf=\\\"!this.determinant && this.outcome\\\">Bitte wählen Sie eine erklärende Variable aus\\n                </mat-error>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"this.andata\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between\\\">\\n            <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"this.andata\\\">\\n                <div fxFlex=100>\\n                <h3>Werteverteilungen</h3>\\n                </div>\\n                <div class=\\\"minsize\\\" *ngIf=\\\"this.andata\\\" fxFlex=45>\\n                    <app-plot [data]=\\\"this.andata\\\" [custommargins]=\\\"{ l: 0, r: 40, b: 150, t: 0 }\\\"\\n                        [xvalue]=\\\"[this.outcome]\\\" [outcomes]=\\\"[this.outcome]\\\" [percent]=\\\"true\\\"\\n                        [colorscheme]=\\\"[this.api.makescale(3)[2]]\\\" plottype=\\\"violin\\\"></app-plot>\\n                </div>\\n                <div class=\\\"minsize\\\" *ngIf=\\\"this.andata\\\" fxFlex=45>\\n                    <app-plot [data]=\\\"this.andata\\\" [custommargins]=\\\"{ l: 0, r: 40, b: 150, t: 0 }\\\"\\n                        [xvalue]=\\\"[this.determinant]\\\" [outcomes]=\\\"[this.determinant]\\\" [percent]=\\\"true\\\"\\n                        [colorscheme]=\\\"[this.api.makescale(3)[1]]\\\" plottype=\\\"violin\\\"></app-plot>\\n                </div>\\n            </div>\\n            <div class=\\\"minsize\\\" *ngIf=\\\"this.andata\\\" fxFlex=100 fxFlex.lt-md=100>\\n                <h3>Streudiagramm</h3>\\n                <app-plot [(data)]=\\\"this.andata\\\" [xvalue]=\\\"this.determinant\\\" [id]=\\\"this.levelid\\\"\\n                    [outcomes]=\\\"[this.outcome]\\\" [percent]=\\\"true\\\" [percentx]=\\\"true\\\"\\n                    [xtitle]=\\\"this.determinant\\\" [ytitle]=\\\"this.outcome+'<br>'\\\" \\n                    [colorscheme]=\\\"[this.api.makescale(3)[2]]\\\" plottype=\\\"scatter\\\"></app-plot>\\n            </div>\\n            <div  *ngIf=\\\"this.andata\\\">\\n                <h2>Zusammenhangsanalyse</h2>\\n                <mat-chip-list>\\n                    <ng-container *ngFor=\\\"let item of this.outcomes.concat(this.determinants)\\\">\\n                        <ng-container *ngIf=\\\"[this.determinant,this.outcome].indexOf(item.varname)<0 \\\">\\n                            <mat-chip *ngIf=\\\"this.controls.indexOf(item.varname)<0 \\\" color=\\\"primary\\\" [selected]=\\\"false\\\"\\n                                (click)=\\\"this.controls.push(item.varname);this.getregresults();\\\">\\n                                {{item.varname  | replace : '[_]' : '.'}}\\n                            </mat-chip>\\n                            <mat-chip *ngIf=\\\"this.controls.indexOf(item.varname)>=0 \\\" color=\\\"primary\\\" [selected]=\\\"true\\\"\\n                                (click)=\\\"this.removeoutcome(item.varname);this.getregresults();\\\">\\n                                {{item.varname  | replace : '[_]' : '.'}}\\n                            </mat-chip>\\n                        </ng-container>\\n                    </ng-container>\\n                </mat-chip-list>\\n            </div>\\n            <div class=\\\"add-margin\\\" *ngIf=\\\"this.andata && this.regressiondata\\\">\\n                <h3>Ergenisse der Zusammenhangsanalyse</h3>\\n                <div class=\\\"minsize\\\" *ngIf=\\\"this.regressiondata['data']\\\">\\n                    <app-plot [data]=\\\"this.regressiondata['data']\\\"\\n                    [xvalue]=\\\"[this.determinant]\\\" [outcomes]=\\\"['base','controlled']\\\" [percent]=\\\"true\\\"\\n                    [colorscheme]=\\\"this.api.makescale(2)\\\" [outcomelabels]=\\\"['allgemeiner Zusammenhang','mit Kontrollvariablen']\\\" \\n                    [xtitle]=\\\"this.determinant\\\" [ytitle]=\\\"this.outcome+'<br>'\\\" \\n                    plottype=\\\"lines\\\"></app-plot>\\n                </div>\\n                <div class=\\\"add-margin\\\" *ngIf=\\\"this.regressiondata.params\\\">\\n                    <mat-card style=\\\"max-width: 450px;\\\">\\n                    <h2>Modellzusammenfassung</h2>\\n                    <div class=\\\"add-margin\\\">\\n                        <h3>Outcome</h3>\\n                        <p><strong>{{this.outcome}}</strong></p>\\n                    </div>\\n                    \\n\\n                    <div class=\\\"add-margin\\\">\\n                    <h3>Parameter</h3>\\n                    <div  fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between\\\">\\n                        <div fxFlex=60>\\n                            Variable\\n                        </div>\\n                        <div fxFlex=15>\\n                            Effekt\\n                        </div>\\n                        <div fxFlex=15>\\n                            P-Wert\\n                        </div>\\n                    </div>\\n                    <ng-container *ngFor=\\\"let theparam of [this.determinant].concat(this.controls)\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between\\\">\\n                            <div fxFlex=60>\\n                                <strong>{{theparam}}</strong>\\n                            </div>\\n                            <div fxFlex=15>\\n                                <span class=\\\"primarycolor\\\"><strong>{{this.regressiondata.params[theparam] |  number: '1.3-3'}}</strong></span>\\n                            </div>\\n                            <div fxFlex=15>\\n                                <span *ngIf=\\\"this.regressiondata.pvalues[theparam]<.05\\\"><strong>{{this.regressiondata.pvalues[theparam] |  number: '1.3-3' }}</strong></span>\\n                                <span *ngIf=\\\"this.regressiondata.pvalues[theparam]>=.05\\\">{{this.regressiondata.pvalues[theparam] |  number: '1.3-3' }}</span>\\n                            </div>\\n                        </div>\\n\\n                    </ng-container>\\n                    </div>\\n                    <div class=\\\"add-margin\\\">\\n                    <p>Modellgüte R<sup>2</sup>: <span class=\\\"primarycolor\\\"><strong>{{this.regressiondata.r2 | percent}}</strong></span></p>\\n                    <p>Beobachtungen: n=<span class=\\\"primarycolor\\\"><strong>{{this.regressiondata.data.length | number}}</strong></span></p>\\n                    </div>\\n                    </mat-card>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"this.intend=='Daten exportieren'\\\">\\n            <h2>Daten</h2>\\n        </div>\\n    </div>\";","export default \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"1rem\\\"  fxLayoutAlign=\\\"space-around\\\"\\n*ngIf=\\\"!(this.deleteresult=='success')\\\" >\\n    <div class=\\\"small\\\">\\n    <h1>Ihre Nutzerdaten</h1>    \\n            <div fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"1rem\\\">\\n                <div fxFlex=20 fxFlex.lt-md=100>Name:</div>\\n                <div fxFlex><strong>{{this.userdetails.anrede+' '+this.userdetails.firstname+' '+this.userdetails.lastname}}</strong></div>\\n            </div>\\n            <div fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"1rem\\\">\\n                <div fxFlex=20 fxFlex.lt-md=100>E-Mail:</div>\\n                <div fxFlex><strong>{{this.userdetails.email}}</strong></div>\\n            </div>\\n            <div fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"1rem\\\">\\n                <div fxFlex=20 fxFlex.lt-md=100>Rolle:</div>\\n                <div fxFlex><strong>{{this.userdetails.roles}}</strong></div>\\n            </div>\\n            <div *ngIf=\\\"this.userdetails.dashboards.length>0\\\" fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"1rem\\\" >\\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboards:</div>\\n                <div fxFlex><strong>{{this.userdetails.dashboards}}</strong></div>\\n            </div>\\n            <div *ngIf=\\\"this.userdetails.dashboard_admin.length>0\\\" fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"1rem\\\">\\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboard Admin:</div>\\n                <div fxFlex><strong>{{this.userdetails.dashboard_admin}}</strong></div>\\n            </div>\\n            <div *ngIf=\\\"this.userdetails.wrong_logins>0\\\" fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"1rem\\\">\\n                <div fxFlex=20 fxFlex.lt-md=100>Fehlerhafte Loginversuche seit der letzten Anmeldung:</div>\\n                <div fxFlex><strong>{{this.userdetails.wrong_logins}}</strong></div>\\n            </div>\\n            <div class=\\\"add-margin\\\" style=\\\"max-width:400px;\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around\\\" fxLayoutGap=\\\"1rem\\\">\\n                <div class=\\\"add-margin\\\"><button mat-raised-button (click)=\\\"this.action='chpwd'\\\" color=\\\"primary\\\">Passwort ändern</button></div>\\n                <div class=\\\"add-margin\\\"><button mat-raised-button (click)=\\\"this.action='deleteaccount'\\\" color=\\\"accent\\\">Account löschen</button></div>\\n            </div>\\n            <div fxLayout=\\\"column\\\" *ngIf=\\\"this.action=='chpwd'\\\" style=\\\"max-width: 450px;\\\">\\n                <div ><h1>Passwort ändern</h1></div>\\n                <div *ngIf=\\\"!this.pwdchange.ok\\\">\\n                    \\n                        <mat-form-field  class=\\\"full-width\\\" appearance=\\\"fill\\\">\\n                          <mat-label>Aktuelles Passwort</mat-label>\\n                          <input  type=\\\"password\\\"  [disabled]=\\\"this.pwdchange.progress\\\"  matInput value=\\\"\\\" [(ngModel)]=\\\"this.pwdrequest.oldpwd\\\">                          \\n                        </mat-form-field>\\n                      \\n                        <mat-form-field  class=\\\"full-width\\\" appearance=\\\"fill\\\">\\n                          <mat-label>Neues Passwort</mat-label>\\n                          <input type=\\\"password\\\" [disabled]=\\\"this.pwdchange.progress\\\" matInput value=\\\"\\\" [(ngModel)]=\\\"this.pwdrequest.newpwd\\\">\\n                          <mat-hint>Mindestlänge 10 Zeichen</mat-hint>\\n                        </mat-form-field>\\n                </div>\\n                <div>\\n                    <mat-hint *ngIf=\\\"this.pwdchange.progress\\\">ändere das Passwort...</mat-hint>\\n                    <p  *ngIf=\\\"(this.pwdchange.done && !this.pwdchange.ok)\\\"><mat-icon style=\\\"color:red\\\">error</mat-icon> Fehler: Bitte prüfen Sie das aktuelle Passwort!</p>\\n                                            <p *ngIf=\\\"(this.pwdchange.done && this.pwdchange.ok)\\\"><mat-icon style=\\\"color:green\\\">check_circle</mat-icon>Änderung erfolgreich, Sie bleiben eingeloggt.</p>\\n                </div>\\n                <div *ngIf=\\\"!this.pwdchange.ok\\\" class=\\\"add-margin\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                    <div><button  mat-raised-button (click)=\\\"this.action=''\\\" color=\\\"primary\\\">Abbrechen</button></div>\\n                    <div><button mat-raised-button [disabled]=\\\"this.pwdrequest.newpwd.length<10\\\" (click)=\\\"this.chpwd()\\\" color=\\\"accent\\\">Ändern</button></div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"this.action=='deleteaccount'\\\"  style=\\\"max-width: 450px;\\\">\\n                <h1>Account löschen</h1>\\n                <div>\\n                    <p>Warnung: Diese Aktion kann nicht rückgängig gemacht werden</p>\\n                    <p>Bitte geben Sie Ihr aktuelles Passwort zur Sicherheit ein:</p>\\n                    <mat-form-field  class=\\\"full-width\\\" appearance=\\\"fill\\\">\\n                        <mat-label>Aktuelles Passwort</mat-label>\\n                        <input  type=\\\"password\\\"  matInput value=\\\"\\\" [(ngModel)]=\\\"this.deleterequest.pwd\\\">                          \\n                      </mat-form-field>\\n                </div>\\n                <div class=\\\"add-margin\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                    <div><button mat-raised-button (click)=\\\"this.action=''\\\" color=\\\"primary\\\">Abbrechen</button></div>\\n                    <div><button mat-raised-button (click)=\\\"this.deleteaccount()\\\" [disabled]=\\\"this.deleterequest.pwd.length<10\\\" color=\\\"primary\\\">Jetzt löschen</button></div>\\n                </div>\\n                <div *ngIf=\\\"this.deleteresult=='error'\\\">\\n                    <p style=\\\"color:crimson\\\">Es ist ein Fehler aufgetreten, bitte prüfen Sie Ihr Passwort.</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        \\n    \\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"this.deleteresult=='success'\\\">\\n    <h1>Ihr Account wurde gelöscht</h1>\\n</div>\";","export default \"<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"1rem\\\" fxLayoutAllign=\\\"space-around\\\">\\n    <div>\\n        <p *ngIf=\\\"this.currentuser\\\" class=\\\"mat-caption right\\\">\\n            Angemeldet als <span> {{this.currentuser.anrede?this.currentuser.anrede+\\\"\\n                \\\"+this.currentuser.lastname:\\\"\\\" }}</span></p>\\n        <div class=\\\"brandingpicture\\\" [ngClass]=\\\"{'smallheader': this.currentuser}\\\">\\n            <h1>Ambulante Akut- und Notfälle in Deutschland</h1>\\n        </div>\\n        <p *ngIf=\\\"this.metadata.length==0 && !this.currentuser && !this.progress\\\">\\n            Es sind aktuell keine öffentlichen Informationen auf diesem Portal verfügbar.\\n        </p>\\n        <p *ngIf=\\\"(this.metadata.length==0) && this.currentuser && !this.progress\\\">\\n            Es sind keine Daten im System, bitte wenden Sie sich an einen Administrator.\\n        </p>\\n    </div>\\n\\n    <div *ngIf=\\\"this.progress &&  this.currentuser\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n\\n    <div *ngIf=\\\"this.metadata && !this.progress\\\">\\n        <ng-container *ngIf=\\\"this.metadata.length>0 && this.levelvalues.length>0\\\">\\n            <h3 *ngIf=\\\"this.currentuser\\\">KV</h3>\\n            <p *ngIf=\\\"this.currentuser\\\">\\n                <mat-chip-list>\\n                    <mat-chip (click)=\\\"this.setlevel('levelvalues',item);\\\" *ngFor=\\\"let item of this.levelvalues\\\"\\n                        [selected]=\\\"(this.levelsettings['levelvalues']==item)\\\" color=\\\"primary\\\">\\n                        {{item}}\\n                    </mat-chip>\\n                </mat-chip-list>\\n            </p>\\n            <h3>Analysezeitraum</h3>\\n            <p>\\n                <mat-chip-list>\\n                    <mat-chip (click)=\\\"this.setlevel('zeitraum',item);\\\" *ngFor=\\\"let item of this.zeitaumoptions\\\"\\n                        [selected]=\\\"(this.levelsettings['zeitraum']==item)\\\" color=\\\"primary\\\">\\n                        {{item}}\\n                    </mat-chip>\\n                </mat-chip-list>\\n            </p>\\n            <p *ngIf=\\\"this.levelsettings['zeitraum']=='Detailliert'\\\">\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Analysezeitraum</mat-label>\\n                    <mat-date-range-input [rangePicker]=\\\"picker\\\">\\n                      <input (dateChange)=\\\"smeddetailquery()\\\" matStartDate placeholder=\\\"Start date\\\" [(ngModel)]=\\\"this.levelsettings['start']\\\">\\n                      <input (dateChange)=\\\"smeddetailquery()\\\" matEndDate placeholder=\\\"End date\\\" [(ngModel)]=\\\"this.levelsettings['end']\\\">\\n                    </mat-date-range-input>\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-date-range-picker #picker></mat-date-range-picker>\\n                  </mat-form-field>\\n            </p>            \\n        </ng-container>\\n    </div>    \\n    <div *ngIf=\\\"!this.summaryinfo['done'] && !this.progress && \\n    (this.levelsettings['zeitraum']!=='Detailliert' || (this.levelsettings['start'] && this.levelsettings['end']))\\\">\\n        <p>\\n            Keine Daten verfügbar\\n        </p>\\n    </div>\\n    <div *ngIf=\\\"this.symptoms_list && this.stats_ts && this.summaryinfo['done']\\\" fxLayout=\\\"row wrap\\\">\\n        <div fxFlex=100 >\\n            <mat-card >\\n                <div  fxLayout=\\\"row wrap\\\">\\n                <div fxFlex  fxFlex.lt-md=100>\\n                    <app-box \\n                    [value]=\\\"this.summaryinfo['Assessments Gesamt']\\\"  [numberformat]=\\\"'1.0-0'\\\"\\n                    [maincolor]=\\\"this.api.primary\\\" \\n                    description=\\\"Assessments\\\"></app-box>\\n                </div>\\n                <div fxFlex fxFlex.lt-md=100>\\n                    <app-box  [numberformat]=\\\"'1.0-0'\\\"\\n                    [value]=\\\"this.summaryinfo['Assessments pro Woche']\\\" \\n                    description=\\\"pro Woche\\\"></app-box>\\n                </div>\\n                <div fxFlex fxFlex.lt-md=100>\\n                    <app-box [textbehind]=\\\"true\\\"   title=\\\"min\\\" [numberformat]=\\\"'1.1-1'\\\"\\n                    [value]=\\\"this.summaryinfo['Mittlere Dauer']/60\\\" \\n                    description=\\\"Dauer\\\"></app-box>\\n                </div> \\n                </div>            \\n            </mat-card>\\n\\n        </div>\\n        <div fxFlex=33 fxFlex.lt-md=100 *ngIf=\\\"this.symptoms_list && this.stats_ts  \\\">\\n            <mat-card>\\n                <h3>Assessments pro Woche</h3>\\n                <app-plot [(data)]=\\\"this.stats_ts\\\" xtickformat=\\\"%d.%m.<br>%Y\\\" [xvalue]=\\\"'Datum'\\\" [outcomes]=\\\"['Anzahl']\\\"\\n                    [fontcolor]=\\\"'white'\\\" plottype=\\\"tsline\\\"></app-plot>\\n            </mat-card>\\n        </div>\\n        <div fxFlex=33 fxFlex.lt-md=100 *ngIf=\\\"this.symptoms_list && this.stats_ts \\\">\\n            <mat-card>\\n                <h3>Mittlere Dauer pro Assessment</h3>\\n                <app-plot [(data)]=\\\"this.stats_ts\\\" xtickformat=\\\"%d.%m.<br>%Y\\\" [xvalue]=\\\"'Datum'\\\"\\n                    [fontcolor]=\\\"'white'\\\" [colorscheme]=\\\"['rgb(183,205,0)']\\\"\\n                    [outcomes]=\\\"['Mittlere Dauer (Min.)']\\\" plottype=\\\"tsline\\\"></app-plot>\\n            </mat-card>\\n        </div>\\n        <div fxFlex=33 fxFlex.lt-md=100 *ngIf=\\\"this.symptoms_list && this.stats_ts \\\">\\n            <mat-card>\\n                <h3>Fragen pro Assessment</h3>\\n                <app-plot [(data)]=\\\"this.stats_ts\\\" xtickformat=\\\"%d.%m.<br>%Y\\\" [xvalue]=\\\"'Datum'\\\"\\n                    [fontcolor]=\\\"'white'\\\" [colorscheme]=\\\"['rgb(183,205,30)']\\\"\\n                    [outcomes]=\\\"['Mittlere Anzahl Fragen']\\\" plottype=\\\"tsline\\\"></app-plot>\\n            </mat-card>\\n        </div>\\n        <div fxFlex=100>\\n            <mat-card>\\n                <h3>Aufkommen nach Tag und Uhrzeit</h3>\\n                <app-plot [(data)]=\\\"this.utiltimes\\\" [xvalue]=\\\"'Wochentag'\\\"\\n                    [fontcolor]=\\\"'white'\\\" \\n                    [outcomes]=\\\"['Anzahl']\\\"  [colorby]=\\\"'h'\\\" plottype=\\\"stackedbar\\\">\\n                </app-plot>\\n            </mat-card>\\n        </div>\\n        <div fxFlex=100>\\n            <mat-card>\\n                <h3>Hauptbeschwerden</h3>\\n                <app-plot [(data)]=\\\"this.symptoms_list\\\" [xvalue]=\\\"'name'\\\"\\n                    [fontcolor]=\\\"'white'\\\" \\n                    [outcomes]=\\\"['n']\\\" plottype=\\\"hbar\\\"></app-plot>\\n            </mat-card>\\n        </div>\\n        <!-- Detailergebnisse für kleine Zeiträume -->\\n        <ng-container *ngIf=\\\"false && this.levelsettings['zeitraum']!=='Gesamt' && this.currentuser && (this.levelsettings['anperioddays']<=64)\\\">\\n        <div fxFlex=100 fxFlex.lt-md=100>\\n            <mat-card>\\n                <h3>Dringlichkeit der Behandlung</h3>\\n                <div *ngIf=\\\"!this.ts_results['1_dingl_ort']\\\">\\n                    <mat-card class=\\\"fakecontent\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                            <div>\\n                                <h1><mat-icon>insights</mat-icon></h1>\\n                               <mat-spinner [diameter]=\\\"30\\\"></mat-spinner>\\n                            </div>\\n                        </div>\\n                    </mat-card>                                        \\n                </div>\\n                <div  *ngIf=\\\"this.ts_results['1_dingl_ort']\\\">\\n                    <ng-container *ngIf=\\\"this.ts_results['1_dingl_ort'].length>0\\\">\\n                        <app-plot\\n                        [(data)]=\\\"this.ts_results['1_dingl_ort']\\\" \\n                        [xvalue]=\\\"'TTTsmed_text'\\\"\\n                        [fontcolor]=\\\"'white'\\\"  \\n                        [legendbg]=\\\"'#00000020'\\\"\\n                        [legendpos]=\\\"'right'\\\"\\n                        [outcomes]=\\\"['count']\\\" \\n                        [custommargins]=\\\"{ l: 0, r: 0, b: 200, t: 20 }\\\"\\n                        [colorby]=\\\"'POCsmed_text'\\\" plottype=\\\"stackedbar\\\"\\n                        ></app-plot>                       \\n                    </ng-container>                    \\n                    <ng-container *ngIf=\\\"!(this.ts_results['1_dingl_ort'].length>0)\\\">\\n                        <p>Keine Daten</p>\\n                    </ng-container>                    \\n                </div>\\n                <p class=\\\"mat-caption greycolor\\\">Ergebnis zu empfohlenem Behandlungsort und -zeitpunkt.</p>\\n              \\n            </mat-card>\\n        </div>\\n       <!--  <div fxFlex=50 fxFlex.lt-md=100         *ngIf=\\\"this.currentuser\\\">\\n            <mat-card>\\n                <h3>Abweichung zwischen Empfehlung und Entscheidung</h3>\\n                <div *ngIf=\\\"!this.ts_results['2_abweichung']\\\">\\n                    <mat-card class=\\\"fakecontent\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                            <div>\\n                                <h1><mat-icon>insights</mat-icon></h1>\\n                               <mat-spinner [diameter]=\\\"30\\\"></mat-spinner>\\n                            </div>\\n                        </div>\\n                    </mat-card>                                        \\n                </div>\\n                <div  *ngIf=\\\"this.ts_results['2_abweichung']\\\">\\n                    <ng-container *ngIf=\\\"this.ts_results['2_abweichung'].length>0\\\">\\n                        Ergebnis:\\n                        {{this.ts_results['2_abweichung'] | json}}\\n                    </ng-container>                    \\n                    <ng-container *ngIf=\\\"!(this.ts_results['2_abweichung'].length>0)\\\">\\n                        <p>Keine Daten</p>\\n                    </ng-container>                    \\n                </div>\\n                <p class=\\\"mat-caption greycolor\\\">Nur für den internen Gebrauch.</p>              \\n            </mat-card>\\n        </div> -->\\n        <div fxFlex=100 fxFlex.lt-md=100>\\n            <mat-card>\\n                <h3>Dauer nach Hauptbeschwerde</h3>\\n                <div *ngIf=\\\"!this.ts_results['3_dauer_sympt']\\\">\\n                    <mat-card class=\\\"fakecontent\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                            <div>\\n                                <h1><mat-icon>insights</mat-icon></h1>\\n                               <mat-spinner [diameter]=\\\"30\\\"></mat-spinner>\\n                            </div>\\n                        </div>\\n                    </mat-card>                                        \\n                </div>\\n                <div  *ngIf=\\\"this.ts_results['3_dauer_sympt']\\\">\\n                    <ng-container *ngIf=\\\"this.ts_results['3_dauer_sympt'].length>0\\\">\\n                        <app-plot\\n                        [(data)]=\\\"this.ts_results['3_dauer_sympt']\\\" \\n                        [xvalue]=\\\"'Hauptbeschwerde'\\\"\\n                        [fontcolor]=\\\"'white'\\\"  \\n                        [outcomes]=\\\"['Dauer_sek']\\\" \\n                        [custommargins]=\\\"{ l: 200, r: 0, b: 20, t: 20 }\\\"\\n                        plottype=\\\"hbar\\\"\\n                        ></app-plot>            \\n                    </ng-container>                    \\n                    <ng-container *ngIf=\\\"!(this.ts_results['3_dauer_sympt'].length>0)\\\">\\n                        <p>Keine Daten</p>\\n                    </ng-container>                    \\n                </div>\\n                <p class=\\\"mat-caption greycolor\\\">Dauer der Ersteinschätzung nach den häufigsten Hauptbeschwerden.</p>              \\n            </mat-card>\\n        </div>\\n    \\n    <div fxFlex fxFlex.lt-md=100>\\n        <mat-card>\\n            <h3>Dringlichkeit nach Hauptbeschwerde</h3>\\n            <div *ngIf=\\\"!this.ts_results['4_dringl_symp']\\\">\\n                <mat-card class=\\\"fakecontent\\\">\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                        <div>\\n                            <h1><mat-icon>insights</mat-icon></h1>\\n                           <mat-spinner [diameter]=\\\"30\\\"></mat-spinner>\\n                        </div>\\n                    </div>\\n                </mat-card>                                        \\n            </div>\\n            <div  *ngIf=\\\"this.ts_results['4_dringl_symp']\\\">\\n                <ng-container *ngIf=\\\"this.ts_results['4_dringl_symp'].length>0\\\">\\n                    <app-plot\\n                    [data]=\\\"this.ts_results['4_dringl_symp']\\\" \\n                    [xvalue]=\\\"'Hauptbeschwerde'\\\"\\n                    [fontcolor]=\\\"'white'\\\"  \\n                    [legendbg]=\\\"'#00000020'\\\"\\n                    [legendpos]=\\\"'right'\\\"\\n                    [outcomes]=\\\"['count']\\\" \\n                    [custommargins]=\\\"{ l: 0, r: 0, b: 200, t: 20 }\\\"\\n                    [colorby]=\\\"'TTTsmed_text'\\\" plottype=\\\"stackedbar\\\"\\n                    ></app-plot>          \\n                    <!-- Ergebnis:\\n                    {{this.ts_results['4_dringl_symp'] | json}} -->\\n                </ng-container>                    \\n                <ng-container *ngIf=\\\"!(this.ts_results['4_dringl_symp'].length>0)\\\">\\n                    <p>Keine Daten</p>\\n                </ng-container>                    \\n            </div>\\n            <p class=\\\"mat-caption greycolor\\\">Dinglichkeit der Behandlung nach den häufigsten Hauptbeschwerden.</p>\\n          \\n        </mat-card>\\n    </div>      \\n    </ng-container>\\n</div>\\n    \\n\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { StartComponent } from './pages/start/start.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport {PrivateComponent} from './pages/private/private.component'\nimport { AdminComponent } from './pages/admin/admin.component';\n\nconst routes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'profile', component: ProfileComponent,\n    canActivate: [AuthGuardService]\n  },\n  /* {\n    path: 'private', component: PrivateComponent,\n    canActivate: [AuthGuardService]\n  }, */\n  {\n    path: 'admin', component: AdminComponent,\n    canActivate: [AuthGuardService]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".example-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.offlinemsg {\\n  padding: 2rem;\\n  background-color: rgba(51, 51, 51, 0.8);\\n  color: white;\\n  position: absolute;\\n  border-radius: 15px;\\n  margin: 1rem;\\n  right: 1rem;\\n  padding: 0.6rem;\\n  font-size: 0.8rem;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: white;\\n}\\n\\na:hover,\\na:active {\\n  color: #f5f5f5;\\n}\\n\\n.navigation-items {\\n  list-style: none;\\n  cursor: pointer;\\n}\\n\\n.icon {\\n  display: inline-block;\\n  margin: 0 auto;\\n  padding-right: 0.6em;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 15%;\\n}\\n\\n.label {\\n  display: inline-block;\\n  margin: 0;\\n  width: 85%;\\n  vertical-align: middle;\\n}\\n\\n.menucontainer {\\n  width: 15rem;\\n  margin: 0px;\\n  height: 100%;\\n  padding: 1rem;\\n  padding-top: 1.5rem;\\n  background-color: white;\\n}\\n\\n.menucontainer span {\\n  color: black;\\n}\\n\\n.menucontainer span:hover {\\n  font-weight: bolder;\\n}\\n\\n.menucontainer .icon {\\n  color: black;\\n  margin-right: 0.9rem;\\n}\\n\\n.menucontainer a:hover {\\n  color: black;\\n}\\n\\n::ng-deep .mat-drawer-inner-container {\\n  overflow: hidden !important;\\n}\\n\\n.mat-drawer-content {\\n  overflow: hidden !important;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  background: #000000 !important;\\n  color: white;\\n}\\n\\n.userinfo {\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  color: rgba(255, 255, 255, 0.447);\\n}\\n\\n.zilogostyle {\\n  height: 2rem;\\n  margin-top: 20px;\\n  filter: grayscale(100%);\\n}\\n\\n.brandinglogo {\\n  height: 2rem;\\n  margin-top: 20px;\\n  margin-left: 50px;\\n}\\n\\n.brandinglogotiny {\\n  height: 1rem;\\n  margin-top: 10px;\\n  margin-left: 25px;\\n}\\n\\n.mat-form-field {\\n  border-radius: 15px;\\n}\\n\\n.footerstyle {\\n  background-color: #303030;\\n  color: #929292;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FtYnVsYW50ZV9ub3RmYWVsbGUvYW1idWxhbnRlX25vdGZhZWxsZS9EYXNoYm9hcmQvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7QUNDSjs7QURHRTtFQUNFLGFBQUE7RUFDQSx1Q0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNBSjs7QURHQztFQUNFLHFCQUFBO0VBQ0EsWUFBQTtBQ0FIOztBREdDOztFQUVFLGNBQUE7QUNBSDs7QURHQztFQUNFLGdCQUFBO0VBQ0EsZUFBQTtBQ0FIOztBREdDO0VBQ0UscUJBQUE7RUFDQSxjQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQ0FIOztBREdDO0VBQ0UscUJBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLHNCQUFBO0FDQUg7O0FES0M7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0ZIOztBRElHO0VBQ0UsWUFBQTtBQ0ZMOztBREtHO0VBQ0UsbUJBQUE7QUNITDs7QURPRztFQUNFLFlBQUE7RUFDQSxvQkFBQTtBQ0xMOztBRFFHO0VBQ0UsWUFBQTtBQ05MOztBRFdDO0VBQ0UsMkJBQUE7QUNSSDs7QURXQTtFQUNFLDJCQUFBO0FDUkY7O0FEVUE7RUFDRSw4QkFBQTtFQUNBLFlBQUE7QUNQRjs7QURVQTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQ0FBQTtBQ1BGOztBRFVBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsdUJBQUE7QUNQRjs7QURVQTtFQUNFLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0FDUEY7O0FEV0E7RUFDRSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQ1JGOztBRFdBO0VBQ0EsbUJBQUE7QUNSQTs7QURXQTtFQUNFLHlCQUFBO0VBQ0EsY0FBQTtBQ1JGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtc3BhY2VyIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgfVxuXG5cbiAgLm9mZmxpbmVtc2d7XG4gICAgcGFkZGluZzoycmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTEsIDUxLCA1MSwuOCk7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIG1hcmdpbjoxcmVtO1xuICAgIHJpZ2h0OjFyZW07XG4gICAgcGFkZGluZzouNnJlbTtcbiAgICBmb250LXNpemU6IC44cmVtO1xuICAgIFxuICB9XG4gYSB7XG4gICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICBjb2xvcjogd2hpdGU7XG4gfVxuIFxuIGE6aG92ZXIsXG4gYTphY3RpdmUge1xuICAgY29sb3I6ICNmNWY1ZjU7XG4gfVxuICBcbiAubmF2aWdhdGlvbi1pdGVtcyB7XG4gICBsaXN0LXN0eWxlOiBub25lO1xuICAgY3Vyc29yOiBwb2ludGVyO1xuIH1cbiBcbiAuaWNvbiB7XG4gICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICBtYXJnaW46IDAgYXV0bztcbiAgIHBhZGRpbmctcmlnaHQ6IC42ZW07XG4gICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgd2lkdGg6IDE1JTtcbiB9XG4gXG4gLmxhYmVsIHtcbiAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgIG1hcmdpbjogMDtcbiAgIHdpZHRoOiA4NSU7XG4gICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuIH1cblxuXG5cbiAubWVudWNvbnRhaW5lciB7XG4gICB3aWR0aDogMTVyZW07XG4gICBtYXJnaW46IDBweDtcbiAgIGhlaWdodDogMTAwJTtcbiAgIHBhZGRpbmc6IDFyZW07XG4gICBwYWRkaW5nLXRvcDogMS41cmVtO1xuICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICBcbiAgIHNwYW4gICAgIHtcbiAgICAgY29sb3I6IGJsYWNrO1xuICAgfVxuXG4gICBzcGFuOmhvdmVyIHtcbiAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgIH1cblxuICAgIFxuICAgLmljb24ge1xuICAgICBjb2xvcjogYmxhY2s7XG4gICAgIG1hcmdpbi1yaWdodDogMC45cmVtO1xuICAgfVxuXG4gICBhOmhvdmVyIHtcbiAgICAgY29sb3I6IGJsYWNrOyAgICAgIFxuICAgfVxuICAgXG4gfVxuXG4gOjpuZy1kZWVwIC5tYXQtZHJhd2VyLWlubmVyLWNvbnRhaW5lciB7XG4gICBvdmVyZmxvdzogaGlkZGVuIWltcG9ydGFudDtcbn1cblxuLm1hdC1kcmF3ZXItY29udGVudCB7XG4gIG92ZXJmbG93OiBoaWRkZW4haW1wb3J0YW50O1xufVxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZDogIzAwMDAwMCFpbXBvcnRhbnQ7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnVzZXJpbmZvIHtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ0Nyk7XG59XG5cbi56aWxvZ29zdHlsZSB7XG4gIGhlaWdodDogMi4wcmVtO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBmaWx0ZXI6IGdyYXlzY2FsZSgxMDAlKTtcbn1cblxuLmJyYW5kaW5nbG9nbyB7XG4gIGhlaWdodDogMi4wcmVtO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tbGVmdDogNTBweDsgIFxufVxuXG5cbi5icmFuZGluZ2xvZ290aW55IHtcbiAgaGVpZ2h0OiAxLjByZW07XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyNXB4OyAgXG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG5ib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuXG4uZm9vdGVyc3R5bGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzAzMDMwO1xuICBjb2xvcjogcmdiKDE0NiwgMTQ2LCAxNDYpO1xufSIsIi5leGFtcGxlLXNwYWNlciB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4ub2ZmbGluZW1zZyB7XG4gIHBhZGRpbmc6IDJyZW07XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTEsIDUxLCA1MSwgMC44KTtcbiAgY29sb3I6IHdoaXRlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIG1hcmdpbjogMXJlbTtcbiAgcmlnaHQ6IDFyZW07XG4gIHBhZGRpbmc6IDAuNnJlbTtcbiAgZm9udC1zaXplOiAwLjhyZW07XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuYTpob3ZlcixcbmE6YWN0aXZlIHtcbiAgY29sb3I6ICNmNWY1ZjU7XG59XG5cbi5uYXZpZ2F0aW9uLWl0ZW1zIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaWNvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctcmlnaHQ6IDAuNmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdpZHRoOiAxNSU7XG59XG5cbi5sYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAwO1xuICB3aWR0aDogODUlO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4ubWVudWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxNXJlbTtcbiAgbWFyZ2luOiAwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogMXJlbTtcbiAgcGFkZGluZy10b3A6IDEuNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG4ubWVudWNvbnRhaW5lciBzcGFuIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuLm1lbnVjb250YWluZXIgc3Bhbjpob3ZlciB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG4ubWVudWNvbnRhaW5lciAuaWNvbiB7XG4gIGNvbG9yOiBibGFjaztcbiAgbWFyZ2luLXJpZ2h0OiAwLjlyZW07XG59XG4ubWVudWNvbnRhaW5lciBhOmhvdmVyIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG46Om5nLWRlZXAgLm1hdC1kcmF3ZXItaW5uZXItY29udGFpbmVyIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWRyYXdlci1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xufVxuXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xuICBiYWNrZ3JvdW5kOiAjMDAwMDAwICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnVzZXJpbmZvIHtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ0Nyk7XG59XG5cbi56aWxvZ29zdHlsZSB7XG4gIGhlaWdodDogMnJlbTtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XG59XG5cbi5icmFuZGluZ2xvZ28ge1xuICBoZWlnaHQ6IDJyZW07XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG1hcmdpbi1sZWZ0OiA1MHB4O1xufVxuXG4uYnJhbmRpbmdsb2dvdGlueSB7XG4gIGhlaWdodDogMXJlbTtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWxlZnQ6IDI1cHg7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG59XG5cbi5mb290ZXJzdHlsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDMwMzA7XG4gIGNvbG9yOiAjOTI5MjkyO1xufSJdfQ== */\";","import { HttpParams } from '@angular/common/http';\nimport { Component , OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from './services/api.service';\nimport { AuthService } from './services/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Test Dashboard';\n  public currentuser : any;\n  loginoption = true;\n  public loginstatus:boolean;\n  public adminstatus:boolean;\n  currentdate:any;\n\n  constructor(\n    private _auth : AuthService,\n    private _api : ApiService    ,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.currentdate = new Date();\n    this._auth.currentUser.subscribe(data => {\n      if (data){\n        this.currentuser = data;\n        this.loginstatus = true;\n        this.adminstatus = this.currentuser[\"is_admin\"] || this.currentuser[\"is_superadmin\"];      \n        setTimeout(()=>{this.autorefreshdata();},1000);    \n        setInterval(()=>{this._auth.refreshToken();},1000*60*5);\n      }\n      else {\n        this.loginstatus = false;\n        this.adminstatus = false;\n        setTimeout(()=>{this.autorefreshdata();},0);\n      };         \n      }\n      );         \n  }\n\n  public autorefreshdata(){    \n    this.updatemetadata().subscribe(\n      data => {\n        this.setmetadata(\"metadata\",data[\"data\"]);\n      });\n    this.getsortdata().subscribe(data => {\n        this.setmetadata(\"sortdata\",data[\"datalevels\"]);  \n        if (data[\"geodata\"]){\n          this.setmetadata(\"geodata\",this._api.getValues(data[\"geodata\"],'_id'));        \n        }\n        else {\n          this.setmetadata(\"geodata\",[]); \n        }\n        \n      });\n  }\n\n  logout(){\n    this._auth.logout();\n    this.autorefreshdata();\n    this.loginstatus = false;\n    this.adminstatus = false;   \n    setTimeout(()=> {this.router.navigate(['/'])},1500)\n      };\n    \n    \n\n  \n\n  getsortdata(){\n    return this._api.getTypeRequest(\"get_sortlevels/\"+this._api.REST_API_SERVER_CLIENTID);        \n  }\n\n  updatemetadata(){\n    let client = this._api.REST_API_SERVER_CLIENTID\n    return this._api.getTypeRequest(\"get_metadata/\"+client);          \n  }\n  \n\n\n  setmetadata(name,data){\n   localStorage.setItem(name,JSON.stringify(data));\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule} from './../material/material.module'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartComponent } from './pages/start/start.component';\nimport * as PlotlyJS from 'plotly.js/dist/plotly.js';\nimport { PlotlyModule ,PlotlyService} from 'angular-plotly.js';\nimport * as SVLocale from 'plotly.js/lib/locales/de.js';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MapComponent } from './components/leafletmap/map/map.component';\nimport { PlotComponent } from './components/plotly/plot/plot.component';\nimport { TableComponent } from './components/table/table/table.component';\nimport { BoxComponent } from './components/infobox/box/box.component';\nimport { registerLocaleData } from '@angular/common';\nimport locales from '@angular/common/locales/de';\nimport { LOCALE_ID } from '@angular/core';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \nimport { InterceptorService } from './services/interceptor-service.service';\nimport { PrivateComponent } from './pages/private/private.component';\nimport { AdminComponent } from './pages/admin/admin.component' \nimport { ReplacePipe } from './services/replace_pipe';\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\nregisterLocaleData(locales, 'de');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    MapComponent,\n    PlotComponent,\n    TableComponent,\n    BoxComponent,\n    LoginComponent,\n    ProfileComponent,\n    PrivateComponent,\n    AdminComponent,\n    ReplacePipe\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    PlotlyModule,\n    FlexLayoutModule  ,\n    ReactiveFormsModule, \n    FormsModule, \n    HttpClientModule \n\n    \n  ],\n  providers: [{provide: LOCALE_ID, useValue: 'de-DE' },PlotlyService,\n\n  // This needs to be uncommented to provide  auth\n  { provide: HTTP_INTERCEPTORS, \n  useClass: InterceptorService, \n  multi: true } \n],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { \n  constructor(private plotlyService: PlotlyService) {\n    this.plotlyService.getPlotly().register(SVLocale);\n  }\n}\n","export default \".dynamicbg {\\n  background-color: var(--bgcolor);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FtYnVsYW50ZV9ub3RmYWVsbGUvYW1idWxhbnRlX25vdGZhZWxsZS9EYXNoYm9hcmQvc3JjL2FwcC9jb21wb25lbnRzL2luZm9ib3gvYm94L2JveC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9pbmZvYm94L2JveC9ib3guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxnQ0FIVTtBQ0NkIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9pbmZvYm94L2JveC9ib3guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbiR0aGViZ2NvbG9yIDogdmFyKC0tYmdjb2xvcik7IFxuXG4uZHluYW1pY2JnIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGhlYmdjb2xvcjtcbn0iLCIuZHluYW1pY2JnIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmdjb2xvcik7XG59Il19 */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { SelectControlValueAccessor } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-box',\n  templateUrl: './box.component.html',\n  styleUrls: ['./box.component.scss']\n})\nexport class BoxComponent implements OnInit {\n  @Input() value: number;\n  @Input() title: string;\n  @Input() description: string;\n  @Input() colors: string[];\n  @Input() cutoffs: string[];\n  @Input() maincolor: string;\n  @Input() numberformat: string;\n  @Input() maticon: string;\n  @Input() textbehind: boolean;\n  itemcolor:string;\n\n  constructor(private api:ApiService) { }\n\n\n  ngOnInit() {\n    this.value = Number(this.value);\n    if (!this.numberformat) { this.numberformat = '1.1-1'; }\n    if (!this.maincolor) { this.maincolor = this.api.primarycolor; }\n    if (!this.cutoffs) { this.cutoffs = []; }\n    this.setcolor();\n  };\n\n  setcolor() {\n    let color = this.maincolor;\n    this.itemcolor = this.maincolor;\n    \n    if (this.cutoffs.length > 0 && this.cutoffs.length == this.colors.length) {\n      let i = 0;\n      for (let cutvalue of this.cutoffs) {\n        if (Number(cutvalue) <= this.value) {\n          color = this.colors[i];\n        }\n        i = i + 1;\n      }\n\n    }\n    this.itemcolor = color;\n\n  }\n\n\n}\n\n\n","export default \".map-container {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  margin: 0;\\n}\\n\\n.map-frame {\\n  border: 1px solid lightgray;\\n  height: 100%;\\n}\\n\\n.mapdiv {\\n  height: 100%;\\n  min-height: 400px;\\n  background: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FtYnVsYW50ZV9ub3RmYWVsbGUvYW1idWxhbnRlX25vdGZhZWxsZS9EYXNoYm9hcmQvc3JjL2FwcC9jb21wb25lbnRzL2xlYWZsZXRtYXAvbWFwL21hcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9sZWFmbGV0bWFwL21hcC9tYXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFFSSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsU0FBQTtBQ0RKOztBREtFO0VBQ0UsMkJBQUE7RUFDQSxZQUFBO0FDRko7O0FES0U7RUFDRSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQ0ZKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sZWFmbGV0bWFwL21hcC9tYXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5tYXAtY29udGFpbmVyIHtcbiAgICBcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIFxuICB9XG4gIFxuICAubWFwLWZyYW1lIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyYXk7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIFxuICAubWFwZGl2IHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNDAwcHg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gIH1cblxuXG5cbiIsIi5tYXAtY29udGFpbmVyIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbi5tYXAtZnJhbWUge1xuICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyYXk7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLm1hcGRpdiB7XG4gIGhlaWdodDogMTAwJTtcbiAgbWluLWhlaWdodDogNDAwcHg7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xufSJdfQ== */\";","import { Component, OnInit, Input, Output, Renderer2, EventEmitter } from '@angular/core';\nimport * as L from 'leaflet';\nimport { icon, Marker } from 'leaflet';\nimport { HttpClient } from '@angular/common/http';\nimport { FeatureCollection } from 'geojson';\nimport { ApiService } from 'src/app/services/api.service';\nimport * as chroma from \"chroma-js\";\nimport { resourceUsage } from 'process';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n\n})\nexport class MapComponent implements OnInit {\n  @Input() data = [];\n  @Input() Outcome: String;\n  @Input() Zoom: number;\n  @Input() basemap: any; // geojson\n  @Input() center: any;\n  @Input() opacity: number;\n  @Input() feature: string; // name of outcome\n  @Input() colorscale: any;\n  @Input() cutofflist: any;\n  @Input() customlabels: any;\n  @Input() binmethod: string;\n  @Input() selectmap: boolean;\n  @Input() bins: number;\n  @Input() id: string; // feature id\n  @Input() percent: boolean;\n  @Output() clicked = new EventEmitter<string>();\n\n  mapok:boolean;\n  clickedvalue: string;\n  legend: any;\n  map: any;\n  @Input() containername: string;\n  useprovider = 0;\n  providers = ['https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png']\n  attributions = ['Kartenmaterial &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    '©OpenStreetMap, ©CartoDB'];\n  constructor(private http: HttpClient, private renderer: Renderer2, private api: ApiService) { }\n  \n  \n  ngOnInit(): void {\n    // Init vars\n    this.resetprops();\n    this.clickedvalue = \"\";\n  }\n  ngAfterViewInit(): void {\n    // Import Map data\n    if (this.checkallok()) {\n      this.initMap(this.containername);\n    }\n  }\n\n  \n\n  ngOnChanges(changes: any) {\n    // On any change replace the map-container\n    if (!this.selectmap) {\n      if ((changes.data || changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n    else {\n      if ((changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n\n\n  }\n\n  ngOnDestroy(){\n    this.map = null;\n    \n    }\n\n\n  resetprops() {\n    if (!this.containername) { this.containername = \"mapdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); };\n    if (!this.Zoom) { this.Zoom = 4; };\n    if (!this.center) { this.center = this.getcenter(); };// [51.948, 10.265]; };\n    if (!this.opacity) { this.opacity = .1; };\n    if (!this.customlabels) { this.customlabels = []; };\n    if (!this.binmethod) { this.binmethod = \"equalint\" };\n  }\n\n  checkallok() {\n    let res;\n    if (!this.selectmap) {\n      res = this.data && this.basemap;\n      if (res) {\n        res = this.data.length > 0 && this.basemap.features;\n      }\n\n    }\n    else {\n      res = this.basemap;\n      if (res) {\n        res = this.basemap.features;\n      }\n\n    }\n\n    return res;\n  }\n  preparedom(divid) {\n    if (document.getElementById(divid)) { document.getElementById(divid).remove() };\n    let mapcontainer = this.renderer.createElement(\"div\");\n    this.renderer.setProperty(mapcontainer, 'id', divid);\n    this.renderer.addClass(mapcontainer, \"mapdiv\");\n    this.renderer.appendChild(document.getElementById(\"map-frame\"), mapcontainer);\n    return true;\n  }\n\n  initMap(divid): void {\n    // Init\n    let mymap;\n    this.mapok = false;\n    let colors = this.colorscale;\n    let cutoffs = this.cutofflist;\n    let thedata;\n    if (this.data) {\n      thedata = Object.assign(this.data);\n    }\n    let propname = this.feature;\n    let theid = this.id;\n    let theopacity = this.opacity;\n    let basestyle = {\n      weight: 2,\n      dashArray: '',\n      \"color\": \"grey\",\n      \"fillOpacity\": theopacity,\n      \"Opacity\": theopacity\n    };\n\n    // Prepare dom\n    this.preparedom(divid);\n\n    // Load Map\n    mymap = L.map(divid, { center: this.center, zoom: this.Zoom });\n\n    // Fix Icons see https://stackoverflow.com/questions/41144319/leaflet-marker-not-found-production-env\n    const iconRetinaUrl = 'assets/marker-icon-2x.png';\n    const iconUrl = 'assets/marker-icon.png';\n    const shadowUrl = 'assets/marker-shadow.png';\n    const iconDefault = icon({\n      iconRetinaUrl,\n      iconUrl,\n      shadowUrl,\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      tooltipAnchor: [16, -28],\n      shadowSize: [41, 41]\n    });\n    Marker.prototype.options.icon = iconDefault;\n\n    // Load Tiles\n    let theprovider = this.useprovider;\n    const tiles = L.tileLayer(this.providers[theprovider],\n      {\n        maxZoom: 19, opacity: 1,\n        attribution: this.attributions[theprovider]\n      });\n    tiles.addTo(mymap);\n    mymap.attributionControl.setPrefix('<a href=\"https://www.zidatasciencelab.de\"><strong>Zi</strong> Data Science Lab</a>');\n    tiles.getContainer().className += ' custombgmap';\n\n    // Chloropleth Map\n    if (!this.selectmap) {\n\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      if (this.percent) {\n        for (let item of thedata) {\n          item['___thevalue'] = Math.round(item[this.feature] * 1000) / 10;\n        }\n      }\n      else {\n        for (let item of thedata) {\n          item['___thevalue'] = item[this.feature];\n        }\n      }\n      for (let item of geojsonFeature.features) {\n        let value = this.api.filterArray(thedata, this.id, item.properties[this.id]);\n        if (value.length > 0) {\n          item['properties'][propname] = value[0]['___thevalue'];\n        }\n        else {\n          item['properties'][propname] = null;\n        }\n      }\n\n\n      if (!cutoffs) {\n        cutoffs = this.makecutoffs(this.api.getValues(thedata, '___thevalue'), this.binmethod, this.bins);\n      };\n      if (colors.length < cutoffs.length) {\n        colors = this.makescale(cutoffs.length)\n      }\n\n      let myStyle = function (feature) {\n        let thevalue = feature.properties[propname];\n        let i = 0;\n        let result = basestyle;\n        let thecolor = colors[0];\n        for (let colorcode of colors) {\n          if (thevalue > cutoffs[i]) {\n            thecolor = colorcode;\n          };\n          i = i + 1;\n        }\n        if (thevalue != null) { result['color'] = thecolor; };\n        return result\n      };\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\") + (props && props[propname] ? '<br><strong>Wert: </strong>' + props[propname].toLocaleString() : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n      // Add Features/Polygons to Map\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.zoomToFeature(mymap, e))\n            })\n          )\n        });\n      featLayer.resetStyle();\n      featLayer.addTo(mymap);\n\n      // Add Legend to Map\n      let labels\n      if (this.customlabels) { labels = this.customlabels; };\n\n      let legend;\n      legend = L.control.layers({}, {}, { position: 'topright' });\n\n      legend.onAdd = function (map) {\n\n        this._ldiv = L.DomUtil.create('div', 'customlegend');\n        this._ldiv.innerHTML = '<p><strong>' + propname + '</strong></p>';\n        if (this.percent == true) {\n          this._ldiv.innerHTML += '<p><em>Anteil in %</em></p>';\n        }\n        if (cutoffs) {\n          for (var i = 0; i < cutoffs.length; i++) {\n            if (labels.length == cutoffs.length) {\n              this._ldiv.innerHTML +=\n                '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                labels[i];\n            }\n            else {\n              if (cutoffs.length > 4) {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i> ' +\n                  cutoffs[i].toLocaleString() + (cutoffs[i + 1] ? ' bis unter ' + cutoffs[i + 1].toLocaleString() + '<br>' : '+');\n              }\n              else {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                  (cutoffs[i + 1] ? 'bis ' + cutoffs[i + 1].toLocaleString() + \"&nbsp;\" : cutoffs[i].toLocaleString() + '+');\n              }\n            }\n          }\n        }\n\n        return this._ldiv;\n      };\n\n      legend.addTo(mymap);\n    }\n    else {\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      colors = this.makescale(2);\n      let myStyle = function (feature) {\n        let res = basestyle;\n        let thecolor= \"grey\";\n        if (feature.properties['___clicked']) {\n          thecolor = colors[1];\n        }\n        res['color']=thecolor;\n        return res;\n      }\n\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.selectarea(mymap, e))\n            })\n          )\n        });\n      featLayer.addTo(mymap);\n\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n    }\n    this.mapok=true;\n\n  };\n\n  highlightFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity * 1.2\n    });\n    info.update(layer.feature.properties);\n  }\n\n  resetFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity,\n    });\n    info.update();\n  }\n  makecutoffs(array, method = \"equalint\", bins) {\n    let result = [];\n    let minv = Math.min(...array);\n    let maxv = Math.max(...array);\n    let steps = Math.round((maxv - minv) / bins);\n    let i = 0;\n    while (i < bins) {\n      result.push((i + 1) * steps + minv);\n      i = i + 1;\n    }\n    return result;\n\n  }\n\n\n  newclick(e){\n    let res = [];\n    for (let item of this.basemap.features){\n      if (item.properties[this.id]==e){\n        item.properties['___clicked']=true;\n      }\n      else {\n        item.properties['___clicked']=false;\n      }\n      res.push(item);\n    }\n    this.basemap['features']=res;\n    this.initMap(this.containername);\n  }\n\n  zoomToFeature(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n  }\n\n  selectarea(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n    this.newclick(e.target.feature.properties[this.id]);\n  }\n\n  makescale(bins = 5) {\n    return chroma.scale([chroma(this.api.primarycolor).set('hsl.h', -120), this.api.primarycolor]).colors(bins);\n  }\n\n  getcenter() {\n    let features = this.basemap.features;\n    let coords = { 'a': [], 'b': [] };\n    for (let item of features) {\n      for (let area of item.geometry.coordinates) {\n        for (let subarea of area) {\n          coords['a'].push(subarea[0])\n          coords['b'].push(subarea[1])\n        }\n      }\n    }\n    let a = coords['a'].reduce((pv, cv) => pv + cv, 0) / coords['a'].length;\n    let b = coords['b'].reduce((pv, cv) => pv + cv, 0) / coords['b'].length;\n\n    return [b, a]\n  }\n\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGxvdGx5L3Bsb3QvcGxvdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input, PLATFORM_INITIALIZER } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-plot',\n  templateUrl: './plot.component.html',\n  styleUrls: ['./plot.component.scss']\n})\nexport class PlotComponent implements OnInit {\n  @Input() data: any;\n  @Input() xvalue: string;\n  @Input() colorby: string;\n  @Input() outcomes: any;\n  @Input() outcomelabels = [];\n  @Input() plottype: String; // [\"bar\",\"hbar\",\"tsline\"]; \n  @Input() customdata: any;\n  @Input() customconfig: any;\n  @Input() customlayout: any;\n  @Input() custommargins: any;\n  @Input() linewidth: number;\n  @Input() showlegend: boolean;\n  @Input() sort: boolean;\n  @Input() percent: boolean;\n  @Input() percentx: boolean;\n  @Input() basecolor = \"\";\n  @Input() colorscheme = [];\n  @Input() annotations = [];\n  @Input() hovertemplate = \"\";\n  @Input() plottitle = \"\";\n  @Input() plotsubtitle = \"\";\n  @Input() plotcaption = \"\";\n  @Input() n_yticks = 8;\n  @Input() xtickformat = \"\";\n  @Input() xtitle = \"\";\n  @Input() ytitle = \"\";\n  @Input() id = \"\";\n  @Input() divid = \"\";\n  @Input() fontfamily = \"Lato, sans-serif\";\n  @Input() fontsize = \".85rem\";\n  @Input() fontcolor= \"black\";\n  @Input() legendbg='ffffff20'; \n  @Input() legendposx='right'; \n  @Input() legendposy=1; \n\n  constructor(private api:ApiService) { }\n  plotlayout: any;\n  plotdata: any;\n  mainconfig: any;\n  plotlytype: string;\n\n\n  ngOnInit(): void {\n    if (this.divid==\"\"){this.divid= \"plotdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString();}\n    if (!this.linewidth) { this.linewidth = 2 };\n    if (this.basecolor==\"\") { this.basecolor=this.api.primarycolor};   \n    if (this.colorscheme.length==0){this.colorscheme=[this.basecolor];}\n    this.make_plot();\n  }\n\n  \n\n  ngOnChanges(changes: any) {\n    setTimeout(()=>{this.make_plot()},0);\n  }\n\n\n  make_plot() {\n    this.mainconfig = {\n      displayModeBar: false,\n      scrollZoom: false,\n      autosizable: true,\n      locale: 'de',\n      doubleClick: 'reset',\n      showAxisDragHandles: false,\n      showAxisRangeEntryBoxes: false,\n      showTips: true\n    };\n    if (this.plottype == \"bar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: { fixedrange: true, showgrid: false, title: '', \n        automargin: true, rangemode: 'tozero',ticksuffix:\" \" , nticks:this.n_yticks},\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"violin\") {\n      this.plotlytype = \"violin\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: {  zeroline: false , automargin: true, rangemode: 'tozero',ticksuffix:\" \" },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"stackedbar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        barmode: \"stack\",\n        xaxis: { fixedrange: false, showgrid: false, type: 'category', automargin: false},\n        yaxis: { fixedrange: true, title: '',  autosize: true, automargin: true, \n        rangemode: 'tozero',ticksuffix:\" \" , \n        zerolinecolor: this.fontcolor,\n        zerolinewidth: 2,\n        nticks:this.n_yticks},\n        padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n    \n    }\n\n    if (this.plottype == \"tsline\" || this.plottype == \"lines\" || this.plottype == \"area\" || this.plottype == \"stackedarea\" || this.plottype == 'scatter') {\n      this.plotlytype = \"lines\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, showgrid: false, automargin: false ,zeroline: false},\n        yaxis: {\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\n          gridcolor: \"lightgrey\",\n          gridpattern: \"dot\",\n          gridwidth: 1,\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          annotations: this.annotations,\n          ticksuffix:\" \",\n          nticks:this.n_yticks          \n        },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 20, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\"\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n      if (this.percentx){\n        this.plotlayout.xaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"hbar\") {\n      this.plotlytype = \"hbar\";\n      this.plotlayout = {\n        xaxis: { fixedrange: true, showgrid: true, title: '',       \n          automargin: true, nticks:this.n_yticks },\n        yaxis: { fixedrange: false, type: 'category', automargin: true, \n        rangemode: 'tozero' ,ticksuffix:\" \",\n        zerolinecolor: this.fontcolor,\n        zerolinewidth: 2},\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 200, r: 0, b: 20, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n\n      };\n    }\n    if (this.custommargins) {\n      this.plotlayout['margin'] = this.custommargins;\n    }\n    if (this.showlegend) {\n      this.plotlayout['showlegend'] = true;\n    }\n\n    if (this.xtickformat!=''){\n      this.plotlayout['xaxis']['tickformat']=this.xtickformat;\n    }\n\n    this.plotlayout['font']= {\n      family: this.fontfamily,\n      size: this.fontsize,\n      color: this.fontcolor\n    };\n    \n    if (this.xtitle!==\"\"){\n      this.plotlayout['xaxis']['title']=this.xtitle;\n      this.plotlayout['xaxis']['titlefont']=\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n\n    }\n    if (this.ytitle!==\"\"){\n      this.plotlayout['yaxis']['title']=this.ytitle;\n      this.plotlayout['yaxis']['titlefont']=\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n\n    }\n\n    let plotdata = []\n    for (let item of this.data){\n      plotdata.push(item);\n    }\n    if (this.sort){\n      plotdata=this.api.sortArray(plotdata,this.outcomes[0]);\n    }\n    \n    \n    let outcomes = this.outcomes;\n    if (this.colorby) {\n      outcomes = this.api.getuniqueValues(plotdata, this.colorby);\n      this.colorscheme=this.api.makescale(outcomes.length);\n      plotdata = this.make_colorbyvalues();\n    }\n  \n   this.plotdata = this.make_plotdata(plotdata, this.xvalue, outcomes, this.plotlytype);    \n   // DEBUG\n   \n  }\n\n  make_colorbyvalues() {\n    let newdata = [];\n    let inputdata = this.data;\n    let thecolorvalues = this.api.getuniqueValues(inputdata, this.colorby).sort();\n    let thexvalues = this.api.getuniqueValues(inputdata, this.xvalue);\n    let theoutcome = this.outcomes[0];\n    for (let xvalue of thexvalues) {\n      let topush = {};\n      topush[this.xvalue] = xvalue;\n      for (let tocolor of thecolorvalues) {\n        let datapoint = this.api.filterArray(this.api.filterArray(inputdata, this.colorby, tocolor), this.xvalue, xvalue)[0];\n        if (datapoint) {\n          topush[tocolor] = datapoint[theoutcome];\n        }\n      }\n      newdata.push(topush);\n    }\n    return newdata;\n\n  }\n\n\n\n  make_trace(xdata, ydata = [], name: string, type = \"\") {\n    let trace = {\n      x: xdata,\n      y: ydata,\n      name: name,\n      type: type\n    }\n    if (this.plottype == \"stackedarea\") {\n      trace['stackgroup'] = \"one\";\n    }\n    if (this.hovertemplate != \"\") {\n      trace['hovertemplate'] = this.hovertemplate;\n    }\n    return trace;\n  }\n\n  make_plotdata(source = [], xaxis = \"\", ylist = [], type = \"bar\", colors = this.colorscheme) {\n    let xdata = this.api.getValues(source, xaxis)\n    let list = []\n    let i = 0\n    for (let name in ylist) {\n      let theydata = this.api.getValues(source, ylist[i]);\n      let tracename = ylist[i];\n      if (this.outcomelabels.length == ylist.length){\n        tracename = this.outcomelabels[i];\n      }\n      let trace = this.make_trace(xdata, theydata  ,tracename, type = type);\n      if (type == \"hbar\") {\n        trace = this.make_trace(this.api.getValues(source, ylist[i]), xdata, ylist[i], type = \"bar\")\n        trace[\"orientation\"] = \"h\"\n      }\n      if (type == \"bar\" || type == \"bar\" || type == \"scatter\") {\n        trace[\"marker\"] = {\n          color: colors[i]\n        }     }\n       \n        \n      \n      if (type == \"lines\") {\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth*2          \n        }\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth*5\n        }\n      }\n      if (this.plottype == \"area\") {\n        trace[\"fill\"] = \"tozeroy\";\n      }\n      if (this.plottype == \"violin\") {\n        trace = this.make_trace(name, theydata  , ylist[i], type = type);\n        trace['x']=name;\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth\n        }\n      }\n      if (this.plottype == \"scatter\") {\n        trace['mode']='markers';\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth*5\n        }\n        if (this.id!=\"\"){\n          trace[\"text\"] =  this.api.getValues(source, this.id);   \n          trace[\"textfont\"]={family: this.fontfamily}; \n          if (trace['x'].length<50){\n            trace['mode']='markers+text';    \n            trace['textposition']= 'bottom center';\n          }  \n          else {\n            trace['mode']='markers';    \n          }\n\n\n          \n        }\n        \n        }\n\n      list.push(trace)\n      i = i + 1\n    }\n    return list\n  } \n \n \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFibGUvdGFibGUvdGFibGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { AfterViewInit, Component, OnInit, Input ,ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n  @Input() data:any;\n  @Input() columns:any;\n  @Input() outcomes_numeric:any;\n  @Input() outcomes_rate:any;\n  @Input() newlabels:any;\n  @Input() pagesizes:any;\n  @Input() addfilter:boolean;\n  @Input() addrank:boolean;\n\n  datasource:any;\n  displayedColumns:String[];\n\n  \n  constructor() { }\n\n\n  ngOnInit(){\n  if (!this.outcomes_numeric){this.outcomes_numeric=[]};\n  if (!this.outcomes_rate){this.outcomes_rate=[]};\n  if (!this.pagesizes){this.pagesizes=[10, 50,100]};\n  this.displayedColumns =  this.columns;\n  this.datasource = new MatTableDataSource(this.data); \n  if (this.addrank){\n\n  }\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;    \n  }\n\n  ngOnChanges(changes: any) {\n    this.displayedColumns =  this.columns;\n    this.datasource = new MatTableDataSource(this.data); \n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;   \n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.datasource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","export default \".tabheader {\\n  font-weight: bold;\\n  margin-bottom: 1.2rem;\\n  border-bottom: 1px;\\n  border-color: darkgray;\\n}\\n\\n.smalltab {\\n  font-size: 0.9rem;\\n  line-height: 0.9rem;\\n  background-color: white;\\n  padding: 1.2em;\\n  border-radius: 15px;\\n}\\n\\n.tabvalues {\\n  font-weight: bold;\\n}\\n\\n.mat-form-field {\\n  font-weight: bold;\\n}\\n\\ntextarea {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FtYnVsYW50ZV9ub3RmYWVsbGUvYW1idWxhbnRlX25vdGZhZWxsZS9EYXNoYm9hcmQvc3JjL2FwcC9wYWdlcy9hZG1pbi9hZG1pbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWRtaW4vYWRtaW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFFSSxpQkFBQTtFQUNBLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxzQkFBQTtBQ0RKOztBRElBO0VBQ0ksaUJBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FDREo7O0FESUE7RUFDSSxpQkFBQTtBQ0RKOztBRElBO0VBQ0ksaUJBQUE7QUNESjs7QURJQTtFQUVFLFdBQUE7QUNGRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkbWluL2FkbWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4udGFiaGVhZGVyIHtcblxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbi1ib3R0b206IDEuMnJlbTtcbiAgICBib3JkZXItYm90dG9tOiAxcHg7XG4gICAgYm9yZGVyLWNvbG9yOiBkYXJrZ3JheTtcbn1cblxuLnNtYWxsdGFiIHtcbiAgICBmb250LXNpemU6IC45cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAuOXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO1xuICAgIHBhZGRpbmc6IDEuMmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG59XG5cbi50YWJ2YWx1ZXMge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIFxufVxudGV4dGFyZWFcbntcbiAgd2lkdGg6MTAwJTtcbn0iLCIudGFiaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi1ib3R0b206IDEuMnJlbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4O1xuICBib3JkZXItY29sb3I6IGRhcmtncmF5O1xufVxuXG4uc21hbGx0YWIge1xuICBmb250LXNpemU6IDAuOXJlbTtcbiAgbGluZS1oZWlnaHQ6IDAuOXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDEuMmVtO1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuXG4udGFidmFsdWVzIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG50ZXh0YXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { version } from 'src/../package.json';\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthService,\n    private fb: FormBuilder) { }\n\n  users: any;\n  myRegform: any;\n  myDataUploadform: any;\n  adduser: boolean;\n  newuser: any;\n  adddata: boolean;\n  uploaderror: any;\n  datafile: any;\n  metadatafile: any;\n  metadone: boolean;\n  replacedata = true;\n  geojsonfile: any;\n  geouploadinfo: any;\n  areafeatures: any;\n  uploadres: string;\n  dataintend: string;\n  datacheck = [];\n  areavalues: any;\n  currentuser: any;\n  allmetadata: any;\n  datafilearray:any;\n  backenddoc:any;\n  uploadarea: string;\n  uploadareaid: string;\n  topicoptions = ['ordering', 'subgroups', 'demography', 'outcomes']\n  typeoptions = ['level', 'levelid', 'group', 'rate', 'number']\n  appversion:string = version;\n  ngOnInit(): void {\n    this.currentuser = this.auth.getUserDetails();\n    this.updateuserlist();\n    this.resetall();\n    this.buildForm();\n    this.allmetadata = this.api.getmetadata(\"metadata\");\n    let currentmetadata = this.api.filterArray(this.allmetadata, 'type', 'level')[0];\n\n    setTimeout(() => { this.areavalues = this.api.filterArray(this.api.getmetadata(\"sortdata\"), 'varname', currentmetadata[\"varname\"])[0]['values']; }, 0);\n    this.api.getTypeRequest('openapi.json').subscribe(\n      data=>{this.backenddoc=data;});\n    \n  }\n\n  ngOnDestroy(){\n    this.datafile = [];\n    this.metadatafile = [];\n    this.datafilearray = [];\n    \n    }\n\n  //File upload function\n  changeListener(event) {\n    let files = event.target.files;\n    let file = files[0];\n    let reader: FileReader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = (e) => {\n      this.datafile = reader.result;\n      let datalines = this.datafile.split('\\n');\n      let varnames = this.datafile.split('\\n').map(data => data.split(','))[0];\n      let newvarnames = [];\n      for (let thevar of varnames){\n        let topush = thevar.replace('.',\"_\");\n        newvarnames.push(topush);\n      }\n      datalines.shift();\n      this.datafile = [newvarnames.join(',')].concat(datalines).join('\\n');\n      varnames = newvarnames;\n      this.datafilearray = this.csvToDataArray(this.datafile);\n      let newmetadata = [];\n      let index = 0;\n      for (let varname of varnames) {\n        index = index + 1;\n        let topush = { 'varname': varname.replace(/(\\r\\n|\\n|\\r)/gm, \"\"), 'topic': \"\", 'description': \"\", \"allforlevel\": '',  \"publiclevels\": [] , \"public\" : false }\n        if (index == 1) {\n          topush[\"topic\"] = \"ordering\";\n          topush[\"type\"] = \"level\";         \n        }\n        if (index == 2) {\n          topush[\"topic\"] = \"ordering\";\n          topush[\"type\"] = \"levelid\";\n        }\n        if (index > 2) {\n          topush[\"type\"] = \"rate\";\n          topush[\"topic\"] = \"outcomes\";\n        }\n\n\n        newmetadata.push(topush);\n\n      }\n      this.metadone = false;\n      setTimeout(() => {\n        this.metadatafile = newmetadata;\n        this.checkmetadata();\n      }, 0); // fixes https://blog.angular-university.io/angular-debugging/\n\n    };\n\n\n  }\n\n  changeListenerGEOJSON(event) {\n    let files = event.target.files;\n    let file = files[0];\n    let reader: FileReader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = (e) => {\n      setTimeout(() => {\n        this.geojsonfile = JSON.parse(reader.result.toString());\n        setTimeout(() => {\n          this.areafeatures = Object.keys(this.geojsonfile['features'][0]['properties']);\n        }, 0);\n      }, 0); // fixes https://blog.angular-university.io/angular-debugging/\n\n    };\n\n\n  }\n\n\n  csvToArray(text) {\n    let p = '', row = [''], ret = [row], i = 0, r = 0, s = !0, l;\n    for (l of text) {\n      if ('\"' === l) {\n        if (s && l === p) row[i] += l;\n        s = !s;\n      } else if (',' === l && s) l = row[++i] = '';\n      else if ('\\n' === l && s) {\n        if ('\\r' === p) row[i] = row[i].slice(0, -1);\n        row = ret[++r] = [l = '']; i = 0;\n      } else row[i] += l;\n      p = l;\n    }\n    return ret;\n  };\n\n\n  getrefvalues(value) {\n    let data = this.datafile.split(/\\r|\\n|\\r/);\n    let dataarray = [];\n    let index = this.api.getValues(this.metadatafile, \"varname\").indexOf(value);\n    let i = 0;\n    for (let row of data) {\n      let topush = this.csvToArray(row)[0][index]\n      if (i > 0 && dataarray.indexOf(topush) < 0) { dataarray.push(topush) }\n      i = i + 1;\n    }\n\n    return dataarray;\n  }\n\n  updateuser(user, key, value) {\n    this.api.updateuser(user, key, value).subscribe(\n      data => { this.updateuserlist() });\n  }\n\n  deletuser(user) {\n    this.api.deleteuser(user).subscribe(\n      data => { this.updateuserlist() });\n  }\n\n  updateuserlist() {\n    this.api.getTypeRequest('users').subscribe(data => { this.users = data; })\n  }\n\n  buildForm() {\n\n    this.myRegform = this.fb.group(\n      {\n        anrede: [\"\", [\n          Validators.required,\n          Validators.minLength(1)]],\n        password: [\"\", [Validators.minLength(12)]],\n        firstname: [\"\", [\n          Validators.required,\n          Validators.minLength(2)]],\n        lastname: [\"\", [\n          Validators.required,\n          Validators.minLength(2)]],\n        email: [\"\", [Validators.required, Validators.email]]\n      }\n    );\n    this.myRegform.patchValue({ \"password\": this.rndpwd() });\n\n  };\n\n  buildDataUploadForm() {\n\n    \n    if (this.dataintend == 'geodataupload') {\n      this.myDataUploadform = new FormData();\n      this.geouploadinfo = {\n        'client_id': this.api.REST_API_SERVER_CLIENTID,\n        'levelnamevar': this.api.filterArray(this.allmetadata, \"type\", \"level\")[0]['varname'],\n        'levelname': this.uploadarea,\n        'levelidvar': this.api.filterArray(this.allmetadata, \"type\", \"levelid\")[0]['varname'],\n        'levelidname': this.uploadareaid\n      }\n      this.myDataUploadform.append('geodata', new Blob([JSON.stringify(this.geojsonfile)], { type: 'application/geo+json' }));\n      this.myDataUploadform.append('geodatainfo', JSON.stringify(this.geouploadinfo));      \n    }\n\n    if (this.dataintend == 'dataupload') {\n      this.myDataUploadform = new FormData();\n      this.myDataUploadform.append('data', new Blob([this.datafile], { type: 'text/csv' }));\n      this.myDataUploadform.append('metadata', this.arrayToCsv(this.metadatafile));\n    }\n  }\n\n\n  uploadnewdata() {\n    this.buildDataUploadForm();\n    this.uploadres = \"pending\";\n    this.uploaderror = null;\n    if (this.dataintend == 'dataupload') {\n      this.api.postTypeRequestnotimeout('upload_data/?replacedata=' + this.replacedata, this.myDataUploadform).subscribe(data => {\n        this.uploadres = \"success\";\n        setTimeout(() => {\n          this.resetall();\n        }, 1500);\n      },\n        error => {\n          this.uploadres = \"error\";\n          this.uploaderror = error.error;\n        })\n    }\n    if (this.dataintend == 'geodataupload') {\n      this.api.postTypeRequestnotimeout('upload_geodata/', this.myDataUploadform).subscribe(data => {\n        this.uploadres = \"success\";\n        setTimeout(() => {\n          this.resetall();\n        }, 1500);\n      },\n        error => {\n          this.uploadres = \"error\";\n          this.uploaderror = error.error.detail;\n        })\n      \n    }\n\n  }\n\n  checkmetadata() {\n    let err = []\n    let test1counter = 0;\n    let test2 = true;\n    let test3 = true;\n    let test4 = true;\n    let test5 = true;\n    let test6 = true;\n    for (let item of this.metadatafile) {\n\n      if (item.topic == \"ordering\" && ['levelid', 'level'].indexOf(item.type) >= 0) { test1counter = test1counter + 1; }\n      if (item.topic == \"subgroups\" && item.type !== 'group') { item.type = 'group'; }\n      if (item.topic == \"outcomes\" && ['rate', 'number'].indexOf(item.type) < 0) { test3 = false; }\n      if (item.topic == \"demography\" && ['rate', 'number'].indexOf(item.type) < 0) { test4 = false; }\n    }\n    if (test1counter !== 2) {\n      err.push(\"Level, and levelid missing or not labelled as topic.\")\n    }\n    if (!test2) {\n      err.push(\"Subgroups not typed correctly\")\n    }\n    if (!test3) {\n      err.push(\"Outcomes not typed correctly\")\n    }\n    if (!test4) {\n      err.push(\"Demography not typed correctly\")\n    }\n    let test5data = this.api.filterArray(this.metadatafile, 'topic', 'ordering').concat(this.api.filterArray(this.metadatafile, 'topic', 'subgroups'))\n    test5 = this.api.getValues(this.api.filterArray(test5data, 'allforlevel', ''), 'allforlevel').length == 0;\n\n    if (!test5) {\n      err.push(\"Reference Levels not specified\")\n    }\n\n    let test6data = this.api.filterArray(this.metadatafile, 'type', 'level')[0];\n    test6 = ((test6data['publiclevels'].length == 0) || !test6data['public']) || ((test6data['publiclevels'].length >0) && test6data['public'])\n    if (!test6) {\n      err.push(\"No public levels not for public level var specified\")\n    }\n\n    let test7 = this.metadatafile.length == this.api.getValues(this.metadatafile,\"varname\").length\n    if (!test7) {\n      err.push(\"Lengths not matching, data cols:\"+this.api.getValues(this.metadatafile,\"varname\").length+\", meta vars:\"+this.metadatafile.length)\n    }\n\n    // Check if no null values in topics==ordering or topics==subgroups\n    let test8tocheck = this.api.getValues(this.api.filterArray(this.metadatafile,\"topic\",\"ordering\"),\"varname\").concat(\n      this.api.getValues(this.api.filterArray(this.metadatafile,\"topic\",\"subgroups\"),\"varname\"));\n    let test8datalen = this.datafilearray.length;\n    let test8 = true\n    let test8problems = [];\n    for (let tocheckvar of test8tocheck){\n      let newlength = this.api.getValues(this.datafilearray,tocheckvar).filter(x => x!=null).filter(x => x!=\"\").length+1\n      test8 = test8 && (newlength==test8datalen)\n      if (newlength!==test8datalen){\n        test8problems.push(\" \"+tocheckvar+\" (n=\"+Math.abs( newlength-test8datalen)+\")\");\n      }\n    }\n    if (!test8) {\n      err.push(\"Missings in Ordering or Subgroup vars: \"+test8problems.toString())\n    }\n    this.datacheck = err;   \n  }\n\n  addusernow() {\n    let toadd = this.myRegform.value;\n    this.api.postTypeRequest(\"newuser\", toadd).subscribe(\n      data => {\n        this.adduser = false;\n        this.updateuserlist();\n      }\n    );\n\n\n  }\n\n  chpwd(user, pwd) {\n    this.api.changeuserpwd(user, pwd).subscribe(data => { this.updateuserlist() })\n  }\n\n  rndpwd() {\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\n  }\n\n  copy(item) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', (item));\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n    document.execCommand('copy');\n  }\n\n  resetall() {\n    this.adddata = !this.adddata;\n    this.datafile = null;\n    this.metadone = null;\n    this.metadatafile = null;\n    this.uploadres = null;\n    this.datacheck = [];\n    this.adduser = false;\n    this.adddata = false;\n    this.datafile = null;\n    this.metadatafile = null;\n    this.geojsonfile = null;\n    this.uploadarea = null;\n    this.geouploadinfo = null;\n    this.uploadareaid = null;\n\n  }\n\n  arrayToCsv(rows: object[]) {\n    if (!rows) {\n      return;\n    }\n    if (rows && !rows.length) {\n      rows = [rows];\n    }\n    const separator = ',';\n    const keys = Object.keys(rows[0]);\n    const csvContent =\n      keys.join(separator) +\n      '\\n' +\n      rows.map(row => {\n        return keys.map(k => {\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\n          cell = cell instanceof Date\n            ? cell.toLocaleString()\n            : cell.toString().replace(/\"/g, '\"\"');\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\n            cell = `\"${cell}\"`;\n          }\n          return cell;\n        }).join(separator);\n      }).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    return blob;\n  }\n\n  csvToDataArray(str, delimiter = \",\") {\n    const headers = str.slice(0, str.indexOf(\"\\n\")).split(delimiter);\n    const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\");\n    const arr = rows.map(function (row) {\n      const values = row.split(delimiter);\n      const el = headers.reduce(function (object, header, index) {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return el;\n    });\n    return arr;\n  }\n\n \n\n}\n","export default \"/* Change Autocomplete styles in Chrome*/\\ninput:-webkit-autofill,\\ninput:-webkit-autofill:hover,\\ninput:-webkit-autofill:focus,\\ntextarea:-webkit-autofill,\\ntextarea:-webkit-autofill:hover,\\ntextarea:-webkit-autofill:focus,\\nselect:-webkit-autofill,\\nselect:-webkit-autofill:hover,\\nselect:-webkit-autofill:focus {\\n  border: 0px solid white;\\n  -webkit-text-fill-color: #ffffff;\\n  -webkit-box-shadow: 0 0 0px 1000px rgba(0, 0, 0, 0) inset;\\n  -webkit-transition: background-color 5000s ease-in-out 0s;\\n  transition: background-color 5000s ease-in-out 0s;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FtYnVsYW50ZV9ub3RmYWVsbGUvYW1idWxhbnRlX25vdGZhZWxsZS9EYXNoYm9hcmQvc3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0NBQUE7QUFDQTs7Ozs7Ozs7O0VBU0UsdUJBQUE7RUFDQSxnQ0FBQTtFQUNBLHlEQUFBO0VBQ0EseURBQUE7RUFBQSxpREFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDaGFuZ2UgQXV0b2NvbXBsZXRlIHN0eWxlcyBpbiBDaHJvbWUqL1xuaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbCxcbmlucHV0Oi13ZWJraXQtYXV0b2ZpbGw6aG92ZXIsIFxuaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyxcbnRleHRhcmVhOi13ZWJraXQtYXV0b2ZpbGwsXG50ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsOmhvdmVyLFxudGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyxcbnNlbGVjdDotd2Via2l0LWF1dG9maWxsLFxuc2VsZWN0Oi13ZWJraXQtYXV0b2ZpbGw6aG92ZXIsXG5zZWxlY3Q6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyB7XG4gIGJvcmRlcjogMHB4IHNvbGlkIHJnYigyNTUsIDI1NSwgMjU1KTtcbiAgLXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6ICNmZmZmZmY7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDBweCAxMDAwcHggcmdiYSgwLCAwLCAwLCAwKSBpbnNldDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciA1MDAwcyBlYXNlLWluLW91dCAwcztcbn0iLCIvKiBDaGFuZ2UgQXV0b2NvbXBsZXRlIHN0eWxlcyBpbiBDaHJvbWUqL1xuaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbCxcbmlucHV0Oi13ZWJraXQtYXV0b2ZpbGw6aG92ZXIsXG5pbnB1dDotd2Via2l0LWF1dG9maWxsOmZvY3VzLFxudGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbCxcbnRleHRhcmVhOi13ZWJraXQtYXV0b2ZpbGw6aG92ZXIsXG50ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsOmZvY3VzLFxuc2VsZWN0Oi13ZWJraXQtYXV0b2ZpbGwsXG5zZWxlY3Q6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbnNlbGVjdDotd2Via2l0LWF1dG9maWxsOmZvY3VzIHtcbiAgYm9yZGVyOiAwcHggc29saWQgd2hpdGU7XG4gIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiAjZmZmZmZmO1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAwcHggMTAwMHB4IHJnYmEoMCwgMCwgMCwgMCkgaW5zZXQ7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgNTAwMHMgZWFzZS1pbi1vdXQgMHM7XG59Il19 */\";","import { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \nimport {HttpParams} from '@angular/common/http';  \nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n \n@Component({ \n  selector: 'app-login', \n  templateUrl: './login.component.html', \n  styleUrls: ['./login.component.scss'] \n}) \nexport class LoginComponent implements OnInit { \n  form: FormGroup \n  constructor( \n    private _api : ApiService, \n    private _auth: AuthService, \n    private router: Router, \n    public fb: FormBuilder \n    \n    \n  ) { }\n  loggedin:boolean; \n  login_pending:boolean;\n  loginerror:boolean;\n\n\n \n  ngOnInit(): void { \n    this.login_pending = false;\n    this.form = this.fb.group({ \n      username: ['', Validators.required], \n      password:['', Validators.required] \n    }); \n    if(this._auth.getToken()){this.loggedin=true;}\n  } \n \n  login(){\n    this.login_pending = true;\n    this._auth.login(this.form.value).subscribe(data => {\n      setTimeout(()=>{\n        this.loggedin=true; \n        this.router.navigate(['/']);\n      },750);    \n      \n    },error => {\n      this.loginerror = true;\n    });\n    this.login_pending = false;\n  }\n  \n  logout(){\n    this._auth.logout();    \n    this.router.navigate(['/']);\n  }\n \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByaXZhdGUvcHJpdmF0ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-private',\n  templateUrl: './private.component.html',\n  styleUrls: ['./private.component.scss']\n})\nexport class PrivateComponent implements OnInit {\n\n  \n  constructor(private api:ApiService, private auth:AuthService) { }\n\n  actions =  ['Regionen beschreiben','Analysen']\n  intend =\"\";\n  metadata:any;\n  sortdata:any;\n  geojson_available:any;\n  levelid:string;\n  level:string;\n  levelvalues:any;\n  currentlevel:string;\n  currentregion:string;\n  mapdata:any;\n  regiondata:any;\n  overalldata:any;\n  andata:any;\n  outcomes:any;\n  outcome:string;\n  determinants:any;\n  determinant:string;\n  controls:any;\n  regressiondata:any;\n\n  ngOnInit(): void {\n    this.controls=[];\n    this.intend = this.actions[0];\n    this.metadata = this.api.getmetadata(\"metadata\");\n    this.sortdata = this.api.getmetadata(\"sortdata\");\n    this.geojson_available = this.api.getmetadata(\"geodata\");\n    setInterval(()=>{this.auth.getRefreshToken()},60*1000*5)\n    this.updatesortinfo();\n    if (!this.levelid){\n      setTimeout(()=>{this.updatesortinfo();},750);\n    }\n    setTimeout(()=>{this.getregionandata();},750);\n  }\n\n  ngOnDestroy(){\n    this.regiondata=null;\n    this.andata=null;\n    this.regressiondata=null;\n    this.mapdata=null;\n    this.overalldata=null;\n    }\n\n\n  updatesortinfo(){\n    this.levelid=this.api.filterArray(this.metadata,\"type\",\"levelid\")[0]['varname'];\n    this.level = this.api.filterArray(this.metadata, \"type\", \"level\")[0][\"varname\"];\n    this.levelid=this.api.filterArray(this.metadata,\"type\",\"levelid\")[0]['varname'];\n    this.outcomes=this.api.filterArray(this.metadata,\"topic\",\"outcomes\");\n    this.determinants=this.api.filterArray(this.metadata,\"topic\",\"demography\");\n    this.levelvalues = this.api.filterArray(this.sortdata, \"varname\", this.level)[0][\"values\"].filter(x => this.geojson_available.includes(x));;\n    this.currentlevel=this.levelvalues[0];\n    this.newlevel(this.currentlevel);\n    this.currentregion=\"\";\n  }\n  newlevel(level){  \n    this.currentlevel=level;\n    this.api.getTypeRequest('get_geodata/?client_id=' + this.api.REST_API_SERVER_CLIENTID + '&levelname=' + this.currentlevel).subscribe(\n      data => {\n        this.mapdata = data;\n      });\n  }\n\n  changeregion(event){\n    this.currentregion=event;\n    this.getregiondata();\n  }\n\n  getregiondata(){\n    // Region\n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {}\n    };\n    // Overall\n    let refquery = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {}\n    };\n    for (let item of this.metadata){\n      if (['ordering','subgroups'].indexOf(item.topic)>=0){\n        refquery[\"groupinfo\"][item.varname]=item.allforlevel;\n      }       \n    }\n    query[\"groupinfo\"][this.level] = this.currentlevel;\n    query[\"groupinfo\"][this.levelid] = this.currentregion;\n    \n    this.api.postTypeRequest('get_data/', query).subscribe(data => {\n      this.regiondata=data['data'][0];\n      this.api.postTypeRequest('get_data/', refquery).subscribe(data => {\n        this.overalldata=data['data'][0];\n      },\n      error => {});\n    },\n    error => {});\n    \n    \n  }\n\n  removeoutcome(item){\n    this.controls = this.controls.filter(x=>x!==item);\n  }\n\n  getregionandata(){\n    if (this.outcome && this.determinant){\n      let query = {\n        \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n        \"groupinfo\": {}\n      };\n      query[\"groupinfo\"][this.level] = this.currentlevel;\n      query[\"showfields\"]=[this.outcome,this.determinant];\n      this.andata=null;\n      this.api.postTypeRequest('get_data/', query).subscribe(data => \n        {let res = data;this.andata=res['data'];});       \n     }\n  }\n  getregresults(){\n    if (this.outcome && this.determinant){\n    let anquery ={\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {},\n       \"theoutcome\": this.outcome,\n       \"maininterest\": this.determinant,\n       \"controls\": this.controls\n     };\n     anquery[\"groupinfo\"][this.level] = this.currentlevel;\n     this.regressiondata=null;\n     this.api.postTypeRequest('analytics/regression/', anquery).subscribe(data => \n       {let res = data;this.regressiondata=res;        \n      }); \n    };\n  }\n}","export default \".small {\\n  max-width: 450px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FtYnVsYW50ZV9ub3RmYWVsbGUvYW1idWxhbnRlX25vdGZhZWxsZS9EYXNoYm9hcmQvc3JjL2FwcC9wYWdlcy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc21hbGwge1xuICAgIG1heC13aWR0aDogNDUwcHg7XG59IiwiLnNtYWxsIHtcbiAgbWF4LXdpZHRoOiA0NTBweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \n \n@Component({ \n  selector: 'app-profile', \n  templateUrl: './profile.component.html', \n  styleUrls: ['./profile.component.scss'] \n}) \nexport class ProfileComponent implements OnInit { \n \n  constructor( \n    private api : ApiService, \n    private _auth: AuthService, \n    private router:Router\n  ) { } \n \n  userdetails:any;\n  pwdchange:any;\n  action:string;\n  pwdrequest:any;\n  deleterequest:any;\n  deleteresult:string;\n\n  ngOnInit(): void { \n    this.pwdrequest={'oldpwd':'','newpwd':''}\n    this.deleterequest={'pwd':''}\n    this.pwdchange= {'progress':false,'ok':false};\n    this.userdetails = this._auth.getUserDetails();\n    \n  } \n\n  chpwd(){\n    this.pwdchange['progress'] = true;\n    this.api.changeuserpwd(this.userdetails.email,this.pwdrequest.newpwd,this.pwdrequest.oldpwd).subscribe(data=>{\n    this.pwdchange['ok'] = true;\n    this.pwdchange['progress'] = false;\n    this.pwdchange['done'] = true;\n    setTimeout(()=>{\n      this.pwdchange= {'progress':false,'ok':false};this.action=''},1500);\n      this.pwdrequest={'oldpwd':'','newpwd':''};    \n  },\n  error => {\n    this.pwdchange['done'] = true;\n    this.pwdchange['progress'] = false;})\n  }\n\n  deleteaccount(){\n    this.api.deleteuser(this.userdetails.email,this.deleterequest.pwd).subscribe(\n      data => {\n        //this.deleteresult=\"success\";\n        //localStorage.clear();\n        //setTimeout(()=>{this.router.navigate(['/'])},3000);        \n      },\n      error => {this.deleteresult=\"error\";}\n    )\n  }\n}\n","export default \".box {\\n  background-color: #2b2b2b;\\n}\\n\\n.flagicon {\\n  font-size: 0.8rem;\\n  padding-left: 0.1rem;\\n  padding-bottom: 0.3rem;\\n}\\n\\n.brandingpicture {\\n  border-radius: 20px;\\n  background-size: cover;\\n  margin: -2em;\\n  margin-bottom: 2em;\\n  margin-top: 1em;\\n  padding: 2em;\\n  filter: contrast(1.3);\\n  filter: grayscale(1);\\n  min-height: 200px;\\n  color: #7c7c7c;\\n  background-image: url('pexels-karolina-grabowska-4386466.jpg');\\n}\\n\\n.smallheader {\\n  color: inherit;\\n  padding: 0px;\\n  background-image: none;\\n  min-height: 0px;\\n  margin: 0px;\\n}\\n\\n.right {\\n  text-align: right;\\n}\\n\\n.minheight {\\n  margin-bottom: 2rem;\\n}\\n\\n.fakecontent {\\n  background-color: rgba(255, 255, 255, 0.185);\\n  color: rgba(255, 255, 255, 0.466);\\n  border-radius: 15px;\\n  text-align: center;\\n  vertical-align: middle;\\n  min-height: 150px;\\n  height: 100%;\\n}\\n\\n.grey {\\n  stroke: rgba(255, 255, 255, 0.466) !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FtYnVsYW50ZV9ub3RmYWVsbGUvYW1idWxhbnRlX25vdGZhZWxsZS9EYXNoYm9hcmQvc3JjL2FwcC9wYWdlcy9zdGFydC9zdGFydC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvc3RhcnQvc3RhcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQ0NKOztBREdBO0VBQ0ksaUJBQUE7RUFDQSxvQkFBQTtFQUNBLHNCQUFBO0FDQUo7O0FER0E7RUFDSSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxxQkFBQTtFQUNBLG9CQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0VBQ0EsOERBQUE7QUNBSjs7QURHRTtFQUNFLGNBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtBQ0FKOztBREdFO0VBQ0ksaUJBQUE7QUNBTjs7QURHQztFQUNHLG1CQUFBO0FDQUo7O0FER0E7RUFDSSw0Q0FBQTtFQUNBLGlDQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsaUJBQUE7RUFDQSxZQUFBO0FDQUo7O0FERUE7RUFFUSw2Q0FBQTtBQ0FSIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvc3RhcnQvc3RhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYm94IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmIyYjJiO1xufVxuXG5cbi5mbGFnaWNvbiB7XG4gICAgZm9udC1zaXplOiAuOHJlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IC4xcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAuM3JlbTtcbn1cblxuLmJyYW5kaW5ncGljdHVyZSB7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIG1hcmdpbjogLTJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgbWFyZ2luLXRvcDogMWVtO1xuICAgIHBhZGRpbmc6IDJlbTtcbiAgICBmaWx0ZXI6IGNvbnRyYXN0KDEuMyk7XG4gICAgZmlsdGVyOiBncmF5c2NhbGUoMSkgO1xuICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICAgIGNvbG9yOnJnYigxMjQsIDEyNCwgMTI0KTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4vLi4vLi4vLi4vYXNzZXRzL2JyYW5kaW5nL3BleGVscy1rYXJvbGluYS1ncmFib3dza2EtNDM4NjQ2Ni5qcGcnKTtcbiAgfVxuXG4gIC5zbWFsbGhlYWRlciB7XG4gICAgY29sb3I6aW5oZXJpdDtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTpub25lO1xuICAgIG1pbi1oZWlnaHQ6IDBweDtcbiAgICBtYXJnaW46MHB4O1xuICB9XG5cbiAgLnJpZ2h0IHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG5cbiAubWluaGVpZ2h0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuXG4uZmFrZWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xODUpO1xuICAgIGNvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC40NjYpO1xuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgbWluLWhlaWdodDogMTUwcHg7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuLmdyZXkge1xuICAgIFxuICAgICAgICBzdHJva2U6cmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ2NikhaW1wb3J0YW50O1xuICAgICAgICBcbiAgICBcbn0iLCIuYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJiMmIyYjtcbn1cblxuLmZsYWdpY29uIHtcbiAgZm9udC1zaXplOiAwLjhyZW07XG4gIHBhZGRpbmctbGVmdDogMC4xcmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC4zcmVtO1xufVxuXG4uYnJhbmRpbmdwaWN0dXJlIHtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgbWFyZ2luOiAtMmVtO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIG1hcmdpbi10b3A6IDFlbTtcbiAgcGFkZGluZzogMmVtO1xuICBmaWx0ZXI6IGNvbnRyYXN0KDEuMyk7XG4gIGZpbHRlcjogZ3JheXNjYWxlKDEpO1xuICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgY29sb3I6ICM3YzdjN2M7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vLi4vLi4vLi4vYXNzZXRzL2JyYW5kaW5nL3BleGVscy1rYXJvbGluYS1ncmFib3dza2EtNDM4NjQ2Ni5qcGdcIik7XG59XG5cbi5zbWFsbGhlYWRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBwYWRkaW5nOiAwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gIG1pbi1oZWlnaHQ6IDBweDtcbiAgbWFyZ2luOiAwcHg7XG59XG5cbi5yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ubWluaGVpZ2h0IHtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cblxuLmZha2Vjb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE4NSk7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNDY2KTtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uZ3JleSB7XG4gIHN0cm9rZTogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ2NikgIWltcG9ydGFudDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SmedAggregationService } from 'src/app/services/smed-aggregation.service';\n\n\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n\n\n  constructor(private api: ApiService, private auth: AuthService, private smed:SmedAggregationService) { }\n  metadata=[];\n  progress:boolean;\n  metadataok: boolean;\n  mapdata: any;\n  mapdatafor: string;\n  sortdata=[];\n  level: any;\n  levelvalues: any;\n  subgroups: any;\n  outcomes: any;\n  determinants: any;\n  levelsettings = {};\n  data: any;\n  datakeys: any;\n  currentuser: any;\n  data_rate: any;\n  data_number: any;\n  geojson_available: any;\n  colorsscheme: any;\n  levelid:string;\n  datakeystable:any;  \n  \n  // SMED\n  stats_ts:any;\n  symptoms_list:any;\n  summaryinfo={};\n  smedrange={};\n  zeitaumoptions=[\"Letztes Jahr\",\"Aktuelles Jahr\",\"Gesamt\",\"Detailliert\"];\n  ts_results={};\n  utiltimes = [];\n  ngOnInit(): void {\n    this.levelsettings = {\"level\":\"KV\",\"levelvalues\":\"Gesamt\",\"zeitraum\":\"Gesamt\"};\n    this.summaryinfo[\"done\"]=false;\n    this.progress=true;\n    this.colorsscheme = [\"#e91e63\"];\n    this.mapdatafor = \"\";\n    this.data=[];\n    this.mapdata=[];\n    this.updatemetadata();\n    this.auth.currentUser.subscribe(data => { this.currentuser = data; });\n    if (this.metadataok) {this.querydatasmed();}\n    // Wait if no metadata and try again. Fixes logout behaviour\n    else {\n      setTimeout(() => {\n        this.updatemetadata();\n        if (this.metadataok) {\n          this.querydatasmed();\n        }\n        else {\n          this.progress=false;\n          \n        };\n      }, 1500);\n    }   \n    \n  }\n\n  ngOnDestroy(){\n    this.data=[];\n    this.mapdata=[];\n    \n    }\n\n\n  setlevel(level, value) {\n    this.progress = true;\n    this.levelsettings[level] = value;\n    this.querydatasmed();\n  }\n\n  updatemetadata() {\n    if (this.api.getmetadata(\"metadata\")){\n    this.metadata = this.api.getmetadata(\"metadata\");\n    this.sortdata = this.api.getmetadata(\"sortdata\");\n    this.geojson_available = this.api.getmetadata(\"geodata\");\n    }\n    if(this.metadata!==undefined){\n      if (this.metadata.length>0){\n        this.dometasettings();\n      }      \n    }\n    setTimeout(() => {\n      if ((this.metadata !==undefined ) && (this.sortdata !== undefined)) {\n        if (this.metadata.length > 0) {\n          this.dometasettings();\n        }\n      }\n      else {\n        this.metadataok = false;\n        this.progress=false;\n      }  \n      \n    }, 1500);    \n  }\n\n  thereisdata() {\n    let res = false\n    res = this.data\n    // if (res) {\n    //   res = (this.data.length > 0) && (this.metadata.length > 0);\n    // }\n    return res\n  }\n\n  dometasettings(){\n    this.level = this.api.filterArray(this.metadata, \"type\", \"level\")[0][\"varname\"];\n          this.levelid=this.api.filterArray(this.metadata,\"type\",\"levelid\")[0]['varname'];\n          this.levelvalues = this.api.filterArray(this.sortdata, \"varname\", this.levelid)[0][\"values\"];\n          this.subgroups = [\"Keine\"].concat(this.api.getValues(this.api.filterArray(this.metadata, \"type\", \"group\"), \"varname\"));\n          if (this.subgroups) { this.levelsettings[\"subgroups\"] = this.subgroups[0]; }\n          this.outcomes = this.api.getValues(this.api.sortArray(this.api.filterArray(this.metadata, \"topic\", \"outcomes\"), \"varname\"), \"varname\");\n          this.determinants = this.api.getValues(this.api.sortArray(this.api.filterArray(this.metadata, \"topic\", \"demography\"), \"varname\"), \"varname\");\n          if (this.outcomes) { this.levelsettings[\"outcomes\"] = this.outcomes[0]; }\n          this.metadataok = true;\n          this.progress=false;          \n  }\n  thereismapdata() {\n    let res = this.thereisdata() && this.mapdata\n    return res\n  }\n\n  querydata() {\n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID      \n    };\n    let outcomeinfo = this.api.filterArray(this.metadata, \"varname\", this.levelsettings[\"outcomes\"])[0]['type'];\n    query[\"groupinfo\"][this.level] = this.levelsettings[\"levelvalues\"];\n    this.api.postTypeRequest('get_data/', query).subscribe(data => {\n      this.datakeys = Object.keys(data[\"data\"][0]);\n      this.datakeystable = Object.keys(data[\"data\"][0]);\n      this.data = data[\"data\"] ;\n      const index = this.datakeys.indexOf(this.level);\n      if (index > -1) {\n        this.datakeys.splice(index, 1);\n      }\n      if (this.levelsettings['levelvalues']!=this.levelvalues[0]){\n        this.datakeys = [this.levelid,this.levelsettings[\"outcomes\"]];\n      }\n      else {\n        this.datakeys = this.datakeys.filter(item => item!=this.levelid);\n      }\n\n      \n      // Remove unneeded fields\n      setTimeout(() => { \n      if (outcomeinfo == 'rate') {\n        this.data_number = [];\n        this.data_rate = [(this.levelsettings[\"outcomes\"])];\n      }\n      else {\n        this.data_number = [(this.levelsettings[\"outcomes\"])];\n        this.data_rate = [];\n      };\n    }, 0);\n      \n      \n      if ((this.mapdatafor !== this.levelsettings['levelvalues']) && (this.levelsettings['levelvalues'] !== this.levelvalues[0]) && (this.geojson_available.indexOf(this.levelsettings['levelvalues']) >= 0)) {\n        this.api.getTypeRequest('get_geodata/?client_id=' + this.api.REST_API_SERVER_CLIENTID + '&levelname=' + this.levelsettings['levelvalues']).subscribe(\n          data => {\n            this.mapdata = data;\n            this.mapdatafor = this.levelsettings['levelvalues'];\n          },\n          error => {\n            this.mapdata=null;\n          });\n      }\n    });\n\n \n  }\n\n  querydatasmed(){\n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID      ,\n      \"groupinfo\":{}\n    };\n\n    query[\"groupinfo\"][\"level\"] = \"KV\"\n    query[\"groupinfo\"][\"levelid\"] = this.levelsettings[\"levelvalues\"];\n    query[\"showfields\"]=this.api.getValues(this.api.filterArray(this.metadata,\"topic\",\"outcomes\"),\"varname\");\n    this.api.postTypeRequest('get_data/', query).subscribe(\n      data => {this.data = data[\"data\"][0];\n      this.makesmeditems();this.progress=false;},\n      error => {this.data = NaN;this.progress=false;});\n  }\n\n  querysmedts(groupvars=[],outcome=\"\",resultname,sort=false,topx:any=false,filtervar=\"\",filtervalues=[],topxvar=\"\"){\n    if (!this.currentuser){\n      return;\n    }\n    if (this.levelsettings[\"zeitraum\"]!==\"Gesamt\") {    \n    let query = {\n      \"startdate\": this.levelsettings['start'].toISOString().slice(0,10),\n      \"stopdate\": this.levelsettings['end'].toISOString().slice(0,10),\n      \"subgroups\": groupvars    ,\n      \"filterlist\": []\n    }\n    query[\"filterlist\"].push({\"level\":\"KV\"});\n    if (this.levelsettings[\"levelvalues\"]!==\"Gesamt\"){\n      query[\"filterlist\"].push({\"levelid\":this.levelsettings[\"levelvalues\"]});\n    }\n    if (outcome!=\"\"){\n      query[\"outcome\"]=outcome;\n    }\n    let tofilter = false;\n    if (filtervar!==\"\" && filtervalues.length>0){tofilter=true};    \n    return this.api.postTypeRequest('analytics/timeseries/', query).subscribe(\n      data => {\n        let res = data[\"result\"];\n        if (sort){\n          res = this.api.sortArray(res,\"count\",\"descending\");\n        }\n        if (topx && topxvar==''){\n          res = res.slice(0,topx);\n        }\n        if (tofilter){\n          res = this.api.filterArraybyList(res,filtervar,filtervalues);\n        }\n        if (topx && topxvar!==''){\n          let keycounts = {};\n          for (let item of res){\n            if (keycounts[item[topxvar]] && Math.round(item['count'])){\n              keycounts[item[topxvar]]=keycounts[item[topxvar]]+item['count'];\n            }\n            if (!keycounts[item[topxvar]] && Math.round(item['count'])) {\n              keycounts[item[topxvar]]=item['count'];\n            }\n          }\n          let keycountsarray= [];\n          for (let key of Object.keys(keycounts)){\n            keycountsarray.push({\"name\":key,\"count\":keycounts[key]})\n          }\n          let filterlist = this.api.getValues(this.api.sortArray(keycountsarray,'count',\"descending\").slice(0,topx),\"name\");\n          res= this.api.filterArraybyList(res,topxvar,filterlist);\n        }\n        this.ts_results[resultname]= res;\n        \n      },        \n      error => {this.ts_results[resultname]=[];});\n    }\n    else {\n      this.ts_results[resultname]=[];\n    };     \n  }\n\n  makesmeditems(){\n    this.summaryinfo[\"done\"]=false;\n    let statswdate = this.smed.adddate(this.data[\"stats\"],\"Jahr\",\"KW\");    \n    let symptoms_list = this.smed.adddatemonth(this.data[\"mainsymptoms_ts\"] ,\"Jahr\",\"Monat\");  \n    let utiltimes = this.smed.adddatemonth(this.data[\"timestats\"],\"Jahr\",\"Monat\");\n    // Appply date filters\n    if (this.levelsettings[\"zeitraum\"]!==\"Gesamt\"){\n      this.levelsettings[\"anperioddays\"]=65;\n      let today = new Date();\n      today.setHours(0);\n      today.setMinutes(0);\n      today.setSeconds(0);\n      today.setMilliseconds(0);\n      let startdate = this.levelsettings[\"start\"];\n      let enddate = this.levelsettings[\"end\"];\n      if (this.levelsettings[\"zeitraum\"]==\"Aktuelles Jahr\"){\n        startdate = new Date(today.getFullYear()+\"-01-01\")\n        enddate = new Date(today.getFullYear()+\"-12-31\")\n      }\n      if (this.levelsettings[\"zeitraum\"]==\"Letztes Jahr\"){\n        startdate = new Date(today.getFullYear()-1+\"-01-01\")\n        enddate = new Date(today.getFullYear()-1+\"-12-31\")\n      }\n      let millisperday = 1000*60*60*24;\n      if (this.levelsettings[\"zeitraum\"]==\"Letzte 4 Wochen\"){\n        enddate = new Date(today.getTime() - today.getDay()*millisperday);\n        startdate = new Date(enddate.getTime()-((4*7)-1)*millisperday);        \n      }\n      if (this.levelsettings[\"zeitraum\"]==\"Letzte Woche\"){\n        enddate = new Date(today.getTime() - today.getDay()*millisperday);\n        startdate = new Date(enddate.getTime()-((6))*millisperday);        \n      }\n      for (let item of statswdate){\n        item[\"touse\"]=(item[\"Datum\"]>=startdate) && (item[\"Datum\"]<=enddate);          \n      }\n      for (let item of symptoms_list){\n        item[\"touse\"]=(item[\"Datum\"]>=startdate) && (item[\"Datum\"]<=enddate);                \n      }\n      for (let item of utiltimes){\n        item[\"touse\"]=(item[\"Datum\"]>=startdate) && (item[\"Datum\"]<=enddate);                \n      }\n\n      statswdate = this.api.filterArray(statswdate,\"touse\",true); \n      symptoms_list = this.api.filterArray(symptoms_list,\"touse\",true); \n      utiltimes = this.api.filterArray(utiltimes,\"touse\",true);\n      \n      this.levelsettings[\"anperioddays\"]= Math.floor((enddate-startdate)/millisperday);\n      this.levelsettings[\"start\"]=startdate;\n      this.levelsettings[\"end\"]=enddate;\n      this.progress=false;\n    }\n\n    utiltimes = this.api.groupbysum(utiltimes,\"wd\",\"h\",\"Anzahl\");\n    this.utiltimes = utiltimes;\n    for (let item of this.utiltimes){\n      item[\"Wochentag\"]=this.api.getweekdayname(item[\"wd\"]);\n    }\n    \n    \n    \n    \n    this.stats_ts=statswdate;\n    for (let item of this.stats_ts) {\n      item[\"Mittlere Dauer (Min.)\"]=(item[\"Dauer_sek\"]/item[\"Anzahl\"])/60;                \n      if (item[\"Dauer_sek\"]==0){\n        item[\"Mittlere Dauer (Min.)\"]=null;\n      }\n      item[\"Mittlere Anzahl Fragen\"]=item[\"Anzahl_Fragen\"]/item[\"Anzahl\"];                \n      if (item[\"Anzahl_Fragen\"]==0){\n        item[\"Mittlere Anzahl Fragen\"]=null;\n      }\n    };\n    if (statswdate.length>0){\n    symptoms_list = this.smed.aggsymptoms(symptoms_list);\n    this.symptoms_list=symptoms_list.slice(0,20);\n    this.summaryinfo[\"Assessments Gesamt\"]=this.api.sumArray(this.api.getValues(this.stats_ts,\"Anzahl\"));\n    this.summaryinfo[\"Assessments pro Woche\"]=this.summaryinfo[\"Assessments Gesamt\"]/this.api.getValues(this.stats_ts,\"Anzahl\").length;\n    this.summaryinfo[\"Mittlere Dauer\"]=this.api.sumArray(this.api.getValues(this.stats_ts,\"Dauer_sek\"))/this.summaryinfo[\"Assessments Gesamt\"];\n    this.summaryinfo[\"Beginn\"] = new Date(Math.min(...this.api.getValues(this.stats_ts,\"Datum\")));\n    this.summaryinfo[\"Ende\"] = new Date(Math.max(...this.api.getValues(this.stats_ts,\"Datum\")));\n    this.summaryinfo[\"done\"]=true;    \n    }\n\n\n\n    if (this.levelsettings[\"anperioddays\"]<=64 && (this.levelsettings[\"zeitraum\"]!==\"Gesamt\")){\n    // Query TS Data;\n          // Keys:\n          // 'timestamp', 'Dauer_sek', 'Geschlecht', 'ALTER_text', 'ALTER_id', 'TTTsmed_text', 'TTTsmed_id', 'POCsmed_text', 'POCsmed_id', 'SMED_Level', 'levelid', 'Hauptbeschwerde', 'Nebenbeschwerden', 'level', 'client_id'\n          this.ts_results={};\n          //this.querysmedts(['TTTsmed_text', 'TTTsmed_id', 'POCsmed_text', 'POCsmed_id'],\"\",\"1_dingl_ort\");\n          // HIER SPÄTER Abweichung zwischen Empfehlung und Entscheidung: 2_abweichung\n          // 3_dauer_sympt top 20         \n          //this.querysmedts(['Hauptbeschwerde'],\"Dauer_sek\",'3_dauer_sympt',true,20);\n          // 4_dringl_symp\n          //this.querysmedts(['Hauptbeschwerde','TTTsmed_text'],\"\",'4_dringl_symp',false,20,\"\",[],'Hauptbeschwerde');\n  \n        }\n      }\n\n  smeddetailquery(){\n    if (this.levelsettings[\"start\"] && this.levelsettings[\"end\"]){\n      this.querydatasmed();\n    }    \n  }\n}\n","import { Injectable } from '@angular/core'; \nimport { HttpClient, HttpHeaders , HttpParams } from '@angular/common/http'; \nimport { map } from 'rxjs/operators'; \nimport { retry,timeout } from 'rxjs/operators';\nimport * as chroma from \"chroma-js\";\n\n@Injectable({ \n  providedIn: 'root' \n}) \nexport class ApiService { \n \n \n  public REST_API_SERVER =  \"https://zidashboardapi.azurewebsites.net/\" ; // \"http://localhost:8000/\" //  \"https://zidashboardapi.azurewebsites.net/\" \n  public REST_API_SERVER_CLIENTID = \"smed_reporting\"; \n  public primarycolor = \"#2196f3\"; // \"#e91e63\";\n  public accentcolor = \"#e3714e1\";\n  public warncolor = \"#e1149b\";\n  \n  constructor(private httpClient: HttpClient) { } \n \n  public  getTypeRequest(url) { \n    return this.httpClient.get(this.REST_API_SERVER+url).pipe(map(res => { \n      return res; \n    })).pipe(timeout(3500),retry(5)); \n  } \n \n  public  postTypeRequest(url, payload) { \n    return this.httpClient.post(this.REST_API_SERVER+url, payload).pipe(map(res => { \n      return res; \n    })).pipe(timeout(1500),retry(3)); ; \n  } \n\n  public  getTypeRequestnotimeout(url) { \n    return this.httpClient.get(this.REST_API_SERVER+url).pipe(map(res => { \n      return res; \n    })).pipe(retry(1)); \n  } \n \n  public  postTypeRequestnotimeout(url, payload) { \n    return this.httpClient.post(this.REST_API_SERVER+url, payload).pipe(map(res => { \n      return res; \n    })).pipe(retry(1)); ; \n  } \n  \n  \n// Specific Requests\n\npublic updateuser(user,setting,value){\n  let payload = {'email' : user,'key':setting,'value':value};\n  return this.postTypeRequest('userstatus', payload);\n}\n\npublic deleteuser(user,password=\"\"){\n  let payload = {\"email\":user};\n  if (password!=\"\"){payload[\"password\"]=password};\n  return this.postTypeRequest('deleteuser', payload);\n}\n\npublic changeuserpwd(user,newpwd,oldpwd=\"\"){\n  let payload = {\"newpassword\":newpwd,email:user};\n  if (oldpwd!=\"\"){\n    payload[\"oldpassword\"]=oldpwd;\n  }\n  return this.postTypeRequest('changepwd', payload);\n}\n\n\n// Data APIs\npublic getValues(array, key) {\n  let values = [];\n  for (let item of array){\n    values.push(item[key]);\n  }\n  return values;\n}\npublic  getKeys(array){\n return Object.keys(array[0]);\n}\n\npublic  getOptions(array, key){\n return array.map(item => item[key])\n .filter((value, index, self) => self.indexOf(value) === index)\n}\n\npublic  filterArray(array,key,value){\n let i =0\n let result = []\n for (let item of array){\n   if (item[key]==value){result.push(item)};\n   i = i+1\n }\n return result\n}\n\npublic  filterArraybyList(array,key,list){\n  let i =0\n  let result = []\n  for (let item of array){\n    if (list.indexOf(item[key])>=0){result.push(item)};\n    i = i+1\n  }\n  return result\n }\n\npublic  getmetadata(name){\n  return JSON.parse(localStorage.getItem(name));\n}\n  \npublic sortArray(array, key, order = \"ascending\") {\n  let result = array;\n  if (order == \"ascending\") {\n    return result.sort((a, b) => (a[key] < b[key] ? -1 : 1));\n  }\n  else {\n    return result.sort((a, b) => (a[key] > b[key] ? -1 : 1));\n  }\n\n\n\n}\n\npublic sumArray(array) {\n  return array.reduce((a, b) => a + b, 0);\n}\n\npublic getuniqueValues(array, key) {\n  let items = this.getValues(array, key);\n  return [...new Set(items)];\n}\n\n\npublic groupbysum(array,key1,key2=\"\",outcome){\n  let result = [];\n  let valueskey1= this.getuniqueValues(array,key1);\n  let valueskey2= [];\n  if (key2!=\"\"){\n    valueskey2= this.getuniqueValues(array,key2);\n  }\n\n  for (let value of valueskey1){\n    let keyvalues = this.filterArray(array,key1,value);\n\n    if (key2==\"\"){\n      let topush = {};\n      topush[key1]=value;      \n      topush[outcome]=this.sumArray(this.getValues(keyvalues,outcome));\n      result.push(topush);\n    }\n    if (key2!==\"\"){\n      for (let k2value of valueskey2){\n        let topush = {};\n        topush[key1]=value;      \n        topush[key2]=k2value;      \n        topush[outcome]=this.sumArray(this.getValues(this.filterArray(keyvalues,key2,k2value),outcome));\n        result.push(topush);\n      }\n      \n    };\n  }\n  return result;\n}\n\npublic getweekdayname(dayofweek){\n  let days = [\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\",\"Sonntag\"];\n  return days[dayofweek-1];\n}\n\npublic splitarraybykey(array,splitkey){\n  let res = []\n  let splitvalues = this.getuniqueValues(array,splitkey);\n  for (let value of splitvalues){\n    res.push(this.filterArray(array,splitkey,value));\n  }\n  return res = [];\n}\n\npublic makescale(bins=5){\n  return chroma.scale([chroma(this.primarycolor).set('hsl.h', +70),this.primarycolor]).colors(bins); }\n}\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\nconstructor(\n    private _authService: AuthService,\n    private _router: Router\n  ) { }\n\n\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    if (userdata) {\n      result = true;\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n  canActivateAdmin(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    if (userdata){\n    if (userdata[\"is_admin\"] || userdata[\"is_superadmin\"]) {\n      result = true;\n    }\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n}","import { Injectable } from '@angular/core'; \nimport { ApiService } from './api.service';\nimport {HttpClient, HttpParams , HttpHeaders} from '@angular/common/http';  \nimport { Router } from '@angular/router'; \nimport { BehaviorSubject, Observable, Observer, fromEvent, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ \n    providedIn: 'root' \n}) \n\n  \nexport class AuthService { \n    private currentUserSubject: BehaviorSubject<any>;\n    public currentUser: Observable<any>;\n\n    constructor(\n        private http:HttpClient,\n        private _api:ApiService,\n        private router:Router) { \n            this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('userInfo')));\n            this.currentUser = this.currentUserSubject.asObservable();    \n    } \n\n    public get currentUserValue(): any {\n        return this.currentUserSubject.value;\n      }\n\n    OnlineStatus() {\n        return merge<boolean>(\n          fromEvent(window, 'offline').pipe(map(() => false)),\n          fromEvent(window, 'online').pipe(map(() => true)),\n          new Observable((sub: Observer<boolean>) => {\n            sub.next(navigator.onLine);\n            sub.complete();\n          }));\n      }\n    \n    login(formdata){ \n        let b = formdata;\n        const payload = new HttpParams()\n          .set('username', b.username)\n          .set('password', b.password)\n          .set('client_id', this._api.REST_API_SERVER_CLIENTID);\n          return this._api.postTypeRequest('login', payload).pipe(map(user => {\n            return this.logintasks(user);\n                  }));\n      }\n \n    logintasks(user){\n        this.setDataInLocalStorage('refresh_token', user.refresh_token);\n        this.setDataInLocalStorage('access_token', user.access_token);\n        this.storeUserDetails(user.user);\n        this.currentUserSubject.next(user.user);\n        return user;\n    }\n    \n    adduser(data){\n        return this._api.postTypeRequest('newuser', data); \n    }\n    \n    refreshToken(){\n        return this.http.post(this._api.REST_API_SERVER+'login/refresh/',{refresh:true}).subscribe(\n            data=>{\n                let result :any = data;\n                this.setDataInLocalStorage('access_token',result.access_token);\n\n            },\n            error => {}\n        )\n    }\n\n    storeUserDetails(data) { \n        return localStorage.setItem('userInfo', JSON.stringify(data));\n    } \n\n    public getUserDetails() { \n        return localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : false; \n    } \n     \n    setDataInLocalStorage(variableName, data) { \n        localStorage.setItem(variableName, data); \n    } \n \n    public getToken() { \n        return localStorage.getItem('access_token'); \n    } \n\n    public getRefreshToken() { \n        return localStorage.getItem('refresh_token'); \n    } \n \n    public logout(){\n        localStorage.clear(); \n        this.currentUserSubject.next(null);        \n    } \n\n    public updateUserData(){\n        return this._api.getTypeRequest('users/profile/')\n    }\n    \n\n    public gettokeninfo() {\n        let token = this.getToken();\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    return JSON.parse(jsonPayload);\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { ApiService } from './api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService {\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(\n    private router: Router,\n    private _auth: AuthService,\n    private _api: ApiService\n  ) {\n  }\n  apiurl = this._api.REST_API_SERVER;\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (request.url.includes(this.apiurl) && !request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getToken()}`\n        }\n\n      });\n    }\n    if (request.url.includes(this.apiurl) && request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getRefreshToken()}`\n        }\n\n      });\n    }\n\n\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n\n        // Refresh if token has expired and Userdetails not null\n        if (request.url.includes(this.apiurl) && this._auth.getUserDetails() &&\n          error.status == 401 && !this.refreshTokenInProgress) {\n          this.refreshTokenInProgress = true;\n          this._auth.refreshToken();\n        }\n\n        // Logout on Refresh error\n        if (request.url.includes(this.apiurl) &&  request.url.includes(\"login/refresh\") && error.status == 422) {\n          this.refreshTokenInProgress = false;\n          this._auth.logout();\n          this.router.navigate([\"/\"]);\n        }\n\n        return throwError(error);\n      }\n\n      ))\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'replace'})\nexport class ReplacePipe implements PipeTransform {\n  transform(value: string, strToReplace: string, replacementStr: string): string {\n\n    if(!value || ! strToReplace || ! replacementStr)\n    {\n      return value;\n    }\n\n return value.replace(new RegExp(strToReplace, 'g'), replacementStr);\n  }\n}","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmedAggregationService {\n\n  constructor(private api:ApiService) { }\n\nadddate(Array,yearvar,isoweekvar){\n  for (const item of Array){\n    item[\"Datum\"]=this.getDateOfISOWeek(item[isoweekvar],item[yearvar]);\n  }\n  return Array;\n}\n\nadddatemonth(Array,yearvar,monthvar){\n  for (const item of Array){\n    item[\"Datum\"]=new Date(item[yearvar]+\"-\"+item[monthvar]+\"-01\");\n  }\n  return Array;\n}\n\ngetDateOfISOWeek(w, y) {\n  let millisperday = 1000*60*60*24;\n  let yearstart = new Date(y+\"-01-01\");\n  yearstart=new Date(yearstart.getTime()-(yearstart.getDay()-1)*millisperday)\n  let ISOweekStart = new Date(yearstart.getTime()+millisperday*7*(w+1));\n  return ISOweekStart;\n}\n\naggsymptoms(symptomsobject){\n  let inputarray = [];\n  let output = {};\n  let res = [];\n  for (let item of symptomsobject){\n    inputarray=inputarray.concat(item[\"Symptome\"])\n  }\n\n  for (let item of inputarray){\n    if (output[item.name]!==undefined){\n      output[item.name]=output[item.name]+item[\"n\"];\n    }\n    else {\n      output[item.name]=item[\"n\"];\n    }\n  }\n  output[\"Keine Angabe\"]=output[\"\"];\n  delete output[\"\"];\n  for (let thekey in Object.keys(output)){\n    res.push({\"name\":Object.keys(output)[thekey],\"n\":Object.values(output)[thekey]});\n  }\n\n  return this.api.sortArray(res,\"n\",\"descending\");\n\n\n}\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule}from '@angular/material/toolbar';\nimport { MatIconModule}from '@angular/material/icon';\nimport { MatListModule}from '@angular/material/list';\nimport { MatCardModule}from '@angular/material/card';\nimport { MatButtonModule}from '@angular/material/button';\nimport {MatTableModule}from '@angular/material/table';\nimport {   MatDialogModule}from '@angular/material/dialog';\nimport { MatInputModule  }from '@angular/material/input';\nimport { MatSelectModule  }from '@angular/material/select';\nimport { MatGridListModule  }from '@angular/material/grid-list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,  \n    FormsModule,\n    MatSliderModule,  \n    MatSidenavModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule\n\n\n    \n  ],\n  exports: [\n    MatSidenavModule,\n    MatSliderModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule,\n  \n    \n  ]\n})\nexport class MaterialModule { }\n\n"],"sourceRoot":"webpack:///"}